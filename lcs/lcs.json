{
  "meta": {
    "last_update": 1755892625442,
    "version": "0.15",
    "url": "https://library.sannybuilder.com/#/lcs"
  },
  "extensions": [
    {
      "name": "default",
      "commands": [
        {
          "id": "0000",
          "name": "NOP",
          "num_params": 0,
          "short_desc": "Has no effect and is commonly used to pad CLEO scripts with extra space to avoid the jump-at-zero-offset bug",
          "attrs": {}
        },
        {
          "input": [
            {
              "name": "time",
              "type": "int"
            }
          ],
          "attrs": {},
          "id": "0001",
          "name": "WAIT",
          "num_params": 1,
          "short_desc": "Pauses the script execution for specified amount of time in milliseconds"
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "attrs": {
            "is_branch": true,
            "is_segment": true
          },
          "id": "0002",
          "name": "GOTO",
          "num_params": 1,
          "short_desc": "Transfers the script execution to the label unconditionally"
        },
        {
          "input": [
            {
              "name": "intensity",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0003",
          "member": "Shake",
          "name": "SHAKE_CAM",
          "num_params": 1,
          "short_desc": "Shakes the camera with the given intensity"
        },
        {
          "id": "0004",
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "name": "SET_VAR_INT",
          "num_params": 2,
          "short_desc": "Sets the integer value of the VAR"
        },
        {
          "id": "0005",
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "name": "SET_VAR_FLOAT",
          "num_params": 2,
          "short_desc": "Sets the float value of the VAR"
        },
        {
          "id": "0006",
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "name": "SET_LVAR_INT",
          "num_params": 2,
          "short_desc": "Sets the integer value of the LVAR"
        },
        {
          "id": "0007",
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "name": "SET_LVAR_FLOAT",
          "num_params": 2,
          "short_desc": "Sets the float value of the LVAR"
        },
        {
          "id": "0008",
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "name": "ADD_VAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Adds the value to the value of the int VAR"
        },
        {
          "id": "0009",
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "name": "ADD_VAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Adds the value to the value of the float VAR"
        },
        {
          "id": "000A",
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "name": "ADD_VAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Adds the value to the value of the integer LVAR"
        },
        {
          "id": "000B",
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "name": "ADD_VAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Adds the value to the value of the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "000C",
          "name": "SUB_VAL_FROM_INT_VAR",
          "num_params": 2,
          "short_desc": "Subtracts the value from the value of the integer VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "000D",
          "name": "SUB_VAL_FROM_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Subtracts the value from the value of the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "000E",
          "name": "SUB_VAL_FROM_INT_LVAR",
          "num_params": 2,
          "short_desc": "Subtracts the value from the value of the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "000F",
          "name": "SUB_VAL_FROM_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Subtracts the value from the value of the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "0010",
          "name": "MULT_INT_VAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Multiplies the int VAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "0011",
          "name": "MULT_FLOAT_VAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Multiplies the float VAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "0012",
          "name": "MULT_INT_LVAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Multiplies the int LVAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "0013",
          "name": "MULT_FLOAT_LVAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Multiplies the float LVAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "0014",
          "name": "DIV_INT_VAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Divides the int VAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "0015",
          "name": "DIV_FLOAT_VAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Divides the float VAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "0016",
          "name": "DIV_INT_LVAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Divides the int LVAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "0017",
          "name": "DIV_FLOAT_LVAR_BY_VAL",
          "num_params": 2,
          "short_desc": "Divides the float LVAR by the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0018",
          "name": "IS_INT_VAR_GREATER_THAN_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is greater than the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0019",
          "name": "IS_INT_LVAR_GREATER_THAN_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is greater than the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "001A",
          "name": "IS_NUMBER_GREATER_THAN_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the value is greater than the int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "001B",
          "name": "IS_NUMBER_GREATER_THAN_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the value is greater than the int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "001C",
          "name": "IS_INT_VAR_GREATER_THAN_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is greater than the other int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "001D",
          "name": "IS_INT_LVAR_GREATER_THAN_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is greater than the other int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "001E",
          "name": "IS_INT_VAR_GREATER_THAN_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is greater than the int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "001F",
          "name": "IS_INT_LVAR_GREATER_THAN_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is greater than the int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0020",
          "name": "IS_FLOAT_VAR_GREATER_THAN_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is greater than the float value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0021",
          "name": "IS_FLOAT_LVAR_GREATER_THAN_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is greater than the float value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "literal"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0022",
          "name": "IS_NUMBER_GREATER_THAN_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float value is greater than the float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "literal"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0023",
          "name": "IS_NUMBER_GREATER_THAN_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float value is greater than the float LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0024",
          "name": "IS_FLOAT_VAR_GREATER_THAN_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is greater than the other float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0025",
          "name": "IS_FLOAT_LVAR_GREATER_THAN_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is greater than the other float LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0026",
          "name": "IS_FLOAT_VAR_GREATER_THAN_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is greater than the float LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0027",
          "name": "IS_FLOAT_LVAR_GREATER_THAN_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is greater than the float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0028",
          "name": "IS_INT_VAR_GREATER_OR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is greater or equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0029",
          "name": "IS_INT_LVAR_GREATER_OR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is greater or equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "002A",
          "name": "IS_NUMBER_GREATER_OR_EQUAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the value is greater or equal to the int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "002B",
          "name": "IS_NUMBER_GREATER_OR_EQUAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the value is greater or equal to the int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "002C",
          "name": "IS_INT_VAR_GREATER_OR_EQUAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is greater or equal to the other int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "002D",
          "name": "IS_INT_LVAR_GREATER_OR_EQUAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is greater or equal to the other int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "002E",
          "name": "IS_INT_VAR_GREATER_OR_EQUAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is greater or equal to the int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "002F",
          "name": "IS_INT_LVAR_GREATER_OR_EQUAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is greater or equal to the int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0030",
          "name": "IS_FLOAT_VAR_GREATER_OR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is greater or equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0031",
          "name": "IS_FLOAT_LVAR_GREATER_OR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is greater or equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "literal"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0032",
          "name": "IS_NUMBER_GREATER_OR_EQUAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the value is greater or equal to the float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "literal"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0033",
          "name": "IS_NUMBER_GREATER_OR_EQUAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the value is greater or equal to the float LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0034",
          "name": "IS_FLOAT_VAR_GREATER_OR_EQUAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is greater or equal to the other float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0035",
          "name": "IS_FLOAT_LVAR_GREATER_OR_EQUAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is greater or equal to the other float LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0036",
          "name": "IS_FLOAT_VAR_GREATER_OR_EQUAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is greater or equal to the LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0037",
          "name": "IS_FLOAT_LVAR_GREATER_OR_EQUAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is greater or equal to the float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0038",
          "name": "IS_INT_VAR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0039",
          "name": "IS_INT_LVAR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "003A",
          "name": "IS_INT_VAR_EQUAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is equal to the other int VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "003B",
          "name": "IS_INT_LVAR_EQUAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the int LVAR value is equal to the other int LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "003C",
          "name": "IS_INT_VAR_EQUAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the int VAR value is equal to the int LVAR value"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "003D",
          "name": "IS_INT_VAR_NOT_EQUAL_TO_NUMBER",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "003E",
          "name": "IS_INT_LVAR_NOT_EQUAL_TO_NUMBER",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "003F",
          "name": "IS_INT_VAR_NOT_EQUAL_TO_INT_VAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0040",
          "name": "IS_INT_LVAR_NOT_EQUAL_TO_INT_LVAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0041",
          "name": "IS_INT_VAR_NOT_EQUAL_TO_INT_LVAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0042",
          "name": "IS_FLOAT_VAR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0043",
          "name": "IS_FLOAT_LVAR_EQUAL_TO_NUMBER",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is equal to the value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0044",
          "name": "IS_FLOAT_VAR_EQUAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is equal to the other float VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0045",
          "name": "IS_FLOAT_LVAR_EQUAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float LVAR value is equal to the other float LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "0046",
          "name": "IS_FLOAT_VAR_EQUAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the float VAR value is equal to the float LVAR value"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0047",
          "name": "IS_FLOAT_VAR_NOT_EQUAL_TO_NUMBER",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0048",
          "name": "IS_FLOAT_LVAR_NOT_EQUAL_TO_NUMBER",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0049",
          "name": "IS_FLOAT_VAR_NOT_EQUAL_TO_FLOAT_VAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "004A",
          "name": "IS_FLOAT_LVAR_NOT_EQUAL_TO_FLOAT_LVAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "004B",
          "name": "IS_FLOAT_VAR_NOT_EQUAL_TO_FLOAT_LVAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_branch": true
          },
          "id": "004C",
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "name": "GOTO_IF_TRUE",
          "num_params": 1,
          "short_desc": "Transfers the script execution to the label if the condition result is true"
        },
        {
          "attrs": {
            "is_branch": true
          },
          "id": "004D",
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "name": "GOTO_IF_FALSE",
          "num_params": 1,
          "short_desc": "Transfers the script execution to the label if the condition result is false"
        },
        {
          "attrs": {
            "is_branch": true
          },
          "id": "004E",
          "name": "TERMINATE_THIS_SCRIPT",
          "num_params": 0,
          "short_desc": "Ends the current script, preventing further execution"
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            },
            {
              "name": "",
              "type": "arguments"
            }
          ],
          "id": "004F",
          "name": "START_NEW_SCRIPT",
          "num_params": 2,
          "short_desc": "Starts a new script at the specified label",
          "attrs": {}
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "attrs": {},
          "id": "0050",
          "name": "GOSUB",
          "num_params": 1,
          "short_desc": "Transfers the script execution to the label as a subroutine"
        },
        {
          "attrs": {},
          "id": "0051",
          "name": "RETURN",
          "num_params": 0,
          "short_desc": "Returns from the current subroutine (0050)"
        },
        {
          "input": [
            {
              "name": "f1",
              "type": "float"
            },
            {
              "name": "f2",
              "type": "float"
            },
            {
              "name": "f3",
              "type": "float"
            },
            {
              "name": "f4",
              "type": "float"
            },
            {
              "name": "f5",
              "type": "float"
            },
            {
              "name": "f6",
              "type": "float"
            }
          ],
          "id": "0052",
          "name": "LINE",
          "num_params": 6,
          "short_desc": "Displays 6 floating-point values on the screen",
          "class": "Debugger",
          "member": "Line",
          "attrs": {
            "is_nop": true,
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "playerIndex",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Player",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Player",
          "id": "0053",
          "member": "Create",
          "name": "CREATE_PLAYER",
          "num_params": 5,
          "short_desc": "Creates a player at the specified location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "0054",
          "member": "GetCoordinates",
          "name": "GET_PLAYER_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the player's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Player",
          "id": "0055",
          "member": "SetCoordinates",
          "name": "SET_PLAYER_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the player at the specified location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0056",
          "member": "IsInArea2D",
          "name": "IS_PLAYER_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player is within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0057",
          "member": "IsInArea3D",
          "name": "IS_PLAYER_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player is within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0058",
          "name": "ADD_INT_VAR_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Adds the int VAR value to the other int VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0059",
          "name": "ADD_FLOAT_VAR_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Adds the float VAR value to the other float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "005A",
          "name": "ADD_INT_LVAR_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Adds the int LVAR value to the other int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "005B",
          "name": "ADD_FLOAT_LVAR_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Adds the float LVAR value to the other float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "005C",
          "name": "ADD_INT_VAR_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Adds the int VAR value to the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "005D",
          "name": "ADD_FLOAT_VAR_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Adds the float VAR value to the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "005E",
          "name": "ADD_INT_LVAR_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Adds the float LVAR value to the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "005F",
          "name": "ADD_FLOAT_LVAR_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Adds the float LVAR value to the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0060",
          "name": "SUB_INT_VAR_FROM_INT_VAR",
          "num_params": 2,
          "short_desc": "Subtracts the int VAR value from the int VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0061",
          "name": "SUB_FLOAT_VAR_FROM_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Subtracts the float VAR value from the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0062",
          "name": "SUB_INT_LVAR_FROM_INT_LVAR",
          "num_params": 2,
          "short_desc": "Subtracts the int LVAR value from the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0063",
          "name": "SUB_FLOAT_LVAR_FROM_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Subtracts the float LVAR value from the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0064",
          "name": "SUB_INT_VAR_FROM_INT_LVAR",
          "num_params": 2,
          "short_desc": "Subtracts the int VAR value from the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0065",
          "name": "SUB_FLOAT_VAR_FROM_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Subtracts the float VAR value from the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0066",
          "name": "SUB_INT_LVAR_FROM_INT_VAR",
          "num_params": 2,
          "short_desc": "Subtracts the float LVAR value from the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0067",
          "name": "SUB_FLOAT_LVAR_FROM_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Subtracts the float LVAR value from the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0068",
          "name": "MULT_INT_VAR_BY_INT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the int VAR value by the int VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0069",
          "name": "MULT_FLOAT_VAR_BY_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the float VAR value by the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "006A",
          "name": "MULT_INT_LVAR_BY_INT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the int LVAR value by the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "006B",
          "name": "MULT_FLOAT_LVAR_BY_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the int LVAR value by the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "006C",
          "name": "MULT_INT_VAR_BY_INT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the int VAR value by the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "006D",
          "name": "MULT_FLOAT_VAR_BY_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the float VAR value by the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "006E",
          "name": "MULT_INT_LVAR_BY_INT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the int LVAR value by the int VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "006F",
          "name": "MULT_FLOAT_LVAR_BY_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the float LVAR value by the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0070",
          "name": "DIV_INT_VAR_BY_INT_VAR",
          "num_params": 2,
          "short_desc": "Divides the int VAR value by the int VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0071",
          "name": "DIV_FLOAT_VAR_BY_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Divides the float VAR value by the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0072",
          "name": "DIV_INT_LVAR_BY_INT_LVAR",
          "num_params": 2,
          "short_desc": "Divides the int LVAR by the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0073",
          "name": "DIV_FLOAT_LVAR_BY_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Divides the float LVAR by the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0074",
          "name": "DIV_INT_VAR_BY_INT_LVAR",
          "num_params": 2,
          "short_desc": "Divides the int VAR by the int LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0075",
          "name": "DIV_FLOAT_VAR_BY_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Divides the float VAR by the float LVAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0076",
          "name": "DIV_INT_LVAR_BY_INT_VAR",
          "num_params": 2,
          "short_desc": "Divides the int LVAR by the int VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0077",
          "name": "DIV_FLOAT_LVAR_BY_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Divides the float LVAR by the float VAR"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "0078",
          "name": "ADD_TIMED_VAL_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the specified value and adds the result to the specified variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "0079",
          "name": "ADD_TIMED_VAL_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the specified value and adds the result to the specified variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "007A",
          "name": "ADD_TIMED_FLOAT_VAR_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the float value of the specified global variable and adds the result to the specified global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "007B",
          "name": "ADD_TIMED_FLOAT_LVAR_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the float value of the specified local variable and adds the result to the specified local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "007C",
          "name": "ADD_TIMED_FLOAT_LVAR_TO_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the float value of the specified local variable and adds the result to the specified global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "007D",
          "name": "ADD_TIMED_FLOAT_VAR_TO_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the float value of the specified global variable and adds the result to the specified local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "007E",
          "name": "SUB_TIMED_VAL_FROM_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the specified float value and subtracts the result from the specified global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "literal"
            }
          ],
          "id": "007F",
          "name": "SUB_TIMED_VAL_FROM_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the specified value and subtracts the result from the specified local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0080",
          "name": "SUB_TIMED_FLOAT_VAR_FROM_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the value of the specified global variable and subtracts the result from the specified global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0081",
          "name": "SUB_TIMED_FLOAT_LVAR_FROM_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the value of the specified local variable and adds the result to the specified local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0082",
          "name": "SUB_TIMED_FLOAT_LVAR_FROM_FLOAT_VAR",
          "num_params": 2,
          "short_desc": "Multiplies the frame delta time (the time in milliseconds that has passed since the last frame) by float stored in the specified local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0083",
          "name": "SUB_TIMED_FLOAT_VAR_FROM_FLOAT_LVAR",
          "num_params": 2,
          "short_desc": "Multiplies the delta time since the last frame by the value of the specified global variable and subtracts the result from the specified local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "0084",
          "name": "SET_VAR_INT_TO_VAR_INT",
          "num_params": 2,
          "short_desc": "Sets the int VAR to the VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0085",
          "name": "SET_LVAR_INT_TO_LVAR_INT",
          "num_params": 2,
          "short_desc": "Sets the int LVAR to the LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0086",
          "name": "SET_VAR_FLOAT_TO_VAR_FLOAT",
          "num_params": 2,
          "short_desc": "Sets the float VAR to the VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0087",
          "name": "SET_LVAR_FLOAT_TO_LVAR_FLOAT",
          "num_params": 2,
          "short_desc": "Sets the float LVAR to the LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0088",
          "name": "SET_VAR_FLOAT_TO_LVAR_FLOAT",
          "num_params": 2,
          "short_desc": "Sets the float VAR to the LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "0089",
          "name": "SET_LVAR_FLOAT_TO_VAR_FLOAT",
          "num_params": 2,
          "short_desc": "Sets the float LVAR to the VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "008A",
          "name": "SET_VAR_INT_TO_LVAR_INT",
          "num_params": 2,
          "short_desc": "Sets the int VAR to the LVAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "008B",
          "name": "SET_LVAR_INT_TO_VAR_INT",
          "num_params": 2,
          "short_desc": "Sets the int LVAR to the VAR value"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "008C",
          "name": "CSET_VAR_INT_TO_VAR_FLOAT",
          "num_params": 2,
          "short_desc": "Converts the float in the second global variable to an integer (via flooring) and stores the integer into the first global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "008D",
          "name": "CSET_VAR_FLOAT_TO_VAR_INT",
          "num_params": 2,
          "short_desc": "Converts the integer value of the second global variable to a float and stores the result in the first global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            }
          ],
          "id": "008E",
          "name": "CSET_LVAR_INT_TO_VAR_FLOAT",
          "num_params": 2,
          "short_desc": "Converts the float value of the global variable to an integer (via flooring) and stores the result into a local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "id": "008F",
          "name": "CSET_LVAR_FLOAT_TO_VAR_INT",
          "num_params": 2,
          "short_desc": "Converts the integer value of the global variable to a float and then stores the result in the local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0090",
          "name": "CSET_VAR_INT_TO_LVAR_FLOAT",
          "num_params": 2,
          "short_desc": "Converts the float value of the local variable to an integer (via flooring) and stores the result to the global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0091",
          "name": "CSET_VAR_FLOAT_TO_LVAR_INT",
          "num_params": 2,
          "short_desc": "Converts the integer value of the local variable to a float and stores the result in the global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            }
          ],
          "id": "0092",
          "name": "CSET_LVAR_INT_TO_LVAR_FLOAT",
          "num_params": 2,
          "short_desc": "Converts a float value to an integer (via truncating)"
        },
        {
          "input": [
            {
              "name": "",
              "type": "float",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "id": "0093",
          "name": "CSET_LVAR_FLOAT_TO_LVAR_INT",
          "num_params": 2,
          "short_desc": "Converts the integer value of the second local variable to a float and stores the result to the first local variable"
        },
        {
          "output": [
            {
              "name": "number",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_overload": true,
            "is_static": true
          },
          "class": "Math",
          "id": "0094",
          "member": "Abs",
          "name": "ABS_VAR_INT",
          "num_params": 1,
          "short_desc": "Returns the absolute value of the global integer variable"
        },
        {
          "output": [
            {
              "name": "number",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_overload": true,
            "is_static": true
          },
          "class": "Math",
          "id": "0095",
          "member": "Abs",
          "name": "ABS_LVAR_INT",
          "num_params": 1,
          "short_desc": "Returns the absolute value of the local integer variable"
        },
        {
          "output": [
            {
              "name": "number",
              "type": "float",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_overload": true,
            "is_static": true
          },
          "class": "Math",
          "id": "0096",
          "member": "Abs",
          "name": "ABS_VAR_FLOAT",
          "num_params": 1,
          "short_desc": "Returns the absolute value of the global float variable"
        },
        {
          "output": [
            {
              "name": "number",
              "type": "float",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_overload": true,
            "is_static": true
          },
          "class": "Math",
          "id": "0097",
          "member": "Abs",
          "name": "ABS_LVAR_FLOAT",
          "num_params": 1,
          "short_desc": "Returns the absolute value of the local float variable"
        },
        {
          "output": [
            {
              "name": "",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_overload": true,
            "is_static": true
          },
          "class": "Math",
          "id": "0098",
          "member": "Random",
          "name": "GENERATE_RANDOM_FLOAT",
          "num_params": 1,
          "short_desc": "Returns a random float between 0.0 to 1.0"
        },
        {
          "output": [
            {
              "name": "",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_overload": true,
            "is_static": true
          },
          "class": "Math",
          "id": "0099",
          "member": "Random",
          "name": "GENERATE_RANDOM_INT",
          "num_params": 1,
          "short_desc": "Returns a random integer between 0 and 32767 (SA) or 65535 (III & VC)"
        },
        {
          "input": [
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "009A",
          "member": "Create",
          "name": "CREATE_CHAR",
          "num_params": 6,
          "short_desc": "Creates a character at the specified location, with the specified model and pedtype"
        },
        {
          "attrs": {
            "is_destructor": true
          },
          "class": "Char",
          "id": "009B",
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "member": "Delete",
          "name": "DELETE_CHAR",
          "num_params": 1,
          "short_desc": "Removes the character from the game and mission cleanup list, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "direction",
              "type": "WanderDirection"
            }
          ],
          "class": "Char",
          "id": "009C",
          "member": "WanderDir",
          "name": "CHAR_WANDER_DIR",
          "num_params": 2,
          "short_desc": "Sets the character's wander direction"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "009D",
          "name": "CHAR_WANDER_RANGE",
          "num_params": 0
        },
        {
          "id": "009E",
          "name": "CHAR_FOLLOW_PATH",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "009F",
          "member": "SetIdle",
          "name": "CHAR_SET_IDLE",
          "num_params": 1,
          "short_desc": "Sets the character's objective to stay idle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "00A0",
          "member": "GetCoordinates",
          "name": "GET_CHAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the character's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "00A1",
          "member": "SetCoordinates",
          "name": "SET_CHAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the character at the specified location"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Char",
          "id": "00A2",
          "member": "IsStillAlive",
          "name": "IS_CHAR_STILL_ALIVE",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid character handle who is still alive (opposite of IS_CHAR_DEAD)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00A3",
          "member": "IsInArea2D",
          "name": "IS_CHAR_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00A4",
          "member": "IsInArea3D",
          "name": "IS_CHAR_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Car",
          "id": "00A5",
          "member": "Create",
          "name": "CREATE_CAR",
          "num_params": 5,
          "short_desc": "Creates a vehicle at the specified location, with the specified model"
        },
        {
          "attrs": {
            "is_destructor": true
          },
          "class": "Car",
          "id": "00A6",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "member": "Delete",
          "name": "DELETE_CAR",
          "num_params": 1,
          "short_desc": "Removes the vehicle from the game"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "00A7",
          "member": "GotoCoordinates",
          "name": "CAR_GOTO_COORDINATES",
          "num_params": 4,
          "short_desc": "Makes the AI drive to the specified location by any means"
        },
        {
          "class": "Car",
          "id": "00A8",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "member": "WanderRandomly",
          "name": "CAR_WANDER_RANDOMLY",
          "num_params": 1,
          "short_desc": "Clears any current tasks the vehicle has and makes it drive around aimlessly"
        },
        {
          "class": "Car",
          "id": "00A9",
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "member": "SetIdle",
          "name": "CAR_SET_IDLE",
          "num_params": 1,
          "short_desc": "Sets the car's mission to idle (MISSION_NONE), stopping any driving activity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "00AA",
          "member": "GetCoordinates",
          "name": "GET_CAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the vehicle's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "00AB",
          "member": "SetCoordinates",
          "name": "SET_CAR_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the vehicle at the specified location"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Car",
          "id": "00AC",
          "member": "IsStillAlive",
          "name": "IS_CAR_STILL_ALIVE",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid vehicle handle that is still alive (opposite of IS_CAR_DEAD)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "maxSpeed",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "00AD",
          "member": "SetCruiseSpeed",
          "name": "SET_CAR_CRUISE_SPEED",
          "num_params": 2,
          "short_desc": "Sets the vehicle's max speed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "drivingStyle",
              "type": "DrivingMode"
            }
          ],
          "class": "Car",
          "id": "00AE",
          "member": "SetDrivingStyle",
          "name": "SET_CAR_DRIVING_STYLE",
          "num_params": 2,
          "short_desc": "Sets the behavior of the vehicle's AI driver"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "carMission",
              "type": "CarMission"
            }
          ],
          "class": "Car",
          "id": "00AF",
          "member": "SetMission",
          "name": "SET_CAR_MISSION",
          "num_params": 2,
          "short_desc": "Sets the mission of the vehicle's AI driver"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "00B0",
          "member": "IsInArea2D",
          "name": "IS_CAR_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the vehicle is located within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "00B1",
          "member": "IsInArea3D",
          "name": "IS_CAR_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the vehicle is located within the specified 3D area"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B2",
          "name": "SPECIAL_0",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B3",
          "name": "SPECIAL_1",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B4",
          "name": "SPECIAL_2",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B5",
          "name": "SPECIAL_3",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B6",
          "name": "SPECIAL_4",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B7",
          "name": "SPECIAL_5",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B8",
          "name": "SPECIAL_6",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "00B9",
          "name": "SPECIAL_7",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BA",
          "member": "PrintBig",
          "name": "PRINT_BIG",
          "num_params": 3,
          "short_desc": "Displays a styled message for the specified time"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BB",
          "member": "Print",
          "name": "PRINT",
          "num_params": 3,
          "short_desc": "Displays a message positioned on the bottom of the screen for the specified time"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BC",
          "member": "PrintNow",
          "name": "PRINT_NOW",
          "num_params": 3,
          "short_desc": "Displays a message positioned on the bottom of the screen for the specified time"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BD",
          "member": "PrintSoon",
          "name": "PRINT_SOON",
          "num_params": 3,
          "short_desc": "Displays a message for the specified time when there are no other messages being printed"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "00BE",
          "member": "ClearPrints",
          "name": "CLEAR_PRINTS",
          "num_params": 0,
          "short_desc": "Clears all priority text and some styles of big texts"
        },
        {
          "output": [
            {
              "name": "hours",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "minutes",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "00BF",
          "member": "GetTimeOfDay",
          "name": "GET_TIME_OF_DAY",
          "num_params": 2,
          "short_desc": "Returns the number of hours and minutes passed since midnight"
        },
        {
          "input": [
            {
              "name": "hours",
              "type": "int"
            },
            {
              "name": "minutes",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "00C0",
          "member": "SetTimeOfDay",
          "name": "SET_TIME_OF_DAY",
          "num_params": 2,
          "short_desc": "Sets the current in-game time"
        },
        {
          "input": [
            {
              "name": "hours",
              "type": "int"
            },
            {
              "name": "minutes",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "minutesLeft",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "00C1",
          "member": "GetMinutesToTimeOfDay",
          "name": "GET_MINUTES_TO_TIME_OF_DAY",
          "num_params": 3,
          "short_desc": "Returns the number of minutes left until the clock matches the time specified"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Camera",
          "id": "00C2",
          "member": "IsPointOnScreen",
          "name": "IS_POINT_ON_SCREEN",
          "num_params": 4,
          "short_desc": "Returns true if any part of the radius of the specified point is visible on screen"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Debugger",
          "id": "00C3",
          "member": "On",
          "name": "DEBUG_ON",
          "num_params": 0,
          "short_desc": "Enables the debug mode"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Debugger",
          "id": "00C4",
          "member": "Off",
          "name": "DEBUG_OFF",
          "num_params": 0,
          "short_desc": "Disables the debug mode"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "00C5",
          "name": "RETURN_TRUE",
          "num_params": 0,
          "short_desc": "Returns a value of true"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "00C6",
          "name": "RETURN_FALSE",
          "num_params": 0,
          "short_desc": "Returns a value of false"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00C7",
          "name": "VAR_INT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00C8",
          "name": "VAR_FLOAT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00C9",
          "name": "LVAR_INT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00CA",
          "name": "LVAR_FLOAT",
          "num_params": 0
        },
        {
          "id": "00CB",
          "name": "{",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00CC",
          "name": "}",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00CD",
          "name": "REPEAT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00CE",
          "name": "ENDREPEAT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00CF",
          "name": "IF_INTERNAL",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00D0",
          "name": "IFNOT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00D1",
          "name": "ELSE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00D2",
          "name": "ENDIF",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00D3",
          "name": "WHILE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00D4",
          "name": "WHILENOT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "00D5",
          "name": "ENDWHILE",
          "num_params": 0
        },
        {
          "id": "00D6",
          "name": "COMMAND_00D6",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00D7",
          "name": "COMMAND_00D7",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00D8",
          "name": "COMMAND_00D8",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00D9",
          "name": "COMMAND_00D9",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "00DA",
          "name": "COMMAND_00DA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "",
              "type": "int"
            }
          ],
          "attrs": {},
          "id": "00DB",
          "name": "IF",
          "num_params": 1,
          "short_desc": "Begins a conditional statement with the specified number of conditions"
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            }
          ],
          "attrs": {},
          "id": "00DC",
          "name": "LAUNCH_MISSION",
          "num_params": 1,
          "short_desc": "Launches a submission script"
        },
        {
          "id": "00DD",
          "name": "MISSION_HAS_FINISHED",
          "num_params": 0,
          "short_desc": "Resets multiple settings that are usually set during missions and in some scripts",
          "class": "Mission",
          "member": "Finish",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "00DE",
          "member": "StoreCarIsIn",
          "name": "STORE_CAR_CHAR_IS_IN",
          "num_params": 2,
          "short_desc": "Returns the current vehicle of the character and adds it to the mission cleanup list"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "00DF",
          "member": "StoreCarIsIn",
          "name": "STORE_CAR_PLAYER_IS_IN",
          "num_params": 2,
          "short_desc": "Returns the current vehicle of the player and adds it to the mission cleanup list"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00E0",
          "member": "IsInCar",
          "name": "IS_CHAR_IN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the character is in the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00E1",
          "member": "IsInCar",
          "name": "IS_PLAYER_IN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the player is in the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00E2",
          "member": "IsInModel",
          "name": "IS_CHAR_IN_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the character is driving a vehicle with the specified model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00E3",
          "member": "IsInModel",
          "name": "IS_PLAYER_IN_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the player is driving a vehicle with the specified model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00E4",
          "member": "IsInAnyCar",
          "name": "IS_CHAR_IN_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the character has a vehicle, even if they are not actually sat inside it (opening and closing the door)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00E5",
          "member": "IsInAnyCar",
          "name": "IS_PLAYER_IN_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the player has a vehicle, even if they are not actually sat inside it (opening and closing the door)"
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "PadId"
            },
            {
              "name": "buttonId",
              "type": "Button"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Pad",
          "id": "00E6",
          "member": "IsButtonPressed",
          "name": "IS_BUTTON_PRESSED",
          "num_params": 2,
          "short_desc": "Returns true if the pad's button has been pressed"
        },
        {
          "id": "00E7",
          "name": "GET_PAD_STATE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00E8",
          "member": "LocateAnyMeans2D",
          "name": "LOCATE_PLAYER_ANY_MEANS_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player is within the 2D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00E9",
          "member": "LocateOnFoot2D",
          "name": "LOCATE_PLAYER_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player is within the 2D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00EA",
          "member": "LocateInCar2D",
          "name": "LOCATE_PLAYER_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player is within the 2D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00EB",
          "member": "LocateStoppedAnyMeans2D",
          "name": "LOCATE_STOPPED_PLAYER_ANY_MEANS_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player stopped within the 2D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00EC",
          "member": "LocateStoppedOnFoot2D",
          "name": "LOCATE_STOPPED_PLAYER_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player stopped within the 2D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00ED",
          "member": "LocateStoppedInCar2D",
          "name": "LOCATE_STOPPED_PLAYER_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player stopped within the 2D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00EE",
          "member": "LocateAnyMeansChar2D",
          "name": "LOCATE_PLAYER_ANY_MEANS_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the player is within the 2D radius of the specified character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00EF",
          "member": "LocateOnFootChar2D",
          "name": "LOCATE_PLAYER_ON_FOOT_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the player is within the 2D radius of the specified character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00F0",
          "member": "LocateInCarChar2D",
          "name": "LOCATE_PLAYER_IN_CAR_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the player is within the 2D radius of the specified character in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "Sphere"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F1",
          "member": "LocateAnyMeans2D",
          "name": "LOCATE_CHAR_ANY_MEANS_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 2D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F2",
          "member": "LocateOnFoot2D",
          "name": "LOCATE_CHAR_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 2D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F3",
          "member": "LocateInCar2D",
          "name": "LOCATE_CHAR_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 2D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F4",
          "member": "LocateStoppedAnyMeans2D",
          "name": "LOCATE_STOPPED_CHAR_ANY_MEANS_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the 2D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F5",
          "member": "LocateStoppedOnFoot2D",
          "name": "LOCATE_STOPPED_CHAR_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the 2D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F6",
          "member": "LocateStoppedInCar2D",
          "name": "LOCATE_STOPPED_CHAR_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the 2D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F7",
          "member": "LocateAnyMeansChar2D",
          "name": "LOCATE_CHAR_ANY_MEANS_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F8",
          "member": "LocateOnFootChar2D",
          "name": "LOCATE_CHAR_ON_FOOT_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the other character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "otherChar",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "00F9",
          "member": "LocateInCarChar2D",
          "name": "LOCATE_CHAR_IN_CAR_CHAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the other character in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00FA",
          "member": "LocateAnyMeans3D",
          "name": "LOCATE_PLAYER_ANY_MEANS_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player is within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00FB",
          "member": "LocateOnFoot3D",
          "name": "LOCATE_PLAYER_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player is within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00FC",
          "member": "LocateInCar3D",
          "name": "LOCATE_PLAYER_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player is within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00FD",
          "member": "LocateStoppedAnyMeans3D",
          "name": "LOCATE_STOPPED_PLAYER_ANY_MEANS_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player stopped within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00FE",
          "member": "LocateStoppedOnFoot3D",
          "name": "LOCATE_STOPPED_PLAYER_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player stopped within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "00FF",
          "member": "LocateStoppedInCar3D",
          "name": "LOCATE_STOPPED_PLAYER_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player stopped within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0100",
          "member": "LocateAnyMeansChar3D",
          "name": "LOCATE_PLAYER_ANY_MEANS_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the player is nearby the specified character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0101",
          "member": "LocateOnFootChar3D",
          "name": "LOCATE_PLAYER_ON_FOOT_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the player is nearby the specified character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0102",
          "member": "LocateInCarChar3D",
          "name": "LOCATE_PLAYER_IN_CAR_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the player is nearby the specified character in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0103",
          "member": "LocateAnyMeans3D",
          "name": "LOCATE_CHAR_ANY_MEANS_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the 3D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0104",
          "member": "LocateOnFoot3D",
          "name": "LOCATE_CHAR_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the 3D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0105",
          "member": "LocateInCar3D",
          "name": "LOCATE_CHAR_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the 3D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0106",
          "member": "LocateStoppedAnyMeans3D",
          "name": "LOCATE_STOPPED_CHAR_ANY_MEANS_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the 3D radius of the coordinates point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0107",
          "member": "LocateStoppedOnFoot3D",
          "name": "LOCATE_STOPPED_CHAR_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the 3D radius of the coordinates point on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0108",
          "member": "LocateStoppedInCar3D",
          "name": "LOCATE_STOPPED_CHAR_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the 3D radius of the coordinates point in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0109",
          "member": "LocateAnyMeansChar3D",
          "name": "LOCATE_CHAR_ANY_MEANS_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "010A",
          "member": "LocateOnFootChar3D",
          "name": "LOCATE_CHAR_ON_FOOT_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the other character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "010B",
          "member": "LocateInCarChar3D",
          "name": "LOCATE_CHAR_IN_CAR_CHAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the other character in a vehicle"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Object",
          "id": "010C",
          "member": "Create",
          "name": "CREATE_OBJECT",
          "num_params": 5,
          "short_desc": "Creates an object at the specified location, with the specified model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "Object",
          "id": "010D",
          "member": "Delete",
          "name": "DELETE_OBJECT",
          "num_params": 1,
          "short_desc": "Destroys the object, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "money",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "010E",
          "member": "AddScore",
          "name": "ADD_SCORE",
          "num_params": 2,
          "short_desc": "Adds to the player's money"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "money",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "010F",
          "member": "IsScoreGreater",
          "name": "IS_SCORE_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the player's money is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "money",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "0110",
          "member": "StoreScore",
          "name": "STORE_SCORE",
          "num_params": 2,
          "short_desc": "Returns the player's money"
        },
        {
          "id": "0111",
          "name": "GIVE_REMOTE_CONTROLLED_CAR_TO_PLAYER",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0112",
          "member": "AlterWantedLevel",
          "name": "ALTER_WANTED_LEVEL",
          "num_params": 2,
          "short_desc": "Sets the player's wanted level"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0113",
          "member": "AlterWantedLevelNoDrop",
          "name": "ALTER_WANTED_LEVEL_NO_DROP",
          "num_params": 2,
          "short_desc": "Sets the player's wanted level if the specified level is higher than the current one"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0114",
          "member": "IsWantedLevelGreater",
          "name": "IS_WANTED_LEVEL_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the player's wanted level is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "0115",
          "member": "ClearWantedLevel",
          "name": "CLEAR_WANTED_LEVEL",
          "num_params": 1,
          "short_desc": "Clears the player's wanted level"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "0116",
          "name": "SET_DEATHARREST_STATE",
          "num_params": 1,
          "short_desc": "Sets the detection of death and arrest during a mission (0112)",
          "attrs": {}
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "0117",
          "name": "HAS_DEATHARREST_BEEN_EXECUTED",
          "num_params": 0,
          "short_desc": "Returns true if the player is dead (wasted) or arrested (busted)"
        },
        {
          "id": "0118",
          "name": "ADD_AMMO_TO_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0119",
          "member": "AddAmmo",
          "name": "ADD_AMMO_TO_CHAR",
          "num_params": 3,
          "short_desc": "Adds the specified amount of ammo to the character's weapon, if the character has the weapon"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "011A",
          "name": "ADD_AMMO_TO_CAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "011B",
          "name": "IS_PLAYER_STILL_ALIVE",
          "num_params": 1,
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsStillAlive",
          "short_desc": "Checks if the player is not dead (not wasted), opposite of IS_PLAYER_DEAD"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Player",
          "id": "011C",
          "member": "IsDead",
          "name": "IS_PLAYER_DEAD",
          "num_params": 1,
          "short_desc": "Returns true if the handle is an invalid player handle or the player is dead (wasted)"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Char",
          "id": "011D",
          "member": "IsDead",
          "name": "IS_CHAR_DEAD",
          "num_params": 1,
          "short_desc": "Returns true if the handle is an invalid character handle or the character is dead (wasted)"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Car",
          "id": "011E",
          "member": "IsDead",
          "name": "IS_CAR_DEAD",
          "num_params": 1,
          "short_desc": "Returns true if the handle is an invalid vehicle handle or the vehicle has been destroyed (wrecked)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "pedThreat",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "011F",
          "member": "SetThreatSearch",
          "name": "SET_CHAR_THREAT_SEARCH",
          "num_params": 2,
          "short_desc": "Sets the character's hostility to other ped types"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0120",
          "name": "SET_CHAR_THREAT_REACTION",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0121",
          "member": "SetObjNoObj",
          "name": "SET_CHAR_OBJ_NO_OBJ",
          "num_params": 1,
          "short_desc": "Clears the character's current objective"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0122",
          "name": "ORDER_DRIVER_OUT_OF_CAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0123",
          "name": "ORDER_CHAR_TO_DRIVE_CAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0124",
          "name": "ADD_PATROL_POINT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0125",
          "name": "IS_PLAYER_IN_GANGZONE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0126",
          "member": "IsInZone",
          "name": "IS_PLAYER_IN_ZONE",
          "num_params": 2,
          "short_desc": "Returns true if the player is in the specified map zone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0127",
          "member": "IsPressingHorn",
          "name": "IS_PLAYER_PRESSING_HORN",
          "num_params": 1,
          "short_desc": "Returns true if the player is honking the horn in a car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "player",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0128",
          "member": "HasSpottedPlayer",
          "name": "HAS_CHAR_SPOTTED_PLAYER",
          "num_params": 2,
          "short_desc": "Returns true if the character has seen the specified player"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0129",
          "name": "ORDER_CHAR_TO_BACKDOOR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "012A",
          "name": "ADD_CHAR_TO_GANG",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "012B",
          "member": "IsObjectivePassed",
          "name": "IS_CHAR_OBJECTIVE_PASSED",
          "num_params": 1,
          "short_desc": "Returns true if the character has completed their objective"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "012C",
          "name": "SET_CHAR_DRIVE_AGGRESSION",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "012D",
          "name": "SET_CHAR_MAX_DRIVESPEED",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "012E",
          "member": "CreateInsideCar",
          "name": "CREATE_CHAR_INSIDE_CAR",
          "num_params": 4,
          "short_desc": "Creates a character in the driver's seat of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Player",
          "id": "012F",
          "member": "WarpFromCarToCoord",
          "name": "WARP_PLAYER_FROM_CAR_TO_COORD",
          "num_params": 4,
          "short_desc": "Puts the player at the specified location, removing them from any vehicle they're in"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0130",
          "name": "MAKE_CHAR_DO_NOTHING",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0131",
          "name": "SET_CHAR_INVINCIBLE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0132",
          "name": "SET_PLAYER_INVINCIBLE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0133",
          "name": "SET_CHAR_GRAPHIC_TYPE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0134",
          "name": "SET_PLAYER_GRAPHIC_TYPE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0135",
          "member": "HasBeenArrested",
          "name": "HAS_PLAYER_BEEN_ARRESTED",
          "num_params": 1,
          "short_desc": "Returns true if the specified player is being arrested (busted)"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0136",
          "name": "STOP_CHAR_DRIVING",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0137",
          "name": "KILL_CHAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0138",
          "name": "SET_FAVOURITE_CAR_MODEL_FOR_CHAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0139",
          "name": "SET_CHAR_OCCUPATION",
          "num_params": 0
        },
        {
          "id": "013A",
          "name": "CHANGE_CAR_LOCK",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "013B",
          "name": "SHAKE_CAM_WITH_POINT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "013C",
          "member": "IsModel",
          "name": "IS_CAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle has the specified model"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "013D",
          "name": "IS_CAR_REMAP",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "013E",
          "name": "HAS_CAR_JUST_SUNK",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "013F",
          "name": "SET_CAR_NO_COLLIDE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0140",
          "name": "IS_CAR_DEAD_IN_AREA_2D",
          "num_params": 0
        },
        {
          "id": "0141",
          "name": "IS_CAR_DEAD_IN_AREA_3D",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0142",
          "name": "IS_TRAILER_ATTACHED",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0143",
          "name": "IS_CAR_ON_TRAILER",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0144",
          "name": "HAS_CAR_GOT_WEAPON",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0145",
          "name": "PARK",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0146",
          "name": "HAS_PARK_FINISHED",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0147",
          "name": "KILL_ALL_PASSENGERS",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0148",
          "name": "SET_CAR_BULLETPROOF",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0149",
          "name": "SET_CAR_FLAMEPROOF",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "014A",
          "name": "SET_CAR_ROCKETPROOF",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "014B",
          "name": "IS_CARBOMB_ACTIVE",
          "num_params": 0
        },
        {
          "id": "014C",
          "name": "GIVE_CAR_ALARM",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "014D",
          "name": "PUT_CAR_ON_TRAILER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "014E",
          "member": "IsCrushed",
          "name": "IS_CAR_CRUSHED",
          "num_params": 1,
          "short_desc": "Returns true if the specified vehicle has been crushed by the car crusher"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "014F",
          "name": "CREATE_GANG_CAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            },
            {
              "name": "primaryColor",
              "type": "int"
            },
            {
              "name": "secondaryColor",
              "type": "int"
            },
            {
              "name": "forceSpawn",
              "type": "bool"
            },
            {
              "name": "alarmChance",
              "type": "int"
            },
            {
              "name": "doorLockChance",
              "type": "int"
            },
            {
              "name": "minDelay",
              "type": "int"
            },
            {
              "name": "maxDelay",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "CarGenerator",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "CarGenerator",
          "id": "0150",
          "member": "Create",
          "name": "CREATE_CAR_GENERATOR",
          "num_params": 13,
          "short_desc": "Initializes a parked car generator"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CarGenerator"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "CarGenerator",
          "id": "0151",
          "member": "Switch",
          "name": "SWITCH_CAR_GENERATOR",
          "num_params": 2,
          "short_desc": "Specifies the number of times the car generator spawns a car (101 - infinite)"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0152",
          "name": "ADD_PAGER_MESSAGE",
          "num_params": 0
        },
        {
          "id": "0153",
          "name": "DISPLAY_ONSCREEN_TIMER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "timer",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0154",
          "member": "ClearTimer",
          "name": "CLEAR_ONSCREEN_TIMER",
          "num_params": 1,
          "short_desc": "Removes the onscreen timer"
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "display",
              "type": "CounterDisplay"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0155",
          "member": "DisplayCounter",
          "name": "DISPLAY_ONSCREEN_COUNTER",
          "num_params": 2,
          "short_desc": "Displays an onscreen counter, either shown in numbers or as a bar"
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0156",
          "member": "ClearCounter",
          "name": "CLEAR_ONSCREEN_COUNTER",
          "num_params": 1,
          "short_desc": "Removes the onscreen counter (0150 or 03C4)"
        },
        {
          "id": "0157",
          "name": "SET_ZONE_CAR_INFO",
          "num_params": 13,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            },
            {
              "name": "_p10",
              "type": "any"
            },
            {
              "name": "_p11",
              "type": "any"
            },
            {
              "name": "_p12",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0158",
          "name": "IS_CHAR_IN_GANG_ZONE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0159",
          "member": "IsInZone",
          "name": "IS_CHAR_IN_ZONE",
          "num_params": 2,
          "short_desc": "Returns true if the character is in the specified map zone"
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "dayOrNight",
              "type": "DayOrNight"
            },
            {
              "name": "density",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Zone",
          "id": "015A",
          "member": "SetCarDensity",
          "name": "SET_CAR_DENSITY",
          "num_params": 3,
          "short_desc": "Sets the traffic density in the specified map zone during the day or at night"
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "dayOrNight",
              "type": "DayOrNight"
            },
            {
              "name": "density",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Zone",
          "id": "015B",
          "member": "SetPedDensity",
          "name": "SET_PED_DENSITY",
          "num_params": 3,
          "short_desc": "Sets the peds density in the specified map zone during the day or at night"
        },
        {
          "input": [
            {
              "name": "player",
              "type": "Player"
            },
            {
              "name": "mode",
              "type": "CameraMode"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "015C",
          "member": "PointAtPlayer",
          "name": "POINT_CAMERA_AT_PLAYER",
          "num_params": 3,
          "short_desc": "Attaches the camera to the specified player"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "mode",
              "type": "CameraMode"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "015D",
          "member": "PointAtCar",
          "name": "POINT_CAMERA_AT_CAR",
          "num_params": 3,
          "short_desc": "Attaches the camera to the specified vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "mode",
              "type": "CameraMode"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "015E",
          "member": "PointAtChar",
          "name": "POINT_CAMERA_AT_CHAR",
          "num_params": 3,
          "short_desc": "Attaches the camera to the specified character"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "015F",
          "member": "Restore",
          "name": "RESTORE_CAMERA",
          "num_params": 0,
          "short_desc": "Restores the camera to its usual position"
        },
        {
          "id": "0160",
          "name": "SHAKE_PAD",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0161",
          "name": "SET_ZONE_PED_INFO",
          "num_params": 13,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            },
            {
              "name": "_p10",
              "type": "any"
            },
            {
              "name": "_p11",
              "type": "any"
            },
            {
              "name": "_p12",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "scale",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "0162",
          "member": "SetTimeScale",
          "name": "SET_TIME_SCALE",
          "num_params": 1,
          "short_desc": "Sets the game to run at the specified speed"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0163",
          "name": "IS_CAR_IN_AIR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRotation",
              "type": "float"
            },
            {
              "name": "yRotation",
              "type": "float"
            },
            {
              "name": "zRotation",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0164",
          "member": "SetFixedPosition",
          "name": "SET_FIXED_CAMERA_POSITION",
          "num_params": 6,
          "short_desc": "Sets the camera's position and rotation"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "switchStyle",
              "type": "SwitchType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0165",
          "member": "PointAtPoint",
          "name": "POINT_CAMERA_AT_POINT",
          "num_params": 4,
          "short_desc": "Points the camera at the specified location and applies the position set by 0159"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "color",
              "type": "BlipColor"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0166",
          "member": "AddForCarOld",
          "name": "ADD_BLIP_FOR_CAR_OLD",
          "num_params": 4,
          "short_desc": "Adds a blip with properties to the vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            },
            {
              "name": "color",
              "type": "BlipColor"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0167",
          "member": "AddForCharOld",
          "name": "ADD_BLIP_FOR_CHAR_OLD",
          "num_params": 4,
          "short_desc": "Adds a blip with properties to the character"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0168",
          "name": "ADD_BLIP_FOR_OBJECT_OLD",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            }
          ],
          "class": "Blip",
          "id": "0169",
          "member": "Remove",
          "name": "REMOVE_BLIP",
          "num_params": 1,
          "short_desc": "Removes the blip",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "color",
              "type": "BlipColor"
            }
          ],
          "class": "Blip",
          "id": "016A",
          "member": "ChangeColor",
          "name": "CHANGE_BLIP_COLOUR",
          "num_params": 2,
          "short_desc": "Sets the blip's color"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Blip",
          "id": "016B",
          "member": "Dim",
          "name": "DIM_BLIP",
          "num_params": 2,
          "short_desc": "Sets whether the blip should appear dimmed"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "colour",
              "type": "BlipColor"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "016C",
          "member": "AddForCoordOld",
          "name": "ADD_BLIP_FOR_COORD_OLD",
          "num_params": 6,
          "short_desc": "Adds a blip with properties at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "size",
              "type": "int"
            }
          ],
          "class": "Blip",
          "id": "016D",
          "member": "ChangeScale",
          "name": "CHANGE_BLIP_SCALE",
          "num_params": 2,
          "short_desc": "Sets the blip's size"
        },
        {
          "input": [
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "016E",
          "member": "SetFadingColor",
          "name": "SET_FADING_COLOUR",
          "num_params": 3,
          "short_desc": "Sets the RGB color of the fade command (016A)"
        },
        {
          "input": [
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "direction",
              "type": "Fade"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "016F",
          "member": "DoFade",
          "name": "DO_FADE",
          "num_params": 2,
          "short_desc": "Fades the screen for the specified time"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Camera",
          "id": "0170",
          "member": "GetFadingStatus",
          "name": "GET_FADING_STATUS",
          "num_params": 0,
          "short_desc": "Returns true if the screen is fading (016A)"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0171",
          "member": "AddHospital",
          "name": "ADD_HOSPITAL_RESTART",
          "num_params": 4,
          "short_desc": "Adds a new location where the player can respawn after death"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0172",
          "member": "AddPolice",
          "name": "ADD_POLICE_RESTART",
          "num_params": 4,
          "short_desc": "Adds a new location where the player can respawn after arrest"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0173",
          "member": "OverrideNext",
          "name": "OVERRIDE_NEXT_RESTART",
          "num_params": 4,
          "short_desc": "Forces this location to be the next respawn location"
        },
        {
          "id": "0174",
          "name": "DRAW_SHADOW",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "0175",
          "member": "GetHeading",
          "name": "GET_PLAYER_HEADING",
          "num_params": 2,
          "short_desc": "Returns the player's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Player",
          "id": "0176",
          "member": "SetHeading",
          "name": "SET_PLAYER_HEADING",
          "num_params": 2,
          "short_desc": "Sets the player's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0177",
          "member": "GetHeading",
          "name": "GET_CHAR_HEADING",
          "num_params": 2,
          "short_desc": "Returns the character's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0178",
          "member": "SetHeading",
          "name": "SET_CHAR_HEADING",
          "num_params": 2,
          "short_desc": "Sets the character's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0179",
          "member": "GetHeading",
          "name": "GET_CAR_HEADING",
          "num_params": 2,
          "short_desc": "Returns the vehicle's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "017A",
          "member": "SetHeading",
          "name": "SET_CAR_HEADING",
          "num_params": 2,
          "short_desc": "Sets the vehicle's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "heading",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Object",
          "id": "017B",
          "member": "GetHeading",
          "name": "GET_OBJECT_HEADING",
          "num_params": 2,
          "short_desc": "Returns the object's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "017C",
          "member": "SetHeading",
          "name": "SET_OBJECT_HEADING",
          "num_params": 2,
          "short_desc": "Sets the object's heading (z-angle)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "017D",
          "member": "IsTouchingObject",
          "name": "IS_PLAYER_TOUCHING_OBJECT",
          "num_params": 2,
          "short_desc": "Returns true if the player is colliding with the specified object"
        },
        {
          "id": "017E",
          "name": "IS_CHAR_TOUCHING_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "017F",
          "member": "SetAmmo",
          "name": "SET_PLAYER_AMMO",
          "num_params": 3,
          "short_desc": "Sets the amount of ammo the player has in the specified weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "id": "0180",
          "name": "SET_CHAR_AMMO",
          "num_params": 3,
          "short_desc": "Sets the amount of ammo the character has in the specified weapon",
          "class": "Char",
          "member": "SetAmmo"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0181",
          "name": "SET_CAR_AMMO",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0182",
          "name": "LOAD_CAMERA_SPLINE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0183",
          "name": "MOVE_CAMERA_ALONG_SPLINE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0184",
          "name": "GET_CAMERA_POSITION_ALONG_SPLINE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "flag",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {},
          "id": "0185",
          "name": "DECLARE_MISSION_FLAG",
          "num_params": 1,
          "short_desc": "Links the global variable to the specific hardcoded flag that defines is there an active mission or not"
        },
        {
          "input": [
            {
              "name": "contactId",
              "type": "Contact"
            },
            {
              "name": "flag",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {},
          "id": "0186",
          "name": "DECLARE_MISSION_FLAG_FOR_CONTACT",
          "num_params": 2,
          "short_desc": "Sets the mission flag var for the specific contact"
        },
        {
          "id": "0187",
          "name": "DECLARE_BASE_BRIEF_ID_FOR_CONTACT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0188",
          "member": "IsHealthGreater",
          "name": "IS_PLAYER_HEALTH_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the player's health is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0189",
          "member": "IsHealthGreater",
          "name": "IS_CHAR_HEALTH_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the character's health is over the specified value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "018A",
          "member": "IsHealthGreater",
          "name": "IS_CAR_HEALTH_GREATER",
          "num_params": 2,
          "short_desc": "Returns true if the car's health is over the specified value"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "018B",
          "member": "AddForCar",
          "name": "ADD_BLIP_FOR_CAR",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "018C",
          "member": "AddForChar",
          "name": "ADD_BLIP_FOR_CHAR",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the character"
        },
        {
          "input": [
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "018D",
          "member": "AddForObject",
          "name": "ADD_BLIP_FOR_OBJECT",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the object"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "018E",
          "member": "AddForContactPoint",
          "name": "ADD_BLIP_FOR_CONTACT_POINT",
          "num_params": 4,
          "short_desc": "Adds a blip to the contact point"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "018F",
          "member": "AddForCoord",
          "name": "ADD_BLIP_FOR_COORD",
          "num_params": 4,
          "short_desc": "Adds a blip to the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Blip"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "class": "Blip",
          "id": "0190",
          "member": "ChangeDisplay",
          "name": "CHANGE_BLIP_DISPLAY",
          "num_params": 2,
          "short_desc": "Changes the display of the specified blip"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "soundId",
              "type": "ScriptSound"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Sound",
          "id": "0191",
          "member": "AddOneOffSound",
          "name": "ADD_ONE_OFF_SOUND",
          "num_params": 4,
          "short_desc": "Plays a sound with the specified ID at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "soundId",
              "type": "ScriptSound"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Sound",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true,
            "is_constructor": true
          },
          "class": "Sound",
          "id": "0192",
          "member": "AddContinuous",
          "name": "ADD_CONTINUOUS_SOUND",
          "num_params": 5,
          "short_desc": "Creates a continuous sound at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Sound"
            }
          ],
          "class": "Sound",
          "id": "0193",
          "member": "Remove",
          "name": "REMOVE_SOUND",
          "num_params": 1,
          "short_desc": "Stops the sound"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0194",
          "member": "IsStuckOnRoof",
          "name": "IS_CAR_STUCK_ON_ROOF",
          "num_params": 1,
          "short_desc": "Returns true if the car has been upside down for more than 2 seconds (requires 0190)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0195",
          "member": "AddUpsidedownCheck",
          "name": "ADD_UPSIDEDOWN_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Activates upside-down car check for the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0196",
          "member": "RemoveUpsidedownCheck",
          "name": "REMOVE_UPSIDEDOWN_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Deactivates upside-down car check (0190) for the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0197",
          "member": "SetObjWaitOnFoot",
          "name": "SET_CHAR_OBJ_WAIT_ON_FOOT",
          "num_params": 1,
          "short_desc": "Sets the character's objective to stay idle on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0198",
          "member": "SetObjFleeOnFootTillSafe",
          "name": "SET_CHAR_OBJ_FLEE_ON_FOOT_TILL_SAFE",
          "num_params": 1,
          "short_desc": "Sets the character's objective to run away"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0199",
          "member": "SetObjGuardSpot",
          "name": "SET_CHAR_OBJ_GUARD_SPOT",
          "num_params": 4,
          "short_desc": "Sets the character's objective to guard the specified location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "019A",
          "member": "SetObjGuardArea",
          "name": "SET_CHAR_OBJ_GUARD_AREA",
          "num_params": 5,
          "short_desc": "Sets the character's objective to guard the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "019B",
          "member": "SetObjWaitInCar",
          "name": "SET_CHAR_OBJ_WAIT_IN_CAR",
          "num_params": 1,
          "short_desc": "Sets the character's objective to stay in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "019C",
          "member": "IsInAreaOnFoot2D",
          "name": "IS_PLAYER_IN_AREA_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player is within the specified 2D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "019D",
          "member": "IsInAreaInCar2D",
          "name": "IS_PLAYER_IN_AREA_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player is within the specified 2D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "019E",
          "member": "IsStoppedInArea2D",
          "name": "IS_PLAYER_STOPPED_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player stopped within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "019F",
          "member": "IsStoppedInAreaOnFoot2D",
          "name": "IS_PLAYER_STOPPED_IN_AREA_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player stopped within the specified 2D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "01A0",
          "member": "IsStoppedInAreaInCar2D",
          "name": "IS_PLAYER_STOPPED_IN_AREA_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the player stopped within the specified 2D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "01A1",
          "member": "IsInAreaOnFoot3D",
          "name": "IS_PLAYER_IN_AREA_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player is within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "01A2",
          "member": "IsInAreaInCar3D",
          "name": "IS_PLAYER_IN_AREA_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player is within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "01A3",
          "member": "IsStoppedInArea3D",
          "name": "IS_PLAYER_STOPPED_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player stopped within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "01A4",
          "member": "IsStoppedInAreaOnFoot3D",
          "name": "IS_PLAYER_STOPPED_IN_AREA_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player stopped within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "01A5",
          "member": "IsStoppedInAreaInCar3D",
          "name": "IS_PLAYER_STOPPED_IN_AREA_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the player stopped within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A6",
          "member": "IsInAreaOnFoot2D",
          "name": "IS_CHAR_IN_AREA_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the specified 2D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A7",
          "member": "IsInAreaInCar2D",
          "name": "IS_CHAR_IN_AREA_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the specified 2D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A8",
          "member": "IsStoppedInArea2D",
          "name": "IS_CHAR_STOPPED_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01A9",
          "member": "IsStoppedInAreaOnFoot2D",
          "name": "IS_CHAR_STOPPED_IN_AREA_ON_FOOT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the specified 2D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AA",
          "member": "IsStoppedInAreaInCar2D",
          "name": "IS_CHAR_STOPPED_IN_AREA_IN_CAR_2D",
          "num_params": 6,
          "short_desc": "Returns true if the character stopped within the specified 2D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AB",
          "member": "IsInAreaOnFoot3D",
          "name": "IS_CHAR_IN_AREA_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AC",
          "member": "IsInAreaInCar3D",
          "name": "IS_CHAR_IN_AREA_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character is within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AD",
          "member": "IsStoppedInArea3D",
          "name": "IS_CHAR_STOPPED_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AE",
          "member": "IsStoppedInAreaOnFoot3D",
          "name": "IS_CHAR_STOPPED_IN_AREA_ON_FOOT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the specified 3D area on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "01AF",
          "member": "IsStoppedInAreaInCar3D",
          "name": "IS_CHAR_STOPPED_IN_AREA_IN_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the character stopped within the specified 3D area in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B0",
          "member": "IsStoppedInArea2D",
          "name": "IS_CAR_STOPPED_IN_AREA_2D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B1",
          "member": "IsStoppedInArea3D",
          "name": "IS_CAR_STOPPED_IN_AREA_3D",
          "num_params": 8,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B2",
          "member": "Locate2D",
          "name": "LOCATE_CAR_2D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B3",
          "member": "LocateStopped2D",
          "name": "LOCATE_STOPPED_CAR_2D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B4",
          "member": "Locate3D",
          "name": "LOCATE_CAR_3D",
          "num_params": 8,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01B5",
          "member": "LocateStopped3D",
          "name": "LOCATE_STOPPED_CAR_3D",
          "num_params": 8,
          "short_desc": "Returns true if the car is stopped in the radius of the specified point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "01B6",
          "member": "GiveWeapon",
          "name": "GIVE_WEAPON_TO_PLAYER",
          "num_params": 3,
          "short_desc": "Gives the player the weapon with the specified amount of ammo"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "01B7",
          "member": "GiveWeapon",
          "name": "GIVE_WEAPON_TO_CHAR",
          "num_params": 3,
          "short_desc": "Gives the character the weapon with the specified amount of ammo"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01B8",
          "name": "GIVE_WEAPON_TO_CAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "01B9",
          "member": "SetControl",
          "name": "SET_PLAYER_CONTROL",
          "num_params": 2,
          "short_desc": "Sets whether player's control is enabled"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "WeatherType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "01BA",
          "member": "Force",
          "name": "FORCE_WEATHER",
          "num_params": 1,
          "short_desc": "Forces the game weather to the specified type"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "WeatherType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "01BB",
          "member": "ForceNow",
          "name": "FORCE_WEATHER_NOW",
          "num_params": 1,
          "short_desc": "Forces the upcoming weather to the specified type"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "01BC",
          "member": "Release",
          "name": "RELEASE_WEATHER",
          "num_params": 0,
          "short_desc": "Allows the game to continue its usual weather pattern after using 01B5"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Player",
          "id": "01BD",
          "member": "SetCurrentWeapon",
          "name": "SET_CURRENT_PLAYER_WEAPON",
          "num_params": 2,
          "short_desc": "Sets the player's currently held weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Char",
          "id": "01BE",
          "member": "SetCurrentWeapon",
          "name": "SET_CURRENT_CHAR_WEAPON",
          "num_params": 2,
          "short_desc": "Sets the character's currently held weapon"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01BF",
          "name": "SET_CURRENT_CAR_WEAPON",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Object",
          "id": "01C0",
          "member": "GetCoordinates",
          "name": "GET_OBJECT_COORDINATES",
          "num_params": 4,
          "short_desc": "Returns the object's coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "01C1",
          "member": "SetCoordinates",
          "name": "SET_OBJECT_COORDINATES",
          "num_params": 4,
          "short_desc": "Puts the object at the specified location"
        },
        {
          "output": [
            {
              "name": "time",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "01C2",
          "member": "GetGameTimer",
          "name": "GET_GAME_TIMER",
          "num_params": 1,
          "short_desc": "Returns the time passed in milliseconds since the game started"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "01C3",
          "member": "TurnToFaceCoord",
          "name": "TURN_CHAR_TO_FACE_COORD",
          "num_params": 4,
          "short_desc": "Rotates the character to face the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Player",
          "id": "01C4",
          "member": "TurnToFaceCoord",
          "name": "TURN_PLAYER_TO_FACE_COORD",
          "num_params": 4,
          "short_desc": "Rotates the player to face the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "wantedLevel",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "01C5",
          "member": "StoreWantedLevel",
          "name": "STORE_WANTED_LEVEL",
          "num_params": 2,
          "short_desc": "Returns the player's current wanted level"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01C6",
          "member": "IsStopped",
          "name": "IS_CAR_STOPPED",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is not moving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01C7",
          "member": "MarkAsNoLongerNeeded",
          "name": "MARK_CHAR_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Allows the character to be deleted by the game if necessary, and also removes them from the mission cleanup list, if applicable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "01C8",
          "member": "MarkAsNoLongerNeeded",
          "name": "MARK_CAR_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Allows the vehicle to be deleted by the game if necessary, and also removes it from the mission cleanup list, if applicable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "class": "Object",
          "id": "01C9",
          "member": "MarkAsNoLongerNeeded",
          "name": "MARK_OBJECT_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Allows the object to be deleted by the game if necessary, and also removes it from the mission cleanup list, if applicable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01CA",
          "member": "DontRemove",
          "name": "DONT_REMOVE_CHAR",
          "num_params": 1,
          "short_desc": "Removes the character from the mission cleanup list, preventing it from being deleted when the mission ends"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "01CB",
          "member": "DontRemove",
          "name": "DONT_REMOVE_CAR",
          "num_params": 1,
          "short_desc": "Removes the vehicle from the mission cleanup list, preventing it from being deleted when the mission ends"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "class": "Object",
          "id": "01CC",
          "member": "DontRemove",
          "name": "DONT_REMOVE_OBJECT",
          "num_params": 1,
          "short_desc": "Removes the object from the mission cleanup list, preventing it from being deleted when the mission ends"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "pedType",
              "type": "PedType"
            },
            {
              "name": "modelId",
              "type": "model_char"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "01CD",
          "member": "CreateAsPassenger",
          "name": "CREATE_CHAR_AS_PASSENGER",
          "num_params": 5,
          "short_desc": "Creates a character with the specified model in the passenger seat of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01CE",
          "member": "SetObjKillCharOnFoot",
          "name": "SET_CHAR_OBJ_KILL_CHAR_ON_FOOT",
          "num_params": 2,
          "short_desc": "Sets the character's objective to attack the other character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "01CF",
          "member": "SetObjKillPlayerOnFoot",
          "name": "SET_CHAR_OBJ_KILL_PLAYER_ON_FOOT",
          "num_params": 2,
          "short_desc": "Sets the character's objective to attack the player on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01D0",
          "member": "SetObjKillCharAnyMeans",
          "name": "SET_CHAR_OBJ_KILL_CHAR_ANY_MEANS",
          "num_params": 2,
          "short_desc": "Sets the character's objective to attack the specified character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "01D1",
          "member": "SetObjKillPlayerAnyMeans",
          "name": "SET_CHAR_OBJ_KILL_PLAYER_ANY_MEANS",
          "num_params": 2,
          "short_desc": "Sets the character's objective to attack the player"
        },
        {
          "id": "01D2",
          "name": "SET_CHAR_OBJ_FLEE_CHAR_ON_FOOT_TILL_SAFE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "01D3",
          "member": "SetObjFleePlayerOnFootTillSafe",
          "name": "SET_CHAR_OBJ_FLEE_PLAYER_ON_FOOT_TILL_SAFE",
          "num_params": 2,
          "short_desc": "Sets the character's objective to escape on foot and stay away from the target player until it is safe"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01D4",
          "member": "SetObjFleeCharOnFootAlways",
          "name": "SET_CHAR_OBJ_FLEE_CHAR_ON_FOOT_ALWAYS",
          "num_params": 2,
          "short_desc": "Sets the character's objective to walk away forever and stay away from the target character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "01D5",
          "member": "SetObjFleePlayerOnFootAlways",
          "name": "SET_CHAR_OBJ_FLEE_PLAYER_ON_FOOT_ALWAYS",
          "num_params": 2,
          "short_desc": "Sets the character's objective to walk away forever and stay away from the target player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01D6",
          "member": "SetObjGotoCharOnFoot",
          "name": "SET_CHAR_OBJ_GOTO_CHAR_ON_FOOT",
          "num_params": 2,
          "short_desc": "Sets the character's objective to walk towards the target character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "01D7",
          "member": "SetObjGotoPlayerOnFoot",
          "name": "SET_CHAR_OBJ_GOTO_PLAYER_ON_FOOT",
          "num_params": 2,
          "short_desc": "Sets the character's objective to walk towards the target player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "01D8",
          "member": "SetObjLeaveCar",
          "name": "SET_CHAR_OBJ_LEAVE_CAR",
          "num_params": 2,
          "short_desc": "Sets the character's objective to leave the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "01D9",
          "member": "SetObjEnterCarAsPassenger",
          "name": "SET_CHAR_OBJ_ENTER_CAR_AS_PASSENGER",
          "num_params": 2,
          "short_desc": "Sets the character's objective to enter the vehicle as a passenger"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "01DA",
          "member": "SetObjEnterCarAsDriver",
          "name": "SET_CHAR_OBJ_ENTER_CAR_AS_DRIVER",
          "num_params": 2,
          "short_desc": "Sets the character's objective to enter the vehicle as a driver"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01DB",
          "name": "SET_CHAR_OBJ_FOLLOW_CAR_IN_CAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01DC",
          "name": "SET_CHAR_OBJ_FIRE_AT_OBJECT_FROM_VEHICLE",
          "num_params": 0
        },
        {
          "id": "01DD",
          "name": "SET_CHAR_OBJ_DESTROY_OBJECT",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "01DE",
          "member": "SetObjDestroyCar",
          "name": "SET_CHAR_OBJ_DESTROY_CAR",
          "num_params": 2,
          "short_desc": "Sets the character's objective to destroy the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "01DF",
          "member": "SetObjGotoAreaOnFoot",
          "name": "SET_CHAR_OBJ_GOTO_AREA_ON_FOOT",
          "num_params": 5,
          "short_desc": "Sets the character's objective to walk into the specified 2D area"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01E0",
          "name": "SET_CHAR_OBJ_GOTO_AREA_IN_CAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01E1",
          "name": "SET_CHAR_OBJ_FOLLOW_CAR_ON_FOOT_WITH_OFFSET",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01E2",
          "name": "SET_CHAR_OBJ_GUARD_ATTACK",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leader",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01E3",
          "member": "SetAsLeader",
          "name": "SET_CHAR_AS_LEADER",
          "num_params": 2,
          "short_desc": "Makes the character follow the leader character",
          "attrs": {
            "is_overload": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leader",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "01E4",
          "member": "SetAsLeader",
          "name": "SET_PLAYER_AS_LEADER",
          "num_params": 2,
          "short_desc": "Makes the character follow the leader player",
          "attrs": {
            "is_overload": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01E5",
          "member": "LeaveGroup",
          "name": "LEAVE_GROUP",
          "num_params": 1,
          "short_desc": "Makes the character stop following the leader (01DE or 01DF)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "routeId",
              "type": "int"
            },
            {
              "name": "mode",
              "type": "FollowRoute"
            }
          ],
          "class": "Char",
          "id": "01E6",
          "member": "SetObjFollowRoute",
          "name": "SET_CHAR_OBJ_FOLLOW_ROUTE",
          "num_params": 3,
          "short_desc": "Sets the character's objective to follow along the specified route"
        },
        {
          "input": [
            {
              "name": "routeId",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "01E7",
          "member": "AddRoutePoint",
          "name": "ADD_ROUTE_POINT",
          "num_params": 4,
          "short_desc": "Adds a new waypoint to the route with the specified id"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "01E8",
          "member": "PrintWithNumberBig",
          "name": "PRINT_WITH_NUMBER_BIG",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token~1~ is substituted with the specified number"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "01E9",
          "member": "PrintWithNumber",
          "name": "PRINT_WITH_NUMBER",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~1~ is substituted with the specified number"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "flag",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "01EA",
          "member": "PrintWithNumberNow",
          "name": "PRINT_WITH_NUMBER_NOW",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~1~ is substituted with the specified number"
        },
        {
          "id": "01EB",
          "name": "PRINT_WITH_NUMBER_SOON",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "01EC",
          "member": "SwitchRoadsOn",
          "name": "SWITCH_ROADS_ON",
          "num_params": 6,
          "short_desc": "Allows cars to drive in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "01ED",
          "member": "SwitchRoadsOff",
          "name": "SWITCH_ROADS_OFF",
          "num_params": 6,
          "short_desc": "Prevents cars from driving on roads in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "count",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "01EE",
          "member": "GetNumberOfPassengers",
          "name": "GET_NUMBER_OF_PASSENGERS",
          "num_params": 2,
          "short_desc": "Returns the number of passengers sitting in the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "count",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "01EF",
          "member": "GetMaximumNumberOfPassengers",
          "name": "GET_MAXIMUM_NUMBER_OF_PASSENGERS",
          "num_params": 2,
          "short_desc": "Returns the maximum number of passengers that could sit in the car"
        },
        {
          "input": [
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "01F0",
          "member": "SetCarDensityMultiplier",
          "name": "SET_CAR_DENSITY_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets the quantity of traffic that will spawn in the game"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "01F1",
          "member": "SetHeavy",
          "name": "SET_CAR_HEAVY",
          "num_params": 2,
          "short_desc": "Sets whether the car is heavy"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "01F2",
          "member": "ClearThreatSearch",
          "name": "CLEAR_CHAR_THREAT_SEARCH",
          "num_params": 1,
          "short_desc": "Resets character's hostility to other ped types (011A)"
        },
        {
          "input": [
            {
              "name": "craneX",
              "type": "float"
            },
            {
              "name": "craneY",
              "type": "float"
            },
            {
              "name": "pickupZoneX1",
              "type": "float"
            },
            {
              "name": "pickupZoneY1",
              "type": "float"
            },
            {
              "name": "pickupZoneX2",
              "type": "float"
            },
            {
              "name": "pickupZoneY2",
              "type": "float"
            },
            {
              "name": "dropOffX",
              "type": "float"
            },
            {
              "name": "dropOffY",
              "type": "float"
            },
            {
              "name": "dropOffZ",
              "type": "float"
            },
            {
              "name": "dropOffAngle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Crane",
          "id": "01F3",
          "member": "Activate",
          "name": "ACTIVATE_CRANE",
          "num_params": 10,
          "short_desc": "Activates a crane located within 100.0 units of the specified location"
        },
        {
          "input": [
            {
              "name": "craneX",
              "type": "float"
            },
            {
              "name": "craneY",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Crane",
          "id": "01F4",
          "member": "Deactivate",
          "name": "DEACTIVATE_CRANE",
          "num_params": 2,
          "short_desc": "Deactivates a crane located within 100.0 units of the specified location"
        },
        {
          "input": [
            {
              "name": "wantedLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "01F5",
          "member": "SetMaxWantedLevel",
          "name": "SET_MAX_WANTED_LEVEL",
          "num_params": 1,
          "short_desc": "Sets the maximum wanted level the player can receive"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01F6",
          "name": "SAVE_VAR_INT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01F7",
          "name": "SAVE_VAR_FLOAT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01F8",
          "member": "IsInAirProper",
          "name": "IS_CAR_IN_AIR_PROPER",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is in the air"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "01F9",
          "member": "IsUpsidedown",
          "name": "IS_CAR_UPSIDEDOWN",
          "num_params": 1,
          "short_desc": "Returns true if the car is upside down"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "01FA",
          "member": "GetChar",
          "name": "GET_PLAYER_CHAR",
          "num_params": 2,
          "short_desc": "Gets the character handle for the specified player"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "01FB",
          "member": "CancelOverride",
          "name": "CANCEL_OVERRIDE_RESTART",
          "num_params": 0,
          "short_desc": "Stops the player from spawning at the override location (016E)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "01FC",
          "member": "SetIgnorePolice",
          "name": "SET_POLICE_IGNORE_PLAYER",
          "num_params": 2,
          "short_desc": "Sets whether cops should ignore the player regardless of wanted level"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "01FD",
          "name": "ADD_PAGER_MESSAGE_WITH_NUMBER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "text",
              "type": "gxt_key"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "timeInMs",
              "type": "int"
            },
            {
              "name": "targetsNum",
              "type": "int"
            },
            {
              "name": "targetModel1",
              "type": "model_any"
            },
            {
              "name": "targetModel2",
              "type": "model_any"
            },
            {
              "name": "targetModel3",
              "type": "model_any"
            },
            {
              "name": "targetModel4",
              "type": "model_any"
            },
            {
              "name": "betaSoundsAndMessages",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "KillFrenzy",
          "id": "01FE",
          "member": "Start",
          "name": "START_KILL_FRENZY",
          "num_params": 9,
          "short_desc": "Starts a rampage"
        },
        {
          "output": [
            {
              "name": "status",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "KillFrenzy",
          "id": "01FF",
          "member": "ReadStatus",
          "name": "READ_KILL_FRENZY_STATUS",
          "num_params": 1,
          "short_desc": "Returns the status of the current rampage"
        },
        {
          "input": [
            {
              "name": "num",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "result",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "0200",
          "member": "Sqrt",
          "name": "SQRT",
          "num_params": 2,
          "short_desc": "Returns the square root of a number"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0201",
          "member": "LocateAnyMeansCar2D",
          "name": "LOCATE_PLAYER_ANY_MEANS_CAR_2D",
          "num_params": 5,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0202",
          "member": "LocateOnFootCar2D",
          "name": "LOCATE_PLAYER_ON_FOOT_CAR_2D",
          "num_params": 5,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0203",
          "member": "LocateInCarCar2D",
          "name": "LOCATE_PLAYER_IN_CAR_CAR_2D",
          "num_params": 5,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0204",
          "member": "LocateAnyMeansCar3D",
          "name": "LOCATE_PLAYER_ANY_MEANS_CAR_3D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0205",
          "member": "LocateOnFootCar3D",
          "name": "LOCATE_PLAYER_ON_FOOT_CAR_3D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0206",
          "member": "LocateInCarCar3D",
          "name": "LOCATE_PLAYER_IN_CAR_CAR_3D",
          "num_params": 6,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0207",
          "member": "LocateAnyMeansCar2D",
          "name": "LOCATE_CHAR_ANY_MEANS_CAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0208",
          "member": "LocateOnFootCar2D",
          "name": "LOCATE_CHAR_ON_FOOT_CAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the vehicle on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0209",
          "member": "LocateInCarCar2D",
          "name": "LOCATE_CHAR_IN_CAR_CAR_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the vehicle in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "020A",
          "member": "LocateAnyMeansCar3D",
          "name": "LOCATE_CHAR_ANY_MEANS_CAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "020B",
          "member": "LocateOnFootCar3D",
          "name": "LOCATE_CHAR_ON_FOOT_CAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the vehicle on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "020C",
          "member": "LocateInCarCar3D",
          "name": "LOCATE_CHAR_IN_CAR_CAR_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the vehicle in a vehicle"
        },
        {
          "input": [
            {
              "name": "min",
              "type": "float"
            },
            {
              "name": "max",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "result",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "020D",
          "member": "RandomFloatInRange",
          "name": "GENERATE_RANDOM_FLOAT_IN_RANGE",
          "num_params": 3,
          "short_desc": "Returns a random float between the specified ranges"
        },
        {
          "input": [
            {
              "name": "min",
              "type": "int"
            },
            {
              "name": "max",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "result",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "020E",
          "member": "RandomIntInRange",
          "name": "GENERATE_RANDOM_INT_IN_RANGE",
          "num_params": 3,
          "short_desc": "Returns a random integer between the specified ranges"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "lockStatus",
              "type": "CarLock"
            }
          ],
          "class": "Car",
          "id": "020F",
          "member": "LockDoors",
          "name": "LOCK_CAR_DOORS",
          "num_params": 2,
          "short_desc": "Sets the locked status of the car's doors"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0210",
          "member": "Explode",
          "name": "EXPLODE_CAR",
          "num_params": 1,
          "short_desc": "Makes the vehicle explode"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "ExplosionType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "0211",
          "member": "AddExplosion",
          "name": "ADD_EXPLOSION",
          "num_params": 4,
          "short_desc": "Creates an explosion at the point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0212",
          "member": "IsUpright",
          "name": "IS_CAR_UPRIGHT",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is in the normal position (upright)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0213",
          "member": "TurnToFaceChar",
          "name": "TURN_CHAR_TO_FACE_CHAR",
          "num_params": 2,
          "short_desc": "Rotates the character to face the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "player",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "0214",
          "member": "TurnToFacePlayer",
          "name": "TURN_CHAR_TO_FACE_PLAYER",
          "num_params": 2,
          "short_desc": "Rotates the character to face the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "class": "Player",
          "id": "0215",
          "member": "TurnToFaceChar",
          "name": "TURN_PLAYER_TO_FACE_CHAR",
          "num_params": 2,
          "short_desc": "Rotates the player to face the character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0216",
          "member": "SetObjGotoCoordOnFoot",
          "name": "SET_CHAR_OBJ_GOTO_COORD_ON_FOOT",
          "num_params": 3,
          "short_desc": "Sets the character's objective to walk at the specified location"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0217",
          "name": "SET_CHAR_OBJ_GOTO_COORD_IN_CAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "pickupType",
              "type": "PickupType"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "0218",
          "member": "Create",
          "name": "CREATE_PICKUP",
          "num_params": 6,
          "short_desc": "Creates a pickup with the given model and type"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "class": "Pickup",
          "id": "0219",
          "input": [
            {
              "name": "self",
              "type": "Pickup"
            }
          ],
          "member": "HasBeenCollected",
          "name": "HAS_PICKUP_BEEN_COLLECTED",
          "num_params": 1,
          "short_desc": "Returns true if specified pickup has been collected"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Pickup"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "Pickup",
          "id": "021A",
          "member": "Remove",
          "name": "REMOVE_PICKUP",
          "num_params": 1,
          "short_desc": "Destroys the specified pickup, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "021B",
          "member": "SetTaxiLights",
          "name": "SET_TAXI_LIGHTS",
          "num_params": 2,
          "short_desc": "Sets whether the taxi's roof light is on"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "021C",
          "member": "PrintBigQ",
          "name": "PRINT_BIG_Q",
          "num_params": 3,
          "short_desc": "Displays a low-priority styled message for the specified time"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "021D",
          "member": "PrintWithNumberBigQ",
          "name": "PRINT_WITH_NUMBER_BIG_Q",
          "num_params": 4,
          "short_desc": "Displays a low-priority styled message in which the first string token~1~ is replaced with the specified number"
        },
        {
          "id": "021E",
          "name": "SET_GARAGE",
          "num_params": 10,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "021F",
          "name": "SET_GARAGE_WITH_CAR_MODEL",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Garage",
          "id": "0220",
          "member": "SetTargetCarForMission",
          "name": "SET_TARGET_CAR_FOR_MISSION_GARAGE",
          "num_params": 2,
          "short_desc": "Sets the garage to only accept the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Garage",
          "id": "0221",
          "member": "IsCarInMission",
          "name": "IS_CAR_IN_MISSION_GARAGE",
          "num_params": 1,
          "short_desc": "Returns true if a vehicle is in the garage"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0222",
          "member": "SetFreeBombs",
          "name": "SET_FREE_BOMBS",
          "num_params": 1,
          "short_desc": "Sets whether the player can use bomb shops for free"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0223",
          "name": "SET_POWERPOINT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0224",
          "name": "SET_ALL_TAXI_LIGHTS",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0225",
          "member": "IsArmedWithAnyBomb",
          "name": "IS_CAR_ARMED_WITH_ANY_BOMB",
          "num_params": 1,
          "short_desc": "Returns true if the specified vehicle has a car bomb installed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0226",
          "member": "ApplyBrakesToCar",
          "name": "APPLY_BRAKES_TO_PLAYERS_CAR",
          "num_params": 2,
          "short_desc": "Applies brakes to the player's car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0227",
          "member": "SetHealth",
          "name": "SET_PLAYER_HEALTH",
          "num_params": 2,
          "short_desc": "Sets the player's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0228",
          "member": "SetHealth",
          "name": "SET_CHAR_HEALTH",
          "num_params": 2,
          "short_desc": "Sets the character's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "health",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "0229",
          "member": "SetHealth",
          "name": "SET_CAR_HEALTH",
          "num_params": 2,
          "short_desc": "Sets the vehicle's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "022A",
          "member": "GetHealth",
          "name": "GET_PLAYER_HEALTH",
          "num_params": 2,
          "short_desc": "Returns the player's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "022B",
          "member": "GetHealth",
          "name": "GET_CHAR_HEALTH",
          "num_params": 2,
          "short_desc": "Returns the character's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "022C",
          "member": "GetHealth",
          "name": "GET_CAR_HEALTH",
          "num_params": 2,
          "short_desc": "Returns the vehicle's health"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "status",
              "type": "BombType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "022D",
          "member": "IsArmedWithBomb",
          "name": "IS_CAR_ARMED_WITH_BOMB",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle is armed with a bomb of the specified status"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "primaryColor",
              "type": "int"
            },
            {
              "name": "secondaryColor",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "022E",
          "member": "ChangeColor",
          "name": "CHANGE_CAR_COLOUR",
          "num_params": 3,
          "short_desc": "Sets the car's primary and secondary colors"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "022F",
          "member": "SwitchPedRoadsOn",
          "name": "SWITCH_PED_ROADS_ON",
          "num_params": 6,
          "short_desc": "Allows pedestrians to walk into the specified area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "0230",
          "member": "SwitchPedRoadsOff",
          "name": "SWITCH_PED_ROADS_OFF",
          "num_params": 6,
          "short_desc": "Forbids pedestrians to walk into the specified area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0231",
          "member": "LookAtCharAlways",
          "name": "CHAR_LOOK_AT_CHAR_ALWAYS",
          "num_params": 2,
          "short_desc": "Makes the character to keep looking at the direction of the other character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Player"
            }
          ],
          "class": "Char",
          "id": "0232",
          "member": "LookAtPlayerAlways",
          "name": "CHAR_LOOK_AT_PLAYER_ALWAYS",
          "num_params": 2,
          "short_desc": "Makes the character to keep looking at the direction of the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Player",
          "id": "0233",
          "member": "LookAtCharAlways",
          "name": "PLAYER_LOOK_AT_CHAR_ALWAYS",
          "num_params": 2,
          "short_desc": "Makes the player to keep looking at the direction of the character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0234",
          "member": "StopLooking",
          "name": "STOP_CHAR_LOOKING",
          "num_params": 1,
          "short_desc": "Makes the character to stop looking at the other character (022C) or player (022D)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "0235",
          "member": "StopLooking",
          "name": "STOP_PLAYER_LOOKING",
          "num_params": 1,
          "short_desc": "Makes the player to stop looking at the character (022E)"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0236",
          "name": "SWITCH_HELICOPTER",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0237",
          "name": "SET_GANG_ATTITUDE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0238",
          "name": "SET_GANG_GANG_ATTITUDE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0239",
          "name": "SET_GANG_PLAYER_ATTITUDE",
          "num_params": 0
        },
        {
          "id": "023A",
          "name": "SET_GANG_PED_MODELS",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Gang",
          "id": "023B",
          "member": "SetCarModel",
          "name": "SET_GANG_CAR_MODEL",
          "num_params": 2,
          "short_desc": "Sets the car used by members of the specified gang"
        },
        {
          "input": [
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "weaponType1",
              "type": "WeaponType"
            },
            {
              "name": "weaponType2",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Gang",
          "id": "023C",
          "member": "SetWeapons",
          "name": "SET_GANG_WEAPONS",
          "num_params": 3,
          "short_desc": "Sets the weapons that the specified gang can use"
        },
        {
          "id": "023D",
          "name": "SET_CHAR_OBJ_RUN_TO_AREA",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "023E",
          "member": "SetObjRunToCoord",
          "name": "SET_CHAR_OBJ_RUN_TO_COORD",
          "num_params": 3,
          "short_desc": "Sets the character's objective to run at the specified location"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "023F",
          "name": "IS_PLAYER_TOUCHING_OBJECT_ON_FOOT",
          "num_params": 0
        },
        {
          "id": "0240",
          "name": "IS_CHAR_TOUCHING_OBJECT_ON_FOOT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "int"
            },
            {
              "name": "modelName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "0241",
          "member": "LoadSpecialCharacter",
          "name": "LOAD_SPECIAL_CHARACTER",
          "num_params": 2,
          "short_desc": "Requests a special character's model to be loaded into the specified slot"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "0242",
          "member": "HasSpecialCharacterLoaded",
          "name": "HAS_SPECIAL_CHARACTER_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the special character's model (023C) is available for creation"
        },
        {
          "id": "0243",
          "name": "FLASH_CAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0244",
          "name": "FLASH_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0245",
          "name": "FLASH_OBJECT",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0246",
          "member": "IsInRemoteMode",
          "name": "IS_PLAYER_IN_REMOTE_MODE",
          "num_params": 1,
          "short_desc": "Returns true if the player is controlling a remote-control vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "bombType",
              "type": "BombType"
            }
          ],
          "id": "0247",
          "name": "ARM_CAR_WITH_BOMB",
          "num_params": 2,
          "class": "Car",
          "member": "ArmWithBomb",
          "short_desc": "Arms the vehicle with a bomb of the given type (In SA, this command only supports the mobile version)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "pedstat",
              "type": "PedStat"
            }
          ],
          "class": "Char",
          "id": "0248",
          "member": "SetPersonality",
          "name": "SET_CHAR_PERSONALITY",
          "num_params": 2,
          "short_desc": "Sets the ped stat of the character"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "0249",
          "member": "SetOffset",
          "name": "SET_CUTSCENE_OFFSET",
          "num_params": 3,
          "short_desc": "Sets the position for a cutscene"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animGroup",
              "type": "AnimGroup"
            }
          ],
          "class": "Char",
          "id": "024A",
          "member": "SetAnimGroup",
          "name": "SET_ANIM_GROUP_FOR_CHAR",
          "num_params": 2,
          "short_desc": "Sets the animation group for the character"
        },
        {
          "id": "024B",
          "name": "SET_ANIM_GROUP_FOR_PLAYER",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "024C",
          "member": "RequestModel",
          "name": "REQUEST_MODEL",
          "num_params": 1,
          "short_desc": "Requests a new model to load"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "024D",
          "member": "HasModelLoaded",
          "name": "HAS_MODEL_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the model is available for creation"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "024E",
          "member": "MarkModelAsNoLongerNeeded",
          "name": "MARK_MODEL_AS_NO_LONGER_NEEDED",
          "num_params": 1,
          "short_desc": "Releases the specified model, freeing game memory"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Phone",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Phone",
          "id": "024F",
          "member": "Grab",
          "name": "GRAB_PHONE",
          "num_params": 3,
          "short_desc": "Gets the phone at the specified X and Y coordinates"
        },
        {
          "id": "0250",
          "name": "SET_REPEATED_PHONE_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "0251",
          "name": "SET_PHONE_MESSAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0252",
          "name": "HAS_PHONE_DISPLAYED_MESSAGE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            }
          ],
          "class": "Phone",
          "id": "0253",
          "member": "TurnOff",
          "name": "TURN_PHONE_OFF",
          "num_params": 1,
          "short_desc": "Disables the phone from ringing"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "size",
              "type": "float"
            },
            {
              "name": "coronaType",
              "type": "CoronaType"
            },
            {
              "name": "flareType",
              "type": "FlareType"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "0254",
          "member": "DrawCorona",
          "name": "DRAW_CORONA",
          "num_params": 9,
          "short_desc": "Displays a corona at the specified location"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0255",
          "name": "DRAW_LIGHT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "0256",
          "member": "Store",
          "name": "STORE_WEATHER",
          "num_params": 0,
          "short_desc": "Saves the weather (type, interpolation value and the amount of rain fallen)"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "0257",
          "member": "Restore",
          "name": "RESTORE_WEATHER",
          "num_params": 0,
          "short_desc": "Restores the weather previously saved with 0251"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "0258",
          "member": "Store",
          "name": "STORE_CLOCK",
          "num_params": 0,
          "short_desc": "Saves the current time in game"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Clock",
          "id": "0259",
          "member": "Restore",
          "name": "RESTORE_CLOCK",
          "num_params": 0,
          "short_desc": "Restores the game time to the time when it was saved with 0253"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "025A",
          "member": "CriticalMission",
          "name": "RESTART_CRITICAL_MISSION",
          "num_params": 4,
          "short_desc": "Fades the screen and puts the player at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "025B",
          "member": "IsPlaying",
          "name": "IS_PLAYER_PLAYING",
          "num_params": 1,
          "short_desc": "Returns true if the player hasn't been wasted or busted (the player is still playing)"
        },
        {
          "id": "025C",
          "name": "SET_COLL_OBJ_NO_OBJ",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "025D",
          "name": "SET_COLL_OBJ_WAIT_ON_FOOT",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "025E",
          "name": "SET_COLL_OBJ_FLEE_ON_FOOT_TILL_SAFE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "025F",
          "name": "SET_COLL_OBJ_GUARD_SPOT",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0260",
          "name": "SET_COLL_OBJ_GUARD_AREA",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "0261",
          "name": "SET_COLL_OBJ_WAIT_IN_CAR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0262",
          "name": "SET_COLL_OBJ_KILL_CHAR_ON_FOOT",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0263",
          "name": "SET_COLL_OBJ_KILL_PLAYER_ON_FOOT",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0264",
          "name": "SET_COLL_OBJ_KILL_CHAR_ANY_MEANS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0265",
          "name": "SET_COLL_OBJ_KILL_PLAYER_ANY_MEANS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0266",
          "name": "SET_COLL_OBJ_FLEE_CHAR_ON_FOOT_TILL_SAFE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0267",
          "name": "SET_COLL_OBJ_FLEE_PLAYER_ON_FOOT_TILL_SAFE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0268",
          "name": "SET_COLL_OBJ_FLEE_CHAR_ON_FOOT_ALWAYS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0269",
          "name": "SET_COLL_OBJ_FLEE_PLAYER_ON_FOOT_ALWAYS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "026A",
          "name": "SET_COLL_OBJ_GOTO_CHAR_ON_FOOT",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "026B",
          "name": "SET_COLL_OBJ_GOTO_PLAYER_ON_FOOT",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "026C",
          "name": "SET_COLL_OBJ_LEAVE_CAR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "026D",
          "name": "SET_COLL_OBJ_ENTER_CAR_AS_PASSENGER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "026E",
          "name": "SET_COLL_OBJ_ENTER_CAR_AS_DRIVER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "026F",
          "name": "SET_COLL_OBJ_FOLLOW_CAR_IN_CAR",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0270",
          "name": "SET_COLL_OBJ_FIRE_AT_OBJECT_FROM_VEHICLE",
          "num_params": 0
        },
        {
          "id": "0271",
          "name": "COMMAND_0271",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0272",
          "name": "SET_COLL_OBJ_DESTROY_CAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0273",
          "name": "SET_COLL_OBJ_GOTO_AREA_ON_FOOT",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "0274",
          "name": "SET_COLL_OBJ_GOTO_AREA_IN_CAR",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0275",
          "name": "SET_COLL_OBJ_FOLLOW_CAR_ON_FOOT_WITH_OFFSET",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0276",
          "name": "SET_COLL_OBJ_GUARD_ATTACK",
          "num_params": 0
        },
        {
          "id": "0277",
          "name": "SET_COLL_OBJ_FOLLOW_ROUTE",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0278",
          "name": "SET_COLL_OBJ_GOTO_COORD_ON_FOOT",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0279",
          "name": "SET_COLL_OBJ_GOTO_COORD_IN_CAR",
          "num_params": 0
        },
        {
          "id": "027A",
          "name": "SET_COLL_OBJ_RUN_TO_AREA",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "027B",
          "name": "SET_COLL_OBJ_RUN_TO_COORD",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "027C",
          "name": "ADD_PEDS_IN_AREA_TO_COLL",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "027D",
          "name": "ADD_PEDS_IN_VEHICLE_TO_COLL",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "027E",
          "name": "CLEAR_COLL",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "027F",
          "name": "IS_COLL_IN_CARS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0280",
          "name": "LOCATE_COLL_ANY_MEANS_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0281",
          "name": "LOCATE_COLL_ON_FOOT_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0282",
          "name": "LOCATE_COLL_IN_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0283",
          "name": "LOCATE_STOPPED_COLL_ANY_MEANS_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0284",
          "name": "LOCATE_STOPPED_COLL_ON_FOOT_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0285",
          "name": "LOCATE_STOPPED_COLL_IN_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0286",
          "name": "LOCATE_COLL_ANY_MEANS_CHAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0287",
          "name": "LOCATE_COLL_ON_FOOT_CHAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0288",
          "name": "LOCATE_COLL_IN_CAR_CHAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0289",
          "name": "LOCATE_COLL_ANY_MEANS_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "028A",
          "name": "LOCATE_COLL_ON_FOOT_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "028B",
          "name": "LOCATE_COLL_IN_CAR_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "028C",
          "name": "LOCATE_COLL_ANY_MEANS_PLAYER_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "028D",
          "name": "LOCATE_COLL_ON_FOOT_PLAYER_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "028E",
          "name": "LOCATE_COLL_IN_CAR_PLAYER_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "028F",
          "name": "IS_COLL_IN_AREA_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0290",
          "name": "IS_COLL_IN_AREA_ON_FOOT_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0291",
          "name": "IS_COLL_IN_AREA_IN_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0292",
          "name": "IS_COLL_STOPPED_IN_AREA_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0293",
          "name": "IS_COLL_STOPPED_IN_AREA_ON_FOOT_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0294",
          "name": "IS_COLL_STOPPED_IN_AREA_IN_CAR_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0295",
          "name": "GET_NUMBER_OF_PEDS_IN_COLL",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0296",
          "member": "SetHeedThreats",
          "name": "SET_CHAR_HEED_THREATS",
          "num_params": 2,
          "short_desc": "Makes the character attack whoever attacks them"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0297",
          "member": "SetHeedThreats",
          "name": "SET_PLAYER_HEED_THREATS",
          "num_params": 2,
          "short_desc": "Makes the player to attack whoever attacks them"
        },
        {
          "output": [
            {
              "name": "mode",
              "type": "ControllerMode",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "0298",
          "member": "GetControllerMode",
          "name": "GET_CONTROLLER_MODE",
          "num_params": 1,
          "short_desc": "Returns the controller mode"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0299",
          "member": "SetCanRespray",
          "name": "SET_CAN_RESPRAY_CAR",
          "num_params": 2,
          "short_desc": "Enables or disables the ability to Pay'n'Spray the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "029A",
          "member": "IsTaxi",
          "name": "IS_TAXI",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle's model is Taxi (110), Cabbie (128), or Borgnine (148)"
        },
        {
          "input": [
            {
              "name": "slotId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "029B",
          "member": "UnloadSpecialCharacter",
          "name": "UNLOAD_SPECIAL_CHARACTER",
          "num_params": 1,
          "short_desc": "Releases the special character (023C), freeing game memory"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Player",
          "id": "029C",
          "member": "ResetNumOfModelsKilled",
          "name": "RESET_NUM_OF_MODELS_KILLED_BY_PLAYER",
          "num_params": 0,
          "short_desc": "Resets the count of how many times the player has destroyed a certain model (0298)"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "output": [
            {
              "name": "num",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "029D",
          "member": "GetNumOfModelsKilled",
          "name": "GET_NUM_OF_MODELS_KILLED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Returns the amount of times the player has destroyed a specific model",
          "attrs": {
            "is_static": true
          }
        },
        {
          "id": "029E",
          "name": "ACTIVATE_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "029F",
          "name": "SWITCH_TAXI_TIMER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Object",
          "id": "02A0",
          "member": "CreateNoOffset",
          "name": "CREATE_OBJECT_NO_OFFSET",
          "num_params": 5,
          "short_desc": "Creates an object without offset at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "02A1",
          "member": "IsBoat",
          "name": "IS_BOAT",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is a boat"
        },
        {
          "id": "02A2",
          "name": "SET_CHAR_OBJ_GOTO_AREA_ANY_MEANS",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "02A3",
          "name": "SET_COLL_OBJ_GOTO_AREA_ANY_MEANS",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02A4",
          "member": "IsStopped",
          "name": "IS_PLAYER_STOPPED",
          "num_params": 1,
          "short_desc": "Returns true if the player is not moving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "id": "02A5",
          "name": "IS_CHAR_STOPPED",
          "num_params": 1,
          "short_desc": "Returns true if the character is not moving",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "IsStopped"
        },
        {
          "input": [
            {
              "name": "time",
              "type": "int"
            },
            {
              "name": "allowSkip",
              "type": "bool"
            }
          ],
          "attrs": {},
          "id": "02A6",
          "name": "MESSAGE_WAIT",
          "num_params": 2,
          "short_desc": "Pauses the script execution (same as 0001) while allowing to skip the wait time by pressing X on the pad"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "02A7",
          "name": "ADD_PARTICLE_EFFECT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "02A8",
          "member": "SwitchWidescreen",
          "name": "SWITCH_WIDESCREEN",
          "num_params": 1,
          "short_desc": "Enables widescreen"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "02A9",
          "name": "ADD_SPRITE_BLIP_FOR_CAR",
          "num_params": 0
        },
        {
          "id": "02AA",
          "name": "ADD_SPRITE_BLIP_FOR_CHAR",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "02AB",
          "name": "ADD_SPRITE_BLIP_FOR_OBJECT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "02AC",
          "member": "AddSpriteForContactPoint",
          "name": "ADD_SPRITE_BLIP_FOR_CONTACT_POINT",
          "num_params": 5,
          "short_desc": "Adds a sprite blip to the contact point"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "02AD",
          "member": "AddSpriteForCoord",
          "name": "ADD_SPRITE_BLIP_FOR_COORD",
          "num_params": 5,
          "short_desc": "Adds a sprite blip to the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "02AE",
          "member": "SetOnlyDamagedByPlayer",
          "name": "SET_CHAR_ONLY_DAMAGED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Makes a character immune to everything except the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "02AF",
          "member": "SetOnlyDamagedByPlayer",
          "name": "SET_CAR_ONLY_DAMAGED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Makes a vehicle immune to everything except the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "bulletProof",
              "type": "bool"
            },
            {
              "name": "fireProof",
              "type": "bool"
            },
            {
              "name": "explosionProof",
              "type": "bool"
            },
            {
              "name": "collisionProof",
              "type": "bool"
            },
            {
              "name": "meleeProof",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "02B0",
          "member": "SetProofs",
          "name": "SET_CHAR_PROOFS",
          "num_params": 6,
          "short_desc": "Sets the character's immunities"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "bulletProof",
              "type": "bool"
            },
            {
              "name": "fireProof",
              "type": "bool"
            },
            {
              "name": "explosionProof",
              "type": "bool"
            },
            {
              "name": "collisionProof",
              "type": "bool"
            },
            {
              "name": "meleeProof",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "02B1",
          "member": "SetProofs",
          "name": "SET_CAR_PROOFS",
          "num_params": 6,
          "short_desc": "Sets the vehicle's immunities"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B2",
          "member": "IsInAngledArea2D",
          "name": "IS_PLAYER_IN_ANGLED_AREA_2D",
          "num_params": 7,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B3",
          "member": "IsInAngledAreaOnFoot2D",
          "name": "IS_PLAYER_IN_ANGLED_AREA_ON_FOOT_2D",
          "num_params": 7,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B4",
          "member": "IsInAngledAreaInCar2D",
          "name": "IS_PLAYER_IN_ANGLED_AREA_IN_CAR_2D",
          "num_params": 7,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B5",
          "member": "IsStoppedInAngledArea2D",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_2D",
          "num_params": 7,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B6",
          "member": "IsStoppedInAngledAreaOnFoot2D",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_ON_FOOT_2D",
          "num_params": 7,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B7",
          "member": "IsStoppedInAngledAreaInCar2D",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_IN_CAR_2D",
          "num_params": 7,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B8",
          "member": "IsInAngledArea3D",
          "name": "IS_PLAYER_IN_ANGLED_AREA_3D",
          "num_params": 9,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02B9",
          "member": "IsInAngledAreaOnFoot3D",
          "name": "IS_PLAYER_IN_ANGLED_AREA_ON_FOOT_3D",
          "num_params": 9,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02BA",
          "member": "IsInAngledAreaInCar3D",
          "name": "IS_PLAYER_IN_ANGLED_AREA_IN_CAR_3D",
          "num_params": 9,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02BB",
          "member": "IsStoppedInAngledArea3D",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_3D",
          "num_params": 9,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02BC",
          "member": "IsStoppedInAngledAreaOnFoot3D",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_ON_FOOT_3D",
          "num_params": 9,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02BD",
          "member": "IsStoppedInAngledAreaInCar3D",
          "name": "IS_PLAYER_STOPPED_IN_ANGLED_AREA_IN_CAR_3D",
          "num_params": 9,
          "short_desc": ""
        },
        {
          "id": "02BE",
          "name": "DEACTIVATE_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "id": "02BF",
          "name": "GET_NUMBER_OF_CARS_COLLECTED_BY_GARAGE",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "02C0",
          "name": "HAS_CAR_BEEN_TAKEN_TO_GARAGE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "02C1",
          "member": "SetSwatRequired",
          "name": "SET_SWAT_REQUIRED",
          "num_params": 1,
          "short_desc": "Sets patrol cars to Police cars and Enforcers"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "02C2",
          "name": "SET_FBI_REQUIRED",
          "num_params": 0
        },
        {
          "id": "02C3",
          "name": "SET_ARMY_REQUIRED",
          "num_params": 0,
          "attrs": {
            "is_unsupported": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "02C4",
          "member": "IsInWater",
          "name": "IS_CAR_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle is submerged in water"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "02C5",
          "member": "GetClosestCharNode",
          "name": "GET_CLOSEST_CHAR_NODE",
          "num_params": 6,
          "short_desc": "Returns the nearest path node from the specified coordinates that a pedestrian can walk on"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "02C6",
          "member": "GetClosestCarNode",
          "name": "GET_CLOSEST_CAR_NODE",
          "num_params": 6,
          "short_desc": "Returns the nearest path note from the specified coordinates that a vehicle can drive on"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "02C7",
          "member": "GotoCoordinatesAccurate",
          "name": "CAR_GOTO_COORDINATES_ACCURATE",
          "num_params": 4,
          "short_desc": "Makes the AI drive to the specified location obeying the traffic rules"
        },
        {
          "input": [
            {
              "name": "_zero",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02C8",
          "member": "StartRace",
          "name": "START_PACMAN_RACE",
          "num_params": 1,
          "short_desc": "Creates a predefined collection of donkey magazine pickups"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02C9",
          "member": "StartRecord",
          "name": "START_PACMAN_RECORD",
          "num_params": 0,
          "short_desc": "Stores the current player's position for debugging purposes during the pacman race"
        },
        {
          "output": [
            {
              "name": "num",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02CA",
          "member": "GetNumberOfPowerPillsEaten",
          "name": "GET_NUMBER_OF_POWER_PILLS_EATEN",
          "num_params": 1,
          "short_desc": "Returns the number of donkey magazine pickups (02C3) collected"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02CB",
          "member": "Clear",
          "name": "CLEAR_PACMAN",
          "num_params": 0,
          "short_desc": "Removes all donkey magazine (02C3) and platinum (02C7) pickups"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "distance",
              "type": "float"
            },
            {
              "name": "count",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02CC",
          "member": "StartScramble",
          "name": "START_PACMAN_SCRAMBLE",
          "num_params": 5,
          "short_desc": "Creates a collection of platinum pickups nearby the specified location"
        },
        {
          "output": [
            {
              "name": "num",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02CD",
          "member": "GetNumberOfPowerPillsCarried",
          "name": "GET_NUMBER_OF_POWER_PILLS_CARRIED",
          "num_params": 1,
          "short_desc": "Returns the number of platinum pickups (02C7) collected in a vehicle"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02CE",
          "member": "ClearNumberOfPowerPillsCarried",
          "name": "CLEAR_NUMBER_OF_POWER_PILLS_CARRIED",
          "num_params": 0,
          "short_desc": "Clears the number of platinum pickups (02C7) collected in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "02CF",
          "member": "IsOnScreen",
          "name": "IS_CAR_ON_SCREEN",
          "num_params": 1,
          "short_desc": "Returns true if the car is visible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02D0",
          "member": "IsOnScreen",
          "name": "IS_CHAR_ON_SCREEN",
          "num_params": 1,
          "short_desc": "Returns true if the character is visible"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "02D1",
          "member": "IsOnScreen",
          "name": "IS_OBJECT_ON_SCREEN",
          "num_params": 1,
          "short_desc": "Returns true if the object is visible"
        },
        {
          "input": [
            {
              "name": "",
              "type": "label"
            },
            {
              "name": "_unused",
              "type": "label"
            }
          ],
          "attrs": {},
          "id": "02D2",
          "name": "GOSUB_FILE",
          "num_params": 2,
          "short_desc": "Transfers the script execution to the label as a subroutine"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "groundZ",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "02D3",
          "member": "GetGroundZFor3DCoord",
          "name": "GET_GROUND_Z_FOR_3D_COORD",
          "num_params": 4,
          "short_desc": "Stores the ground position at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ScriptFire",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "ScriptFire",
          "id": "02D4",
          "member": "Create",
          "name": "START_SCRIPT_FIRE",
          "num_params": 4,
          "short_desc": "Creates a script fire at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ScriptFire"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "ScriptFire",
          "id": "02D5",
          "member": "IsExtinguished",
          "name": "IS_SCRIPT_FIRE_EXTINGUISHED",
          "num_params": 1,
          "short_desc": "Returns true if the script fire has been put out"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ScriptFire"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "ScriptFire",
          "id": "02D6",
          "member": "Remove",
          "name": "REMOVE_SCRIPT_FIRE",
          "num_params": 1,
          "short_desc": "Removes the script fire"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "02D7",
          "member": "SetComedyControls",
          "name": "SET_COMEDY_CONTROLS",
          "num_params": 2,
          "short_desc": "Makes the vehicle harder to control"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Boat",
          "id": "02D8",
          "member": "Goto",
          "name": "BOAT_GOTO_COORDS",
          "num_params": 4,
          "short_desc": "Makes the boat sail to the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            }
          ],
          "class": "Boat",
          "id": "02D9",
          "member": "Stop",
          "name": "BOAT_STOP",
          "num_params": 1,
          "short_desc": "Turns off the car's engine"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02DA",
          "member": "IsShootingInArea",
          "name": "IS_PLAYER_SHOOTING_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns true if the player fired a weapon within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "topRightX",
              "type": "float"
            },
            {
              "name": "topRightY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02DB",
          "member": "IsShootingInArea",
          "name": "IS_CHAR_SHOOTING_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns true if the character fired a weapon within the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02DC",
          "member": "IsCurrentWeapon",
          "name": "IS_CURRENT_PLAYER_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the player is holding the given type of weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02DD",
          "member": "IsCurrentWeapon",
          "name": "IS_CURRENT_CHAR_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the character is holding the given type of weapon"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02DE",
          "member": "ClearNumberOfPowerPillsEaten",
          "name": "CLEAR_NUMBER_OF_POWER_PILLS_EATEN",
          "num_params": 0,
          "short_desc": "Clears the number of donkey magazine pickups (02C3) collected"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pacman",
          "id": "02DF",
          "member": "AddPowerPill",
          "name": "ADD_POWER_PILL",
          "num_params": 3,
          "short_desc": "Creates a single donkey magazine pickup"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            },
            {
              "name": "maxSpeed",
              "type": "float"
            }
          ],
          "class": "Boat",
          "id": "02E0",
          "member": "SetCruiseSpeed",
          "name": "SET_BOAT_CRUISE_SPEED",
          "num_params": 2,
          "short_desc": "Sets the boat's max speed"
        },
        {
          "id": "02E1",
          "name": "GET_RANDOM_CHAR_IN_AREA",
          "num_params": 8,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            }
          ]
        },
        {
          "id": "02E2",
          "name": "GET_RANDOM_CHAR_IN_ZONE",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02E3",
          "member": "IsInTaxi",
          "name": "IS_PLAYER_IN_TAXI",
          "num_params": 1,
          "short_desc": "Returns true if the player is driving a taxi"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "02E4",
          "member": "IsShooting",
          "name": "IS_PLAYER_SHOOTING",
          "num_params": 1,
          "short_desc": "Returns true if the player is firing a weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02E5",
          "member": "IsShooting",
          "name": "IS_CHAR_SHOOTING",
          "num_params": 1,
          "short_desc": "Returns true if the character is firing a weapon"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "cashAmount",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "02E6",
          "member": "CreateMoney",
          "name": "CREATE_MONEY_PICKUP",
          "num_params": 5,
          "short_desc": "Creates a money pickup with the specified cash value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "accuracy",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "02E7",
          "member": "SetAccuracy",
          "name": "SET_CHAR_ACCURACY",
          "num_params": 2,
          "short_desc": "Affects how often the character will hit the target when attacking with a weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "speed",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "02E8",
          "member": "GetSpeed",
          "name": "GET_CAR_SPEED",
          "num_params": 2,
          "short_desc": "Gets the car's speed"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02E9",
          "member": "Load",
          "name": "LOAD_CUTSCENE",
          "num_params": 1,
          "short_desc": "Loads the data for the specified cutscene"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "CutsceneObject",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "CutsceneObject",
          "id": "02EA",
          "member": "Create",
          "name": "CREATE_CUTSCENE_OBJECT",
          "num_params": 2,
          "short_desc": "Creates a new cutscene object with the model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CutsceneObject"
            },
            {
              "name": "animation",
              "type": "string"
            }
          ],
          "class": "CutsceneObject",
          "id": "02EB",
          "member": "SetAnim",
          "name": "SET_CUTSCENE_ANIM",
          "num_params": 2,
          "short_desc": "Sets the animation of the cutscene object"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02EC",
          "member": "Start",
          "name": "START_CUTSCENE",
          "num_params": 0,
          "short_desc": "Starts the loaded cutscene (02E4)"
        },
        {
          "output": [
            {
              "name": "time",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02ED",
          "member": "GetTime",
          "name": "GET_CUTSCENE_TIME",
          "num_params": 1,
          "short_desc": "Returns the time in milliseconds passed since the cutscene has started (02E7)"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02EE",
          "member": "HasFinished",
          "name": "HAS_CUTSCENE_FINISHED",
          "num_params": 0,
          "short_desc": "Returns true if the cutscene has finished"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "02EF",
          "member": "Clear",
          "name": "CLEAR_CUTSCENE",
          "num_params": 0,
          "short_desc": "Ends the current cutscene, freeing game memory"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "02F0",
          "member": "RestoreJumpcut",
          "name": "RESTORE_CAMERA_JUMPCUT",
          "num_params": 0,
          "short_desc": "Restores the camera, putting it back behind the player"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "02F1",
          "member": "CreateCollectable",
          "name": "CREATE_COLLECTABLE1",
          "num_params": 3,
          "short_desc": "Creates a hidden package pickup at the location"
        },
        {
          "input": [
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "02F2",
          "member": "SetCollectableTotal",
          "name": "SET_COLLECTABLE1_TOTAL",
          "num_params": 1,
          "short_desc": "Sets the total number of hidden packages to collect"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "02F3",
          "member": "IsProjectileInArea",
          "name": "IS_PROJECTILE_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns true if a projectile is in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "02F4",
          "member": "DestroyProjectilesInArea",
          "name": "DESTROY_PROJECTILES_IN_AREA",
          "num_params": 6,
          "short_desc": "Destroys all projectiles in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pickup",
          "id": "02F5",
          "member": "DropMine",
          "name": "DROP_MINE",
          "num_params": 3,
          "short_desc": "Creates a mine pickup of type MineInactive at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pickup",
          "id": "02F6",
          "member": "DropNauticalMine",
          "name": "DROP_NAUTICAL_MINE",
          "num_params": 3,
          "short_desc": "Creates a nautical mine pickup of type MineInactive at the location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "modelId",
              "type": "model_char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "02F7",
          "member": "IsModel",
          "name": "IS_CHAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns true if the character's model ID is equivalent to the model ID passed"
        },
        {
          "input": [
            {
              "name": "cutsceneModelId",
              "type": "model_any"
            },
            {
              "name": "modelName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "02F8",
          "member": "LoadSpecialModel",
          "name": "LOAD_SPECIAL_MODEL",
          "num_params": 2,
          "short_desc": "Loads a model with the given name as a cutscene model id (GTA III: 185-189, VC: 295-299)"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            },
            {
              "name": "cutsceneObject",
              "type": "CutsceneObject"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "CutsceneHead",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "CutsceneHead",
          "id": "02F9",
          "member": "Create",
          "name": "CREATE_CUTSCENE_HEAD",
          "num_params": 3,
          "short_desc": "Creates a head attached to the cutscene object (02E5)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CutsceneHead"
            },
            {
              "name": "animation",
              "type": "string"
            }
          ],
          "class": "CutsceneHead",
          "id": "02FA",
          "member": "SetAnim",
          "name": "SET_CUTSCENE_HEAD_ANIM",
          "num_params": 2,
          "short_desc": "Sets the animation of the cuscene head"
        },
        {
          "input": [
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "result",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "02FB",
          "member": "Sin",
          "name": "SIN",
          "num_params": 2,
          "short_desc": "Returns the sine of the angle"
        },
        {
          "input": [
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "result",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "02FC",
          "member": "Cos",
          "name": "COS",
          "num_params": 2,
          "short_desc": "Returns the cosine of the angle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "02FD",
          "member": "GetForwardX",
          "name": "GET_CAR_FORWARD_X",
          "num_params": 2,
          "short_desc": "Returns the X coord of the vehicle's angle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "02FE",
          "member": "GetForwardY",
          "name": "GET_CAR_FORWARD_Y",
          "num_params": 2,
          "short_desc": "Returns the Y coord of the vehicle's angle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            },
            {
              "name": "type",
              "type": "GarageType"
            }
          ],
          "class": "Garage",
          "id": "02FF",
          "member": "ChangeType",
          "name": "CHANGE_GARAGE_TYPE",
          "num_params": 2,
          "short_desc": "Sets the garage's type"
        },
        {
          "input": [
            {
              "name": "craneX",
              "type": "float"
            },
            {
              "name": "craneY",
              "type": "float"
            },
            {
              "name": "pickupZoneX1",
              "type": "float"
            },
            {
              "name": "pickupZoneY1",
              "type": "float"
            },
            {
              "name": "pickupZoneX2",
              "type": "float"
            },
            {
              "name": "pickupZoneY2",
              "type": "float"
            },
            {
              "name": "dropOffX",
              "type": "float"
            },
            {
              "name": "dropOffY",
              "type": "float"
            },
            {
              "name": "dropOffZ",
              "type": "float"
            },
            {
              "name": "dropOffAngle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Crane",
          "id": "0300",
          "member": "ActivateCrusher",
          "name": "ACTIVATE_CRUSHER_CRANE",
          "num_params": 10,
          "short_desc": "Activates a crusher crane located within 100.0 units of the specified location"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0301",
          "member": "PrintWith2Numbers",
          "name": "PRINT_WITH_2_NUMBERS",
          "num_params": 5,
          "short_desc": "Displays a styled message in which the first two ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0302",
          "member": "PrintWith2NumbersNow",
          "name": "PRINT_WITH_2_NUMBERS_NOW",
          "num_params": 5,
          "short_desc": "Displays a styled message in which the first two ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0303",
          "member": "PrintWith2NumbersSoon",
          "name": "PRINT_WITH_2_NUMBERS_SOON",
          "num_params": 5,
          "short_desc": "Displays a styled message with the 2 specified numbers when there are no other messages being printed"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0304",
          "member": "PrintWith3Numbers",
          "name": "PRINT_WITH_3_NUMBERS",
          "num_params": 6,
          "short_desc": "Displays a styled message in which the first three ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0305",
          "member": "PrintWith3NumbersNow",
          "name": "PRINT_WITH_3_NUMBERS_NOW",
          "num_params": 6,
          "short_desc": "Displays a styled message in which the first three ~1~ tokens are substituted with the specified numbers"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0306",
          "name": "PRINT_WITH_3_NUMBERS_SOON",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0307",
          "member": "PrintWith4Numbers",
          "name": "PRINT_WITH_4_NUMBERS",
          "num_params": 7,
          "short_desc": "Displays a styled message in which the first four ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0308",
          "member": "PrintWith4NumbersNow",
          "name": "PRINT_WITH_4_NUMBERS_NOW",
          "num_params": 7,
          "short_desc": "Displays a styled message in which the first four ~1~ tokens are substituted with the specified numbers"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0309",
          "name": "PRINT_WITH_4_NUMBERS_SOON",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "030A",
          "member": "PrintWith5Numbers",
          "name": "PRINT_WITH_5_NUMBERS",
          "num_params": 8,
          "short_desc": "Displays a styled message in which the first five ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "030B",
          "member": "PrintWith5NumbersNow",
          "name": "PRINT_WITH_5_NUMBERS_NOW",
          "num_params": 8,
          "short_desc": "Displays a styled message in which the first five ~1~ tokens are substituted with the specified numbers"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "030C",
          "name": "PRINT_WITH_5_NUMBERS_SOON",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "num6",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "030D",
          "member": "PrintWith6Numbers",
          "name": "PRINT_WITH_6_NUMBERS",
          "num_params": 9,
          "short_desc": "Displays a styled message in which the first six ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "num6",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "030E",
          "member": "PrintWith6NumbersNow",
          "name": "PRINT_WITH_6_NUMBERS_NOW",
          "num_params": 9,
          "short_desc": "Displays a styled message in which the first six ~1~ tokens are substituted with the specified numbers"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "030F",
          "name": "PRINT_WITH_6_NUMBERS_SOON",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leader",
              "type": "Char"
            },
            {
              "name": "formationType",
              "type": "FormationType"
            }
          ],
          "class": "Char",
          "id": "0310",
          "member": "SetObjFollowCharInFormation",
          "name": "SET_CHAR_OBJ_FOLLOW_CHAR_IN_FORMATION",
          "num_params": 3,
          "short_desc": "Sets the character's objective to escort the leader character"
        },
        {
          "input": [
            {
              "name": "progress",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0311",
          "member": "PlayerMadeProgress",
          "name": "PLAYER_MADE_PROGRESS",
          "num_params": 1,
          "short_desc": "Increases the progress made stat by the specified amount"
        },
        {
          "input": [
            {
              "name": "maxProgress",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0312",
          "member": "SetProgressTotal",
          "name": "SET_PROGRESS_TOTAL",
          "num_params": 1,
          "short_desc": "Sets the maximum progress the player can reach"
        },
        {
          "input": [
            {
              "name": "distance",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0313",
          "member": "RegisterJumpDistance",
          "name": "REGISTER_JUMP_DISTANCE",
          "num_params": 1,
          "short_desc": "Saves the highest insane jump distance stat"
        },
        {
          "input": [
            {
              "name": "height",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0314",
          "member": "RegisterJumpHeight",
          "name": "REGISTER_JUMP_HEIGHT",
          "num_params": 1,
          "short_desc": "Saves the highest insane jump height stat"
        },
        {
          "input": [
            {
              "name": "flips",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0315",
          "member": "RegisterJumpFlips",
          "name": "REGISTER_JUMP_FLIPS",
          "num_params": 1,
          "short_desc": "Saves the highest insane jump flips stat"
        },
        {
          "input": [
            {
              "name": "spins",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0316",
          "member": "RegisterJumpSpins",
          "name": "REGISTER_JUMP_SPINS",
          "num_params": 1,
          "short_desc": "Saves the highest insane jump rotation stat"
        },
        {
          "input": [
            {
              "name": "stunt",
              "type": "StuntType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0317",
          "member": "RegisterJumpStunt",
          "name": "REGISTER_JUMP_STUNT",
          "num_params": 1,
          "short_desc": "Saves the best insane stunt stat"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0318",
          "member": "RegisterUniqueJumpFound",
          "name": "REGISTER_UNIQUE_JUMP_FOUND",
          "num_params": 0,
          "short_desc": "Increments the completed number of unique stunt jumps stat by 1"
        },
        {
          "input": [
            {
              "name": "total",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0319",
          "member": "SetUniqueJumpsTotal",
          "name": "SET_UNIQUE_JUMPS_TOTAL",
          "num_params": 1,
          "short_desc": "Sets the total number of unique stunt jumps stat"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "031A",
          "member": "RegisterPassengerDroppedOffTaxi",
          "name": "REGISTER_PASSENGER_DROPPED_OFF_TAXI",
          "num_params": 0,
          "short_desc": "Increments the number of passengers dropped off stat by 1"
        },
        {
          "input": [
            {
              "name": "cashAmount",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "031B",
          "member": "RegisterMoneyMadeTaxi",
          "name": "REGISTER_MONEY_MADE_TAXI",
          "num_params": 1,
          "short_desc": "Adds the value to the cash made in taxi stat"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "031C",
          "member": "RegisterMissionGiven",
          "name": "REGISTER_MISSION_GIVEN",
          "num_params": 0,
          "short_desc": "Increments the number of mission attempts stat by one"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "031D",
          "member": "RegisterMissionPassed",
          "name": "REGISTER_MISSION_PASSED",
          "num_params": 1,
          "short_desc": "Sets the GXT of the last mission passed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "031E",
          "member": "SetRunning",
          "name": "SET_CHAR_RUNNING",
          "num_params": 2,
          "short_desc": "Makes the character run"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "031F",
          "member": "RemoveAllScriptFires",
          "name": "REMOVE_ALL_SCRIPT_FIRES",
          "num_params": 0,
          "short_desc": "Removes all script fires (02CF)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "color",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0320",
          "member": "IsFirstColor",
          "name": "IS_FIRST_CAR_COLOUR",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle's primary color matches the specified color"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "color",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0321",
          "member": "IsSecondColor",
          "name": "IS_SECOND_CAR_COLOUR",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle's secondary color matches the specified color"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0322",
          "member": "HasBeenDamagedByWeapon",
          "name": "HAS_CHAR_BEEN_DAMAGED_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the character has been hit by the specified weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0323",
          "member": "HasBeenDamagedByWeapon",
          "name": "HAS_CAR_BEEN_DAMAGED_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle has been hit by the specified weapon"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leader",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0324",
          "member": "IsInCharsGroup",
          "name": "IS_CHAR_IN_CHARS_GROUP",
          "num_params": 2,
          "short_desc": "Returns true if the character is part of the leader's group (01DE)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "leader",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0325",
          "member": "IsInPlayersGroup",
          "name": "IS_CHAR_IN_PLAYERS_GROUP",
          "num_params": 2,
          "short_desc": "Returns true if the character is part of the leader's group (01DF)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0326",
          "member": "ExplodeHead",
          "name": "EXPLODE_CHAR_HEAD",
          "num_params": 1,
          "short_desc": "Dismembers the character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "0327",
          "member": "ExplodeHead",
          "name": "EXPLODE_PLAYER_HEAD",
          "num_params": 1,
          "short_desc": "Kills the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Boat"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Boat",
          "id": "0328",
          "member": "Anchor",
          "name": "ANCHOR_BOAT",
          "num_params": 2,
          "short_desc": "Makes the boat stay motionless in the water"
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "dayOrNight",
              "type": "DayOrNight"
            },
            {
              "name": "pedGroup",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Zone",
          "id": "0329",
          "member": "SetGroup",
          "name": "SET_ZONE_GROUP",
          "num_params": 3,
          "short_desc": "Assigns one of the ped groups defined in pedgrp.dat to the map zone"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ScriptFire",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "ScriptFire",
          "id": "032A",
          "member": "CreateCarFire",
          "name": "START_CAR_FIRE",
          "num_params": 2,
          "short_desc": "Creates a script fire on the vehicle"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ScriptFire",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "ScriptFire",
          "id": "032B",
          "member": "CreateCharFire",
          "name": "START_CHAR_FIRE",
          "num_params": 2,
          "short_desc": "Creates a script fire on the character"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "World",
          "id": "032C",
          "member": "GetRandomCarOfTypeInArea",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns the handle of a random car with the specified model in the specified 2D area, or -1 otherwise",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "World",
          "id": "032D",
          "member": "GetRandomCarOfTypeInZone",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_ZONE",
          "num_params": 3,
          "short_desc": "Returns the handle of a random vehicle with the specified model in the specified map zone, or -1 otherwise",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Garage",
          "id": "032E",
          "member": "HasResprayHappened",
          "name": "HAS_RESPRAY_HAPPENED",
          "num_params": 1,
          "short_desc": "Returns true if the player's car has been resprayed by the garage"
        },
        {
          "input": [
            {
              "name": "zoom",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "032F",
          "member": "SetZoom",
          "name": "SET_CAMERA_ZOOM",
          "num_params": 1,
          "short_desc": "Sets how far behind the camera is from the player"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "pickupType",
              "type": "PickupType"
            },
            {
              "name": "ammo",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "class": "Pickup",
          "id": "0330",
          "member": "CreateWithAmmo",
          "name": "CREATE_PICKUP_WITH_AMMO",
          "num_params": 7,
          "short_desc": "Creates a weapon pickup, giving the player the specified amount of ammo when they pick it up",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "target",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0331",
          "member": "SetRamCar",
          "name": "SET_CAR_RAM_CAR",
          "num_params": 2,
          "short_desc": "Sets the AI driver's mission to ram another car (similar to 00AF with RamCarFaraway)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "target",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0332",
          "member": "SetBlockCar",
          "name": "SET_CAR_BLOCK_CAR",
          "num_params": 2,
          "short_desc": "Set's the AI driver's mission to obstruct another's car pathway (similar to 00AF with BlockCarFaraway)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0333",
          "member": "SetObjCatchTrain",
          "name": "SET_CHAR_OBJ_CATCH_TRAIN",
          "num_params": 1,
          "short_desc": "Sets the character's objective to enter a nearby train"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0334",
          "name": "SET_COLL_OBJ_CATCH_TRAIN",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0335",
          "member": "SetNeverGetsTired",
          "name": "SET_PLAYER_NEVER_GETS_TIRED",
          "num_params": 2,
          "short_desc": "Defines whether the player can run fast forever"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0336",
          "member": "SetFastReload",
          "name": "SET_PLAYER_FAST_RELOAD",
          "num_params": 2,
          "short_desc": "Defines whether the player can reload their gun faster"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0337",
          "member": "SetBleeding",
          "name": "SET_CHAR_BLEEDING",
          "num_params": 2,
          "short_desc": "Makes a character bleed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0338",
          "member": "SetFunnySuspension",
          "name": "SET_CAR_FUNNY_SUSPENSION",
          "num_params": 2,
          "short_desc": "",
          "attrs": {
            "is_nop": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0339",
          "member": "SetBigWheels",
          "name": "SET_CAR_BIG_WHEELS",
          "num_params": 2,
          "short_desc": "Sets the car's big wheels property (unused)"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "033A",
          "member": "SetFreeResprays",
          "name": "SET_FREE_RESPRAYS",
          "num_params": 1,
          "short_desc": "Defines whether the player can respray their car for free"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "033B",
          "member": "SetVisible",
          "name": "SET_PLAYER_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets whether the player is visible or not"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "033C",
          "member": "SetVisible",
          "name": "SET_CHAR_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets whether the character is visible or not"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "id": "033D",
          "name": "SET_CAR_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle is visible or not",
          "class": "Car",
          "member": "SetVisible"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "solid",
              "type": "bool"
            },
            {
              "name": "car",
              "type": "bool"
            },
            {
              "name": "char",
              "type": "bool"
            },
            {
              "name": "object",
              "type": "bool"
            },
            {
              "name": "particle",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "033E",
          "member": "IsAreaOccupied",
          "name": "IS_AREA_OCCUPIED",
          "num_params": 11,
          "short_desc": "Returns true if there is anything with the specified properties within the 3D area"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "DrugRun",
          "id": "033F",
          "member": "Start",
          "name": "START_DRUG_RUN",
          "num_params": 0,
          "short_desc": "Creates a plane flying along the prerecorded path in the 'S.A.M.' mission"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "DrugRun",
          "id": "0340",
          "member": "HasBeenCompleted",
          "name": "HAS_DRUG_RUN_BEEN_COMPLETED",
          "num_params": 0,
          "short_desc": "Returns true if the plane in the 'S.A.M.' mission has landed"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "DrugRun",
          "id": "0341",
          "member": "HasPlaneBeenShotDown",
          "name": "HAS_DRUG_PLANE_BEEN_SHOT_DOWN",
          "num_params": 0,
          "short_desc": "Returns true if the plane in the 'S.A.M.' mission has been destroyed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "0342",
          "member": "SaveFromFires",
          "name": "SAVE_PLAYER_FROM_FIRES",
          "num_params": 1,
          "short_desc": "Removes all fires located within 3.0 units of the player's position"
        },
        {
          "input": [
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0343",
          "member": "Display",
          "name": "DISPLAY_TEXT",
          "num_params": 3,
          "short_desc": "Draws text at the specified on-screen position"
        },
        {
          "input": [
            {
              "name": "widthScale",
              "type": "float"
            },
            {
              "name": "heightScale",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0344",
          "member": "SetScale",
          "name": "SET_TEXT_SCALE",
          "num_params": 2,
          "short_desc": "Scales the width and height of the text letters"
        },
        {
          "input": [
            {
              "name": "red",
              "type": "int"
            },
            {
              "name": "green",
              "type": "int"
            },
            {
              "name": "blue",
              "type": "int"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0345",
          "member": "SetColor",
          "name": "SET_TEXT_COLOUR",
          "num_params": 4,
          "short_desc": "Sets the color of the text letters"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0346",
          "member": "SetJustify",
          "name": "SET_TEXT_JUSTIFY",
          "num_params": 1,
          "short_desc": "Sets the text to be drawn justified, which means the text will wrap in order to fill an even rectangle of space"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0347",
          "member": "SetCenter",
          "name": "SET_TEXT_CENTRE",
          "num_params": 1,
          "short_desc": "Centers the text"
        },
        {
          "input": [
            {
              "name": "width",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0348",
          "member": "SetWrapX",
          "name": "SET_TEXT_WRAPX",
          "num_params": 1,
          "short_desc": "Sets the line width of the text"
        },
        {
          "input": [
            {
              "name": "width",
              "type": "float"
            }
          ],
          "id": "0349",
          "name": "SET_TEXT_CENTRE_SIZE",
          "num_params": 1,
          "short_desc": "Sets the line width of the centered text",
          "class": "Text",
          "member": "SetCenterSize",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "034A",
          "member": "SetBackground",
          "name": "SET_TEXT_BACKGROUND",
          "num_params": 1,
          "short_desc": "Gives the text a background (0346)"
        },
        {
          "input": [
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            },
            {
              "name": "a",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "034B",
          "member": "SetBackgroundColor",
          "name": "SET_TEXT_BACKGROUND_COLOUR",
          "num_params": 4,
          "short_desc": "Sets the color of the background of the text"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "034C",
          "member": "SetBackgroundOnlyText",
          "name": "SET_TEXT_BACKGROUND_ONLY_TEXT",
          "num_params": 1,
          "short_desc": "Sets the background of the text to enclose centered text (0342 and 0346)"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "034D",
          "member": "SetProportional",
          "name": "SET_TEXT_PROPORTIONAL",
          "num_params": 1,
          "short_desc": "Makes the text size proportionate"
        },
        {
          "input": [
            {
              "name": "font",
              "type": "Font"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "034E",
          "member": "SetFont",
          "name": "SET_TEXT_FONT",
          "num_params": 1,
          "short_desc": "Sets the text draw font"
        },
        {
          "id": "034F",
          "name": "INDUSTRIAL_PASSED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0350",
          "name": "COMMERCIAL_PASSED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0351",
          "name": "SUBURBAN_PASSED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "fromAngle",
              "type": "float"
            },
            {
              "name": "toAngle",
              "type": "float"
            },
            {
              "name": "collisionCheck",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "0352",
          "member": "Rotate",
          "name": "ROTATE_OBJECT",
          "num_params": 4,
          "short_desc": "Rotates the object from one angle to another, optionally accounting for a collision during the rotation"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "xSpeed",
              "type": "float"
            },
            {
              "name": "ySpeed",
              "type": "float"
            },
            {
              "name": "zSpeed",
              "type": "float"
            },
            {
              "name": "collisionCheck",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "0353",
          "member": "Slide",
          "name": "SLIDE_OBJECT",
          "num_params": 8,
          "short_desc": "Returns true if the object has finished moving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0354",
          "member": "RemoveElegantly",
          "name": "REMOVE_CHAR_ELEGANTLY",
          "num_params": 1,
          "short_desc": "Removes the character with a fade, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0355",
          "member": "SetStayInSamePlace",
          "name": "SET_CHAR_STAY_IN_SAME_PLACE",
          "num_params": 2,
          "short_desc": "Makes the character maintain their position when attacked"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0356",
          "member": "IsNasty",
          "name": "IS_NASTY_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the game has no violent elements censored"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "modelName",
              "type": "string"
            }
          ],
          "class": "Char",
          "id": "0357",
          "member": "Undress",
          "name": "UNDRESS_CHAR",
          "num_params": 2,
          "short_desc": "Removes the character and requests a new special model to load"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0358",
          "member": "Dress",
          "name": "DRESS_CHAR",
          "num_params": 1,
          "short_desc": "Respawns the character using the model requested with 0352"
        },
        {
          "input": [
            {
              "name": "startTime",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "ChaseScene",
          "id": "0359",
          "member": "Start",
          "name": "START_CHASE_SCENE",
          "num_params": 1,
          "short_desc": "Starts the chase scene (intro mission custscene)"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "ChaseScene",
          "id": "035A",
          "member": "Stop",
          "name": "STOP_CHASE_SCENE",
          "num_params": 0,
          "short_desc": "Stops the chase scene (intro mission custscene)"
        },
        {
          "input": [
            {
              "name": "explosionType",
              "type": "ExplosionType"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "035B",
          "member": "IsExplosionInArea",
          "name": "IS_EXPLOSION_IN_AREA",
          "num_params": 7,
          "short_desc": "Returns true if there is an explosion of the specified type in the 3D area"
        },
        {
          "input": [
            {
              "name": "explosionType",
              "type": "ExplosionType"
            },
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "035C",
          "member": "IsExplosionInZone",
          "name": "IS_EXPLOSION_IN_ZONE",
          "num_params": 2,
          "short_desc": "Returns true if an explosion of the specified type in the map zone"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "DrugDropOff",
          "id": "035D",
          "member": "Start",
          "name": "START_DRUG_DROP_OFF",
          "num_params": 0,
          "short_desc": "Creates a plane flying along the prerecorded path in the 'A Drop In The Ocean' mission"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "DrugDropOff",
          "id": "035E",
          "member": "HasPlaneBeenShotDown",
          "name": "HAS_DROP_OFF_PLANE_BEEN_SHOT_DOWN",
          "num_params": 0,
          "short_desc": "Returns true if the plane in the 'A Drop In The Ocean' mission has been destroyed"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "DrugDropOff",
          "id": "035F",
          "member": "FindPlaneCoordinates",
          "name": "FIND_DROP_OFF_PLANE_COORDINATES",
          "num_params": 3,
          "short_desc": "Stores the current coordinates of the plane in the 'A Drop In The Ocean' mission"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "0360",
          "member": "CreateFloatingPackage",
          "name": "CREATE_FLOATING_PACKAGE",
          "num_params": 4,
          "short_desc": "Creates a pickup of type FloatingPackage at the given coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0361",
          "member": "PlaceRelativeToCar",
          "name": "PLACE_OBJECT_RELATIVE_TO_CAR",
          "num_params": 5,
          "short_desc": "Places the object at an offset from the car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "class": "Object",
          "id": "0362",
          "member": "MakeTargetable",
          "name": "MAKE_OBJECT_TARGETTABLE",
          "num_params": 1,
          "short_desc": "Makes the object targettable (ability to be auto-aimed)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0363",
          "member": "AddArmour",
          "name": "ADD_ARMOUR_TO_PLAYER",
          "num_params": 2,
          "short_desc": "Increases the character's armour by the specified value to the maximum of 100.0"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0364",
          "member": "AddArmor",
          "name": "ADD_ARMOUR_TO_CHAR",
          "num_params": 2,
          "short_desc": "Increases the character's armor by the specified value to the maximum of 100.0"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "class": "Garage",
          "id": "0365",
          "member": "Open",
          "name": "OPEN_GARAGE",
          "num_params": 1,
          "short_desc": "Opens the garage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "class": "Garage",
          "id": "0366",
          "member": "Close",
          "name": "CLOSE_GARAGE",
          "num_params": 1,
          "short_desc": "Closes the garage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0367",
          "member": "WarpFromCarToCoord",
          "name": "WARP_CHAR_FROM_CAR_TO_COORD",
          "num_params": 4,
          "short_desc": "Pulls the character out of their car and places at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0368",
          "member": "SetVisibilityOfClosestObjectOfType",
          "name": "SET_VISIBILITY_OF_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 6,
          "short_desc": "Sets the visibility of the object closest to the specified coordinates, matching the specified model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "id": "0369",
          "name": "HAS_CHAR_SPOTTED_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character can see the target character",
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "member": "HasSpottedChar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "036A",
          "member": "SetObjHailTaxi",
          "name": "SET_CHAR_OBJ_HAIL_TAXI",
          "num_params": 1,
          "short_desc": "Sets the character's objective to hail a taxi"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "036B",
          "member": "HasBeenDamaged",
          "name": "HAS_OBJECT_BEEN_DAMAGED",
          "num_params": 1,
          "short_desc": "Returns true if the object is damaged"
        },
        {
          "input": [
            {
              "name": "text",
              "type": "gxt_key"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            },
            {
              "name": "timeInMs",
              "type": "int"
            },
            {
              "name": "targetsNum",
              "type": "int"
            },
            {
              "name": "targetModel1",
              "type": "model_any"
            },
            {
              "name": "targetModel2",
              "type": "model_any"
            },
            {
              "name": "targetModel3",
              "type": "model_any"
            },
            {
              "name": "targetModel4",
              "type": "model_any"
            },
            {
              "name": "betaSoundsAndMessages",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "KillFrenzy",
          "id": "036C",
          "member": "StartHeadshot",
          "name": "START_KILL_FRENZY_HEADSHOT",
          "num_params": 9,
          "short_desc": "Starts a headshot rampage"
        },
        {
          "input": [
            {
              "name": "craneX",
              "type": "float"
            },
            {
              "name": "craneY",
              "type": "float"
            },
            {
              "name": "pickupZoneX1",
              "type": "float"
            },
            {
              "name": "pickupZoneY1",
              "type": "float"
            },
            {
              "name": "pickupZoneX2",
              "type": "float"
            },
            {
              "name": "pickupZoneY2",
              "type": "float"
            },
            {
              "name": "dropOffX",
              "type": "float"
            },
            {
              "name": "dropOffY",
              "type": "float"
            },
            {
              "name": "dropOffZ",
              "type": "float"
            },
            {
              "name": "dropOffAngle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Crane",
          "id": "036D",
          "member": "ActivateMilitary",
          "name": "ACTIVATE_MILITARY_CRANE",
          "num_params": 10,
          "short_desc": "Activates a military crane located within 100.0 units of the specified location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Player",
          "id": "036E",
          "member": "WarpIntoCar",
          "name": "WARP_PLAYER_INTO_CAR",
          "num_params": 2,
          "short_desc": "Puts the player in the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "036F",
          "member": "WarpIntoCar",
          "name": "WARP_CHAR_INTO_CAR",
          "num_params": 2,
          "short_desc": "Puts the character in the specified vehicle"
        },
        {
          "id": "0370",
          "name": "SWITCH_CAR_RADIO",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0371",
          "name": "SET_AUDIO_STREAM",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0372",
          "member": "PrintWith2NumbersBig",
          "name": "PRINT_WITH_2_NUMBERS_BIG",
          "num_params": 5,
          "short_desc": "Displays a styled message in which the first two ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0373",
          "member": "PrintWith3NumbersBig",
          "name": "PRINT_WITH_3_NUMBERS_BIG",
          "num_params": 6,
          "short_desc": "Displays a styled message in which the first three ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0374",
          "member": "PrintWith4NumbersBig",
          "name": "PRINT_WITH_4_NUMBERS_BIG",
          "num_params": 7,
          "short_desc": "Displays a styled message in which the first four ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0375",
          "member": "PrintWith5NumbersBig",
          "name": "PRINT_WITH_5_NUMBERS_BIG",
          "num_params": 8,
          "short_desc": "Displays a styled message in which the first five ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            },
            {
              "name": "num3",
              "type": "int"
            },
            {
              "name": "num4",
              "type": "int"
            },
            {
              "name": "num5",
              "type": "int"
            },
            {
              "name": "num6",
              "type": "int"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0376",
          "member": "PrintWith6NumbersBig",
          "name": "PRINT_WITH_6_NUMBERS_BIG",
          "num_params": 9,
          "short_desc": "Displays a styled message in which the first six ~1~ tokens are substituted with the specified numbers"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "stateId",
              "type": "WaitState"
            },
            {
              "name": "timeInMs",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0377",
          "member": "SetWaitState",
          "name": "SET_CHAR_WAIT_STATE",
          "num_params": 3,
          "short_desc": "Puts the character in the idle state for the given period of time"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0378",
          "member": "SetBehindPlayer",
          "name": "SET_CAMERA_BEHIND_PLAYER",
          "num_params": 0,
          "short_desc": "Puts the camera behind the player"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "MotionBlurType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0379",
          "member": "SetMotionBlur",
          "name": "SET_MOTION_BLUR",
          "num_params": 1,
          "short_desc": "Sets the motion blur (camera overlay color)"
        },
        {
          "input": [
            {
              "name": "templateKey",
              "type": "gxt_key"
            },
            {
              "name": "replacementKey",
              "type": "gxt_key"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "037A",
          "member": "PrintStringInString",
          "name": "PRINT_STRING_IN_STRING",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~a~ is substituted with the specified text"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "037B",
          "member": "CreateRandom",
          "name": "CREATE_RANDOM_CHAR",
          "num_params": 4,
          "short_desc": "Creates a character with a randomised model and pedtype at the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "037C",
          "member": "SetObjStealAnyCar",
          "name": "SET_CHAR_OBJ_STEAL_ANY_CAR",
          "num_params": 1,
          "short_desc": "Sets the character's objective to find any traffic vehicle nearby and take the driver's seat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "037D",
          "member": "Set2RepeatedMessages",
          "name": "SET_2_REPEATED_PHONE_MESSAGES",
          "num_params": 3,
          "short_desc": "Assigns two script lines to the phone which can be picked up again in a minute"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "037E",
          "member": "Set2Messages",
          "name": "SET_2_PHONE_MESSAGES",
          "num_params": 3,
          "short_desc": "Assigns two script lines to the phone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "037F",
          "member": "Set3RepeatedMessages",
          "name": "SET_3_REPEATED_PHONE_MESSAGES",
          "num_params": 4,
          "short_desc": "Assigns three script lines to the phone which can be picked up again in a minute"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "0380",
          "member": "Set3Messages",
          "name": "SET_3_PHONE_MESSAGES",
          "num_params": 4,
          "short_desc": "Assigns three script lines to the phone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            },
            {
              "name": "msg4",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "0381",
          "member": "Set4RepeatedMessages",
          "name": "SET_4_REPEATED_PHONE_MESSAGES",
          "num_params": 5,
          "short_desc": "Assigns four script lines to the phone which can be picked up again in a minute"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            },
            {
              "name": "msg4",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "0382",
          "member": "Set4Messages",
          "name": "SET_4_PHONE_MESSAGES",
          "num_params": 5,
          "short_desc": "Assigns four script lines to the phone"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0383",
          "member": "IsSniperBulletInArea",
          "name": "IS_SNIPER_BULLET_IN_AREA",
          "num_params": 6,
          "short_desc": "Returns true if a sniper bullet is in the specified area"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Player",
          "id": "0384",
          "member": "GiveDetonator",
          "name": "GIVE_PLAYER_DETONATOR",
          "num_params": 0,
          "short_desc": "Gives the player a detonator"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0385",
          "name": "SET_COLL_OBJ_STEAL_ANY_CAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "xSpeed",
              "type": "float"
            },
            {
              "name": "ySpeed",
              "type": "float"
            },
            {
              "name": "zSpeed",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0386",
          "member": "SetVelocity",
          "name": "SET_OBJECT_VELOCITY",
          "num_params": 4,
          "short_desc": "Sets the object's velocity"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0387",
          "member": "SetCollision",
          "name": "SET_OBJECT_COLLISION",
          "num_params": 2,
          "short_desc": "Sets the object's collision detection"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0388",
          "member": "IsIcecreamJingleOn",
          "name": "IS_ICECREAM_JINGLE_ON",
          "num_params": 1,
          "short_desc": "Returns true if the vehicle's siren is on"
        },
        {
          "input": [
            {
              "name": "templateKey",
              "type": "gxt_key"
            },
            {
              "name": "replacementKey",
              "type": "gxt_key"
            },
            {
              "name": "duration",
              "type": "int"
            },
            {
              "name": "style",
              "type": "TextStyle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0389",
          "member": "PrintStringInStringNow",
          "name": "PRINT_STRING_IN_STRING_NOW",
          "num_params": 4,
          "short_desc": "Displays a styled message in which the first string token ~a~ is substituted with the specified text"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "038A",
          "name": "PRINT_STRING_IN_STRING_SOON",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            },
            {
              "name": "msg4",
              "type": "gxt_key"
            },
            {
              "name": "msg5",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "038B",
          "member": "Set5RepeatedMessages",
          "name": "SET_5_REPEATED_PHONE_MESSAGES",
          "num_params": 6,
          "short_desc": "Assigns five script lines to the phone which can be picked up again in a minute"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            },
            {
              "name": "msg4",
              "type": "gxt_key"
            },
            {
              "name": "msg5",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "038C",
          "member": "Set5Messages",
          "name": "SET_5_PHONE_MESSAGES",
          "num_params": 6,
          "short_desc": "Assigns five script lines to the phone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            },
            {
              "name": "msg4",
              "type": "gxt_key"
            },
            {
              "name": "msg5",
              "type": "gxt_key"
            },
            {
              "name": "msg6",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "038D",
          "member": "Set6RepeatedMessages",
          "name": "SET_6_REPEATED_PHONE_MESSAGES",
          "num_params": 7,
          "short_desc": "Assigns six script lines to the phone which can be picked up again in a minute"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            },
            {
              "name": "msg1",
              "type": "gxt_key"
            },
            {
              "name": "msg2",
              "type": "gxt_key"
            },
            {
              "name": "msg3",
              "type": "gxt_key"
            },
            {
              "name": "msg4",
              "type": "gxt_key"
            },
            {
              "name": "msg5",
              "type": "gxt_key"
            },
            {
              "name": "msg6",
              "type": "gxt_key"
            }
          ],
          "class": "Phone",
          "id": "038E",
          "member": "Set6Messages",
          "name": "SET_6_PHONE_MESSAGES",
          "num_params": 7,
          "short_desc": "Assigns six script lines to the phone"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radiusX",
              "type": "float"
            },
            {
              "name": "radiusY",
              "type": "float"
            },
            {
              "name": "radiusZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "038F",
          "member": "IsPointObscuredByAMissionEntity",
          "name": "IS_POINT_OBSCURED_BY_A_MISSION_ENTITY",
          "num_params": 6,
          "short_desc": "Returns true if there is a vehicle in the specified area"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "0390",
          "member": "LoadAllModelsNow",
          "name": "LOAD_ALL_MODELS_NOW",
          "num_params": 0,
          "short_desc": "Loads any requested models (0247 or 0353) synchronously"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0391",
          "member": "AddToVelocity",
          "name": "ADD_TO_OBJECT_VELOCITY",
          "num_params": 4,
          "short_desc": "Adds the given vector to the object's velocity (0381)"
        },
        {
          "input": [
            {
              "name": "memorySlot",
              "type": "int"
            },
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "height",
              "type": "float"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            },
            {
              "name": "a",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0392",
          "member": "DrawSprite",
          "name": "DRAW_SPRITE",
          "num_params": 9,
          "short_desc": "Draws a loaded texture (038F) at the specified on-screen X and Y coordinates, with the specified size and RGBA color"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "width",
              "type": "float"
            },
            {
              "name": "height",
              "type": "float"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            },
            {
              "name": "a",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0393",
          "member": "DrawRect",
          "name": "DRAW_RECT",
          "num_params": 8,
          "short_desc": "Draws a box at the specified screen X and Y position, with the specified size and RGBA colors"
        },
        {
          "input": [
            {
              "name": "memorySlot",
              "type": "int"
            },
            {
              "name": "spriteName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Txd",
          "id": "0394",
          "member": "LoadSprite",
          "name": "LOAD_SPRITE",
          "num_params": 2,
          "short_desc": "Loads a sprite from the most recently loaded texture dictionary (0390)"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Txd",
          "id": "0395",
          "member": "LoadDictionary",
          "name": "LOAD_TEXTURE_DICTIONARY",
          "num_params": 1,
          "short_desc": "Loads the texture dictionary for use in drawing sprites (038D) on the screen"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Txd",
          "id": "0396",
          "member": "Remove",
          "name": "REMOVE_TEXTURE_DICTIONARY",
          "num_params": 0,
          "short_desc": "Unloads all currently loaded textures (038F), as well as texture dictionaries (0390), freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0397",
          "member": "SetDynamic",
          "name": "SET_OBJECT_DYNAMIC",
          "num_params": 2,
          "short_desc": "Defines whether or not the object is moveable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "animSpeed",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0398",
          "member": "SetAnimSpeed",
          "name": "SET_CHAR_ANIM_SPEED",
          "num_params": 2,
          "short_desc": "Makes the character perform an animation at the specified speed"
        },
        {
          "input": [
            {
              "name": "soundId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0399",
          "member": "PlayMissionPassedTune",
          "name": "PLAY_MISSION_PASSED_TUNE",
          "num_params": 1,
          "short_desc": "Plays an audio file with the specified ID from the Audio directory"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "clearParticles",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "039A",
          "member": "ClearArea",
          "name": "CLEAR_AREA",
          "num_params": 5,
          "short_desc": "Clears the area, removing all vehicles and pedestrians"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "039B",
          "member": "FreezeTimer",
          "name": "FREEZE_ONSCREEN_TIMER",
          "num_params": 1,
          "short_desc": "Makes the on-screen timer stop updating"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "039C",
          "member": "SwitchSiren",
          "name": "SWITCH_CAR_SIREN",
          "num_params": 2,
          "short_desc": "Sets whether the car's alarm can be activated"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "039D",
          "member": "SwitchPedRoadsOnAngled",
          "name": "SWITCH_PED_ROADS_ON_ANGLED",
          "num_params": 7,
          "short_desc": "Enables pedestrians walk into the specified angled area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "039E",
          "member": "SwitchPedRoadsOffAngled",
          "name": "SWITCH_PED_ROADS_OFF_ANGLED",
          "num_params": 7,
          "short_desc": "Forbids pedestrians to walk into the specified angled area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "039F",
          "member": "SwitchRoadsOnAngled",
          "name": "SWITCH_ROADS_ON_ANGLED",
          "num_params": 7,
          "short_desc": "Allows cars to drive in the specified angled area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "03A0",
          "member": "SwitchRoadsOffAngled",
          "name": "SWITCH_ROADS_OFF_ANGLED",
          "num_params": 7,
          "short_desc": "Prevents cars from driving on roads in the specified angled area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03A1",
          "member": "SetWatertight",
          "name": "SET_CAR_WATERTIGHT",
          "num_params": 2,
          "short_desc": "Makes the vehicle watertight, meaning characters inside will not be harmed if the vehicle is submerged in water"
        },
        {
          "input": [
            {
              "name": "particle",
              "type": "ParticleObject"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "strengthX",
              "type": "float"
            },
            {
              "name": "strengthY",
              "type": "float"
            },
            {
              "name": "strengthZ",
              "type": "float"
            },
            {
              "name": "scale",
              "type": "float"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            },
            {
              "name": "durationInMs",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "03A2",
          "member": "AddMovingParticleEffect",
          "name": "ADD_MOVING_PARTICLE_EFFECT",
          "num_params": 12,
          "short_desc": "Adds a moving particle effect"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "03A3",
          "member": "SetCantBeDraggedOut",
          "name": "SET_CHAR_CANT_BE_DRAGGED_OUT",
          "num_params": 2,
          "short_desc": "Locks the character while in a car"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "03A4",
          "member": "TurnToFaceCoord",
          "name": "TURN_CAR_TO_FACE_COORD",
          "num_params": 3,
          "short_desc": "Sets the car's heading so that it is facing the 2D coordinate"
        },
        {
          "input": [
            {
              "name": "craneX",
              "type": "float"
            },
            {
              "name": "craneY",
              "type": "float"
            },
            {
              "name": "car",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Crane",
          "id": "03A5",
          "member": "IsLiftingCar",
          "name": "IS_CRANE_LIFTING_CAR",
          "num_params": 3,
          "short_desc": "Checks if a crane located within 100.0 units of the specified location is lifting the vehicle"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Sphere",
          "id": "03A6",
          "member": "Draw",
          "name": "DRAW_SPHERE",
          "num_params": 4,
          "short_desc": "Displays a red cylinder sphere"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "status",
              "type": "EntityStatus"
            }
          ],
          "class": "Car",
          "id": "03A7",
          "member": "SetStatus",
          "name": "SET_CAR_STATUS",
          "num_params": 2,
          "short_desc": "Sets the car's status"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "03A8",
          "member": "IsMale",
          "name": "IS_CHAR_MALE",
          "num_params": 1,
          "short_desc": "Returns true if the character is male"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {},
          "id": "03A9",
          "name": "SCRIPT_NAME",
          "num_params": 1,
          "short_desc": "Assigns a new name to the current script"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            },
            {
              "name": "type",
              "type": "GarageType"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "class": "Garage",
          "id": "03AA",
          "member": "ChangeTypeWithCarModel",
          "name": "CHANGE_GARAGE_TYPE_WITH_CAR_MODEL",
          "num_params": 3,
          "short_desc": "Changes the type of garage and target model"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "DrugRun",
          "id": "03AB",
          "member": "FindPlaneCoordinates",
          "name": "FIND_DRUG_PLANE_COORDINATES",
          "num_params": 3,
          "short_desc": "Returns the current coordinates of the plane in the 'S.A.M.' mission"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "03AC",
          "input": [
            {
              "name": "_p1",
              "type": "int"
            }
          ],
          "name": "SAVE_INT_TO_DEBUG_FILE",
          "num_params": 1,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "03AD",
          "input": [
            {
              "name": "_p1",
              "type": "float"
            }
          ],
          "name": "SAVE_FLOAT_TO_DEBUG_FILE",
          "num_params": 1,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "03AE",
          "name": "SAVE_NEWLINE_TO_DEBUG_FILE",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "03AF",
          "member": "PoliceRadioMessage",
          "name": "POLICE_RADIO_MESSAGE",
          "num_params": 3,
          "short_desc": "Plays police radio message audio reporting the suspect has last been seen at the specified location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03B0",
          "member": "SetStrong",
          "name": "SET_CAR_STRONG",
          "num_params": 2,
          "short_desc": "Defines whether the car is more resistant to collisions than normal"
        },
        {
          "input": [
            {
              "name": "routeId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "03B1",
          "member": "RemoveRoute",
          "name": "REMOVE_ROUTE",
          "num_params": 1,
          "short_desc": "Clears all waypoints in the route with the specified id"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03B2",
          "member": "SwitchRubbish",
          "name": "SWITCH_RUBBISH",
          "num_params": 1,
          "short_desc": "Toggles garbage on the streets"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03B3",
          "member": "RemoveParticleEffectsInArea",
          "name": "REMOVE_PARTICLE_EFFECTS_IN_AREA",
          "num_params": 6,
          "short_desc": "Removes all particle effects (02A2 or 039D) in the specified area"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "03B4",
          "member": "Switch",
          "name": "SWITCH_STREAMING",
          "num_params": 1,
          "short_desc": "Sets the streaming of additional models like peds, cars, and maps"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Garage",
          "id": "03B5",
          "member": "IsOpen",
          "name": "IS_GARAGE_OPEN",
          "num_params": 1,
          "short_desc": "Returns true if the garage's door is open"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Garage",
          "id": "03B6",
          "member": "IsClosed",
          "name": "IS_GARAGE_CLOSED",
          "num_params": 1,
          "short_desc": "Returns true if the garage's door is closed"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "CatalinaHeli",
          "id": "03B7",
          "member": "Start",
          "name": "START_CATALINA_HELI",
          "num_params": 0,
          "short_desc": "Creates a heli flying in the 'The Exchange' mission "
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "CatalinaHeli",
          "id": "03B8",
          "member": "TakeOff",
          "name": "CATALINA_HELI_TAKE_OFF",
          "num_params": 0,
          "short_desc": "Makes the heli in the 'The Exchange' mission take off"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "CatalinaHeli",
          "id": "03B9",
          "member": "Remove",
          "name": "REMOVE_CATALINA_HELI",
          "num_params": 0,
          "short_desc": "Deletes the heli flying in the 'The Exchange' mission"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "CatalinaHeli",
          "id": "03BA",
          "member": "HasBeenShotDown",
          "name": "HAS_CATALINA_HELI_BEEN_SHOT_DOWN",
          "num_params": 0,
          "short_desc": "Returns true if the player damaged the heli flying in the 'The Exchange' mission"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "fromModelId",
              "type": "model_object"
            },
            {
              "name": "toModelId",
              "type": "model_object"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03BB",
          "member": "SwapNearestBuildingModel",
          "name": "SWAP_NEAREST_BUILDING_MODEL",
          "num_params": 6,
          "short_desc": "Swaps a map model with another map model nearest to the center of the search area"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03BC",
          "member": "SwitchProcessing",
          "name": "SWITCH_WORLD_PROCESSING",
          "num_params": 1,
          "short_desc": "Sets whether the game should render the world or only the cutscene objects"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "03BD",
          "member": "RemoveAllWeapons",
          "name": "REMOVE_ALL_PLAYER_WEAPONS",
          "num_params": 1,
          "short_desc": "Takes all weapons away from the player"
        },
        {
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "CatalinaHeli",
          "id": "03BE",
          "member": "Grab",
          "name": "GRAB_CATALINA_HELI",
          "num_params": 1,
          "short_desc": "Returns the handle of the heli created with 03B2"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03BF",
          "member": "ClearAreaOfCars",
          "name": "CLEAR_AREA_OF_CARS",
          "num_params": 6,
          "short_desc": "Clears all cars in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "class": "Garage",
          "id": "03C0",
          "member": "SetRotatingDoor",
          "name": "SET_ROTATING_GARAGE_DOOR",
          "num_params": 1,
          "short_desc": "Sets the garage door to swing open instead of slide open"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Sphere",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Sphere",
          "id": "03C1",
          "member": "Create",
          "name": "ADD_SPHERE",
          "num_params": 5,
          "short_desc": "Creates a static sphere at the location, with the specified radius"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Sphere"
            }
          ],
          "attrs": {
            "is_destructor": true
          },
          "class": "Sphere",
          "id": "03C2",
          "member": "Remove",
          "name": "REMOVE_SPHERE",
          "num_params": 1,
          "short_desc": "Destroys a static sphere"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "CatalinaHeli",
          "id": "03C3",
          "member": "FlyAway",
          "name": "CATALINA_HELI_FLY_AWAY",
          "num_params": 0,
          "short_desc": "Makes the heli in the 'The Exchange' mission fly high in the sky"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03C4",
          "member": "SetEveryoneIgnorePlayer",
          "name": "SET_EVERYONE_IGNORE_PLAYER",
          "num_params": 2,
          "short_desc": "Makes pedestrians pay no attention to the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "03C5",
          "member": "StoreCarIsInNoSave",
          "name": "STORE_CAR_CHAR_IS_IN_NO_SAVE",
          "num_params": 2,
          "short_desc": "Returns the character's vehicle handle without marking it as used by the script, therefore allowing it to be deleted by the game at any time"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "03C6",
          "member": "StoreCarIsInNoSave",
          "name": "STORE_CAR_PLAYER_IS_IN_NO_SAVE",
          "num_params": 2,
          "short_desc": "Returns the player's vehicle handle without marking it as used by the script, therefore allowing it to be deleted by the game at any time"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Phone",
          "id": "03C7",
          "member": "IsDisplayingMessage",
          "name": "IS_PHONE_DISPLAYING_MESSAGE",
          "num_params": 1,
          "short_desc": "Returns true if the phone is displaying an assigned script line"
        },
        {
          "id": "03C8",
          "name": "DISPLAY_ONSCREEN_TIMER_WITH_STRING",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "display",
              "type": "CounterDisplay"
            },
            {
              "name": "text",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03C9",
          "member": "DisplayCounterWithString",
          "name": "DISPLAY_ONSCREEN_COUNTER_WITH_STRING",
          "num_params": 3,
          "short_desc": "Displays an onscreen counter with the text, either shown in numbers or as a bar"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "heading",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03CA",
          "member": "CreateRandomCarForCarPark",
          "name": "CREATE_RANDOM_CAR_FOR_CAR_PARK",
          "num_params": 4,
          "short_desc": "Starts spawning random cars at the specified location"
        },
        {
          "input": [
            {
              "name": "level",
              "type": "LevelName"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "03CB",
          "member": "IsCollisionInMemory",
          "name": "IS_COLLISION_IN_MEMORY",
          "num_params": 1,
          "short_desc": "Returns true if the level (island) collision is loaded (03F7)"
        },
        {
          "input": [
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03CC",
          "member": "SetWantedMultiplier",
          "name": "SET_WANTED_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets sensitivity to crime, changing how many crimes a player can commit before police begin to pursue"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "03CD",
          "member": "SetInFrontOfPlayer",
          "name": "SET_CAMERA_IN_FRONT_OF_PLAYER",
          "num_params": 0,
          "short_desc": "Puts the camera in front of the player, pointing towards the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "id": "03CE",
          "name": "IS_CAR_VISIBLY_DAMAGED",
          "num_params": 1,
          "short_desc": "Returns true if any of the car components is visibly damaged or lost",
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "member": "IsVisiblyDamaged"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Object",
          "id": "03CF",
          "member": "DoesExist",
          "name": "DOES_OBJECT_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid object handle"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "03D0",
          "member": "LoadScene",
          "name": "LOAD_SCENE",
          "num_params": 3,
          "short_desc": "Starts loading a specific location, just like if the player was there, removing LOD textures"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "speed",
              "type": "float"
            },
            {
              "name": "duration",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "StuckCarCheck",
          "id": "03D1",
          "member": "Add",
          "name": "ADD_STUCK_CAR_CHECK",
          "num_params": 3,
          "short_desc": "Adds the vehicle to the stuck cars array"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "StuckCarCheck",
          "id": "03D2",
          "member": "Remove",
          "name": "REMOVE_STUCK_CAR_CHECK",
          "num_params": 1,
          "short_desc": "Removes the vehicle from the stuck cars array"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "StuckCarCheck",
          "id": "03D3",
          "member": "IsCarStuck",
          "name": "IS_CAR_STUCK",
          "num_params": 1,
          "short_desc": "Returns true if the car is stuck"
        },
        {
          "id": "03D4",
          "name": "LOAD_MISSION_AUDIO",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "03D5",
          "name": "HAS_MISSION_AUDIO_LOADED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "03D6",
          "name": "PLAY_MISSION_AUDIO",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "03D7",
          "name": "HAS_MISSION_AUDIO_FINISHED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "03D8",
          "member": "GetClosestCarNodeWithHeading",
          "name": "GET_CLOSEST_CAR_NODE_WITH_HEADING",
          "num_params": 7,
          "short_desc": "Returns the position and heading of the closest vehicle path node to the specified position"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            },
            {
              "name": "importSlot",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Garage",
          "id": "03D9",
          "member": "HasSlotBeenFilled",
          "name": "HAS_IMPORT_GARAGE_SLOT_BEEN_FILLED",
          "num_params": 2,
          "short_desc": "Returns true if the import garage has collected a vehicle from the predefined list"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03DA",
          "member": "ClearThisPrint",
          "name": "CLEAR_THIS_PRINT",
          "num_params": 1,
          "short_desc": "Removes the priority text from the screen"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03DB",
          "member": "ClearThisBigPrint",
          "name": "CLEAR_THIS_BIG_PRINT",
          "num_params": 1,
          "short_desc": "Removes the styled text from the screen"
        },
        {
          "id": "03DC",
          "name": "SET_MISSION_AUDIO_POSITION",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03DD",
          "member": "ActivateSaveMenu",
          "name": "ACTIVATE_SAVE_MENU",
          "num_params": 0,
          "short_desc": "Displays a screen prompting the player to save"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "03DE",
          "member": "HasSaveGameFinished",
          "name": "HAS_SAVE_GAME_FINISHED",
          "num_params": 0,
          "short_desc": "Returns true if the player has saved their game"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            }
          ],
          "class": "Garage",
          "id": "03DF",
          "member": "NoSpecialCameraForThisGarage",
          "name": "NO_SPECIAL_CAMERA_FOR_THIS_GARAGE",
          "num_params": 1,
          "short_desc": "Disables special camera when in the garage"
        },
        {
          "input": [
            {
              "name": "pickup",
              "type": "Pickup"
            },
            {
              "name": "color",
              "type": "BlipColor"
            },
            {
              "name": "display",
              "type": "BlipDisplay"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "03E0",
          "member": "AddForPickupOld",
          "name": "ADD_BLIP_FOR_PICKUP_OLD",
          "num_params": 4,
          "short_desc": "Adds a blip with properties to the pickup"
        },
        {
          "input": [
            {
              "name": "pickup",
              "type": "Pickup"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "03E1",
          "member": "AddForPickup",
          "name": "ADD_BLIP_FOR_PICKUP",
          "num_params": 2,
          "short_desc": "Adds a blip and a marker to the pickup"
        },
        {
          "input": [
            {
              "name": "pickup",
              "type": "Pickup"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "03E2",
          "member": "AddSpriteForPickup",
          "name": "ADD_SPRITE_BLIP_FOR_PICKUP",
          "num_params": 3,
          "short_desc": "Adds a sprite blip and a marker to the pickup"
        },
        {
          "input": [
            {
              "name": "multiplier",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03E3",
          "member": "SetPedDensityMultiplier",
          "name": "SET_PED_DENSITY_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets the quantity of pedestrians to spawn in the game"
        },
        {
          "input": [
            {
              "name": "pedType",
              "type": "PedType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "03E4",
          "member": "ForceRandomPedType",
          "name": "FORCE_RANDOM_PED_TYPE",
          "num_params": 1,
          "short_desc": "Forces the game to spawn only pedestrians of the given type"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03E5",
          "member": "SetDrawBeforeFade",
          "name": "SET_TEXT_DRAW_BEFORE_FADE",
          "num_params": 1,
          "short_desc": "Causes the next text to be drawn before the fade is drawn"
        },
        {
          "output": [
            {
              "name": "num",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03E6",
          "member": "GetCollectablesCollected",
          "name": "GET_COLLECTABLE1S_COLLECTED",
          "num_params": 1,
          "short_desc": "Returns the number of hidden packages collected"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "03E7",
          "member": "SetObjLeaveAnyCar",
          "name": "SET_CHAR_OBJ_LEAVE_ANY_CAR",
          "num_params": 1,
          "short_desc": "Sets the character's objective to leave the car they are in"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03E8",
          "member": "SetSpritesDrawBeforeFade",
          "name": "SET_SPRITES_DRAW_BEFORE_FADE",
          "num_params": 1,
          "short_desc": "Causes the next texture to be drawn (038D) before the fade is drawn"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03E9",
          "member": "SetRightJustify",
          "name": "SET_TEXT_RIGHT_JUSTIFY",
          "num_params": 1,
          "short_desc": "Sets the text draw to be aligned to the right"
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03EA",
          "member": "PrintHelp",
          "name": "PRINT_HELP",
          "num_params": 1,
          "short_desc": "Displays a black text box for a few seconds"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03EB",
          "member": "ClearHelp",
          "name": "CLEAR_HELP",
          "num_params": 0,
          "short_desc": "Removes the text box from the screen"
        },
        {
          "input": [
            {
              "name": "object",
              "type": "HudObject"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "03EC",
          "member": "FlashObject",
          "name": "FLASH_HUD_OBJECT",
          "num_params": 1,
          "short_desc": "Makes a specific part of the HUD disappear and reappear several times"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "03ED",
          "name": "FLASH_RADAR_BLIP",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "03EE",
          "member": "IsInControl",
          "name": "IS_CHAR_IN_CONTROL",
          "num_params": 1,
          "short_desc": "Returns true if the character can move"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "03EF",
          "member": "SetGenerateCarsAround",
          "name": "SET_GENERATE_CARS_AROUND_CAMERA",
          "num_params": 1,
          "short_desc": "Enables traffic spawn at the camera position, otherwise at the player position (default)"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03F0",
          "member": "ClearSmallPrints",
          "name": "CLEAR_SMALL_PRINTS",
          "num_params": 0,
          "short_desc": "Clears small messages from the screen"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Crane",
          "id": "03F1",
          "member": "HasMilitaryCollectedAllCars",
          "name": "HAS_MILITARY_CRANE_COLLECTED_ALL_CARS",
          "num_params": 0,
          "short_desc": "Checks if the military crane has collected all vehicles"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03F2",
          "member": "SetUpsidedownNotDamaged",
          "name": "SET_UPSIDEDOWN_CAR_NOT_DAMAGED",
          "num_params": 2,
          "short_desc": "Disables the car from exploding when it is upside down, as long as the player is not in the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "03F3",
          "member": "CanStartMission",
          "name": "CAN_PLAYER_START_MISSION",
          "num_params": 1,
          "short_desc": "Returns true if the player can move"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "03F4",
          "member": "MakeSafeForCutscene",
          "name": "MAKE_PLAYER_SAFE_FOR_CUTSCENE",
          "num_params": 1,
          "short_desc": "Makes the player safe, putting the character in a safe location"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "03F5",
          "member": "UseCommands",
          "name": "USE_TEXT_COMMANDS",
          "num_params": 1,
          "short_desc": "Enables text and texture drawing"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "PedType"
            },
            {
              "name": "threatMask",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03F6",
          "member": "SetThreatForPedType",
          "name": "SET_THREAT_FOR_PED_TYPE",
          "num_params": 2,
          "short_desc": "Sets the ped type's hostility to other ped types"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "PedType"
            },
            {
              "name": "threatMask",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03F7",
          "member": "ClearThreatForPedType",
          "name": "CLEAR_THREAT_FOR_PED_TYPE",
          "num_params": 2,
          "short_desc": "Clears the ped type's hostility to other ped types"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "primaryColour",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "secondaryColour",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "03F8",
          "member": "GetColors",
          "name": "GET_CAR_COLOURS",
          "num_params": 3,
          "short_desc": "Gets the car's primary and secondary colors"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03F9",
          "member": "SetAllCarsCanBeDamaged",
          "name": "SET_ALL_CARS_CAN_BE_DAMAGED",
          "num_params": 1,
          "short_desc": "Sets whether all cars receive damage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "03FA",
          "member": "SetCanBeDamaged",
          "name": "SET_CAR_CAN_BE_DAMAGED",
          "num_params": 2,
          "short_desc": "Sets whether the car receives damage"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "03FB",
          "name": "MAKE_PLAYER_UNSAFE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "level",
              "type": "LevelName"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "03FC",
          "member": "LoadCollision",
          "name": "LOAD_COLLISION",
          "num_params": 1,
          "short_desc": "Loads the level (island) collision"
        },
        {
          "output": [
            {
              "name": "health",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Object",
          "id": "03FD",
          "member": "GetBodyCastHealth",
          "name": "GET_BODY_CAST_HEALTH",
          "num_params": 1,
          "short_desc": "Stores the health of the bodycast object used in the 'Plaster Blaster' mission"
        },
        {
          "input": [
            {
              "name": "char1",
              "type": "Char"
            },
            {
              "name": "char2",
              "type": "Char"
            },
            {
              "name": "duration",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "03FE",
          "member": "SetCharsChatting",
          "name": "SET_CHARS_CHATTING",
          "num_params": 3,
          "short_desc": "Makes the two characters chat for the specified period of time"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "03FF",
          "name": "MAKE_PLAYER_SAFE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0400",
          "member": "SetStaysInCurrentLevel",
          "name": "SET_CAR_STAYS_IN_CURRENT_LEVEL",
          "num_params": 2,
          "short_desc": "Forces the AI-controlled vehicle to stay on the current island"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0401",
          "member": "SetStaysInCurrentLevel",
          "name": "SET_CHAR_STAYS_IN_CURRENT_LEVEL",
          "num_params": 2,
          "short_desc": "Forces the AI-controlled character to stay on the current island"
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "PadId"
            },
            {
              "name": "delay",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "0402",
          "member": "SetDrunkInputDelay",
          "name": "SET_DRUNK_INPUT_DELAY",
          "num_params": 2,
          "short_desc": "Affects the delay to the left and right steering while driving"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0403",
          "member": "SetMoney",
          "name": "SET_CHAR_MONEY",
          "num_params": 2,
          "short_desc": "Sets the character's cash sum, setting how much cash they will drop when dead"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0404",
          "name": "INCREASE_CHAR_MONEY",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Object",
          "id": "0405",
          "member": "GetOffsetInWorldCoords",
          "name": "GET_OFFSET_FROM_OBJECT_IN_WORLD_COORDS",
          "num_params": 7,
          "short_desc": "Returns the object's coordinates with an offset"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0406",
          "member": "RegisterLifeSaved",
          "name": "REGISTER_LIFE_SAVED",
          "num_params": 0,
          "short_desc": "Increments the number of people saved in an ambulance stat by 1"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0407",
          "member": "RegisterCriminalCaught",
          "name": "REGISTER_CRIMINAL_CAUGHT",
          "num_params": 0,
          "short_desc": "Increments the number of criminals killed on Vigilante mission stat by 1"
        },
        {
          "input": [
            {
              "name": "highestLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0408",
          "member": "RegisterAmbulanceLevel",
          "name": "REGISTER_AMBULANCE_LEVEL",
          "num_params": 1,
          "short_desc": "Saves the highest paramedic mission level stat"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0409",
          "member": "RegisterFireExtinguished",
          "name": "REGISTER_FIRE_EXTINGUISHED",
          "num_params": 0,
          "short_desc": "Increments the number of fires extinguished stat by 1"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Phone"
            }
          ],
          "class": "Phone",
          "id": "040A",
          "member": "TurnOn",
          "name": "TURN_PHONE_ON",
          "num_params": 1,
          "short_desc": "Makes the phone ringing"
        },
        {
          "input": [
            {
              "name": "timeInSec",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "040B",
          "member": "RegisterLongestDodoFlight",
          "name": "REGISTER_LONGEST_DODO_FLIGHT",
          "num_params": 1,
          "short_desc": "Saves the longest flight in Dodo stat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "040C",
          "member": "GetOffsetInWorldCoords",
          "name": "GET_OFFSET_FROM_CAR_IN_WORLD_COORDS",
          "num_params": 7,
          "short_desc": "Returns the coordinates of an offset of the vehicle's position, depending on the vehicle's rotation"
        },
        {
          "input": [
            {
              "name": "total",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "040D",
          "member": "SetTotalNumberOfKillFrenzies",
          "name": "SET_TOTAL_NUMBER_OF_KILL_FRENZIES",
          "num_params": 1,
          "short_desc": "Sets the total number of rampages passed stat"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "040E",
          "member": "BlowUpBuggy",
          "name": "BLOW_UP_RC_BUGGY",
          "num_params": 0,
          "short_desc": "Destroys the remote-control vehicle"
        },
        {
          "input": [
            {
              "name": "carIndex",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "ChaseScene",
          "id": "040F",
          "member": "RemoveCarFromChase",
          "name": "REMOVE_CAR_FROM_CHASE",
          "num_params": 1,
          "short_desc": "Removes the car from the chase scene"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0410",
          "member": "IsFrench",
          "name": "IS_FRENCH_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the game language is set to French"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0411",
          "member": "IsGerman",
          "name": "IS_GERMAN_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the game language is set to German"
        },
        {
          "id": "0412",
          "name": "CLEAR_MISSION_AUDIO",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0413",
          "member": "SetFadeInAfterNextArrest",
          "name": "SET_FADE_IN_AFTER_NEXT_ARREST",
          "num_params": 1,
          "short_desc": "Sets whether the next arrest will cause the screen to fade in"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0414",
          "member": "SetFadeInAfterNextDeath",
          "name": "SET_FADE_IN_AFTER_NEXT_DEATH",
          "num_params": 1,
          "short_desc": "Sets whether the next death will cause the screen to fade in"
        },
        {
          "input": [
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "override",
              "type": "GangModelOverride"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Gang",
          "id": "0415",
          "member": "SetPedModelPreference",
          "name": "SET_GANG_PED_MODEL_PREFERENCE",
          "num_params": 2,
          "short_desc": "Forces the game to spawn the gang members based on the specified override value"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0416",
          "member": "SetUsePednodeSeek",
          "name": "SET_CHAR_USE_PEDNODE_SEEK",
          "num_params": 2,
          "short_desc": "Sets whether the character should follow paths set for pedestrians"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0417",
          "member": "SwitchWeapons",
          "name": "SWITCH_VEHICLE_WEAPONS",
          "num_params": 2,
          "short_desc": "Enables or disabled guns on the vehicle that has them (e.g. boats)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0418",
          "member": "SetGetOutOfJailFree",
          "name": "SET_GET_OUT_OF_JAIL_FREE",
          "num_params": 2,
          "short_desc": "Sets whether the player loses the cash when gets busted (works once)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0419",
          "member": "SetFreeHealthCare",
          "name": "SET_FREE_HEALTH_CARE",
          "num_params": 2,
          "short_desc": "Sets whether the player loses the cash when gets wasted (works once)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "door",
              "type": "CarDoor"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "041A",
          "member": "IsDoorClosed",
          "name": "IS_CAR_DOOR_CLOSED",
          "num_params": 2,
          "short_desc": "Returns true if the vehicle's door is present and closed"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "041B",
          "name": "LOAD_AND_LAUNCH_MISSION",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "input": [
            {
              "name": "index",
              "type": "int"
            }
          ],
          "id": "041C",
          "name": "LOAD_AND_LAUNCH_MISSION_INTERNAL",
          "num_params": 1,
          "short_desc": "Loads a mission from the list defined in the main.scm header",
          "class": "Mission",
          "member": "LoadAndLaunchInternal",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "041D",
          "member": "SetDrawLast",
          "name": "SET_OBJECT_DRAW_LAST",
          "num_params": 2,
          "short_desc": "Sets the specified object to always draw on top of other objects"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "output": [
            {
              "name": "ammo",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "041E",
          "member": "GetAmmoInWeapon",
          "name": "GET_AMMO_IN_PLAYER_WEAPON",
          "num_params": 3,
          "short_desc": "Gets the amount of ammo in the specified weapon of the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "output": [
            {
              "name": "ammo",
              "type": "int",
              "source": "var_any"
            }
          ],
          "id": "041F",
          "name": "GET_AMMO_IN_CHAR_WEAPON",
          "num_params": 3,
          "short_desc": "Gets the amount of ammo in the specified weapon of the character",
          "class": "Char",
          "member": "GetAmmoInWeapon"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0420",
          "member": "RegisterKillFrenzyPassed",
          "name": "REGISTER_KILL_FRENZY_PASSED",
          "num_params": 0,
          "short_desc": "Increments the number of rampages passed stat by 1"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "soundId",
              "type": "ScriptSound"
            }
          ],
          "class": "Char",
          "id": "0421",
          "member": "SetSay",
          "name": "SET_CHAR_SAY",
          "num_params": 2,
          "short_desc": "Makes the character shout once (sound ids 95, 96, 101, 103, 104, 105)"
        },
        {
          "input": [
            {
              "name": "value",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0422",
          "member": "SetNearClip",
          "name": "SET_NEAR_CLIP",
          "num_params": 1,
          "short_desc": "Sets the near clip"
        },
        {
          "input": [
            {
              "name": "channel",
              "type": "RadioChannel"
            },
            {
              "name": "startFromMs",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0423",
          "member": "SetRadioChannel",
          "name": "SET_RADIO_CHANNEL",
          "num_params": 2,
          "short_desc": "Sets the current radio station that is playing, if the player is in a vehicle"
        },
        {
          "input": [
            {
              "name": "levelId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0424",
          "member": "OverrideHospital",
          "name": "OVERRIDE_HOSPITAL_LEVEL",
          "num_params": 1,
          "short_desc": "Overrides the hospital level (island)"
        },
        {
          "input": [
            {
              "name": "levelId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Restart",
          "id": "0425",
          "member": "OverridePolice",
          "name": "OVERRIDE_POLICE_STATION_LEVEL",
          "num_params": 1,
          "short_desc": "Overrides the police station level (island)"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "0426",
          "member": "ForceRain",
          "name": "FORCE_RAIN",
          "num_params": 1,
          "short_desc": "Forces rain everywhere"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Garage",
          "id": "0427",
          "member": "DoesContainCar",
          "name": "DOES_GARAGE_CONTAIN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the garage contains the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "traction",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "0428",
          "member": "SetTraction",
          "name": "SET_CAR_TRACTION",
          "num_params": 2,
          "short_desc": "Overrides the default vehicle traction value of 1.0"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "0429",
          "member": "AreMeasurementsInMeters",
          "name": "ARE_MEASUREMENTS_IN_METRES",
          "num_params": 0,
          "short_desc": "Returns true if the game uses metric measurements (meters instead of feet)"
        },
        {
          "input": [
            {
              "name": "meters",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "feet",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true,
            "is_overload": true
          },
          "class": "Math",
          "id": "042A",
          "member": "ConvertMetersToFeet",
          "name": "CONVERT_METRES_TO_FEET",
          "num_params": 2,
          "short_desc": "Returns the result of converting meters to feet"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "042B",
          "member": "MarkRoadsBetweenLevels",
          "name": "MARK_ROADS_BETWEEN_LEVELS",
          "num_params": 6,
          "short_desc": "Marks all car path nodes in the given 3D area as transitional between two levels (islands)"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "042C",
          "member": "MarkPedRoadsBetweenLevels",
          "name": "MARK_PED_ROADS_BETWEEN_LEVELS",
          "num_params": 6,
          "short_desc": "Marks all ped path nodes in the given 3D area as transitional between two levels (islands)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "042D",
          "member": "SetAvoidLevelTransitions",
          "name": "SET_CAR_AVOID_LEVEL_TRANSITIONS",
          "num_params": 2,
          "short_desc": "Sets whether the vehicle will avoid paths between levels (0426)"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "042E",
          "input": [
            {
              "name": "_p1",
              "type": "int"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "name": "SET_CHAR_AVOID_LEVEL_TRANSITIONS",
          "num_params": 2,
          "short_desc": "Does nothing"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "PedType"
            },
            {
              "name": "threatMask",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "042F",
          "member": "IsThreatForPedType",
          "name": "IS_THREAT_FOR_PED_TYPE",
          "num_params": 2,
          "short_desc": "Returns true if the ped type is hostile to other ped types"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0430",
          "member": "ClearAreaOfChars",
          "name": "CLEAR_AREA_OF_CHARS",
          "num_params": 6,
          "short_desc": "Clears all pedestrians from the given area"
        },
        {
          "input": [
            {
              "name": "numMissions",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0431",
          "member": "SetTotalNumberOfMissions",
          "name": "SET_TOTAL_NUMBER_OF_MISSIONS",
          "num_params": 1,
          "short_desc": "Sets the total number of missions that can be completed"
        },
        {
          "input": [
            {
              "name": "meters",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "feet",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true,
            "is_overload": true
          },
          "class": "Math",
          "id": "0432",
          "member": "ConvertMetersToFeet",
          "name": "CONVERT_METRES_TO_FEET_INT",
          "num_params": 2,
          "short_desc": "Returns the result of converting meters to feet"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0433",
          "member": "RegisterFastestTime",
          "name": "REGISTER_FASTEST_TIME",
          "num_params": 2,
          "short_desc": "Updates the stat if the value is lower than the current stat value"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0434",
          "member": "RegisterHighestScore",
          "name": "REGISTER_HIGHEST_SCORE",
          "num_params": 2,
          "short_desc": "Updates the stat if the value is higher than the current stat value"
        },
        {
          "id": "0435",
          "name": "WARP_CHAR_INTO_CAR_AS_PASSENGER",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "seatIndex",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "0436",
          "member": "IsPassengerSeatFree",
          "name": "IS_CAR_PASSENGER_SEAT_FREE",
          "num_params": 2,
          "short_desc": "Returns true if the specified car seat is empty"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "seatIndex",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "id": "0437",
          "name": "GET_CHAR_IN_CAR_PASSENGER_SEAT",
          "num_params": 3,
          "short_desc": "Returns the handle of a character sitting in the specified car seat",
          "class": "Car",
          "member": "GetCharInPassengerSeat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0438",
          "member": "SetIsChrisCriminal",
          "name": "SET_CHAR_IS_CHRIS_CRIMINAL",
          "num_params": 2,
          "short_desc": "Sets whether the character is a psychotic killer or not"
        },
        {
          "id": "0439",
          "name": "START_CREDITS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Credits",
          "id": "043A",
          "member": "Stop",
          "name": "STOP_CREDITS",
          "num_params": 0,
          "short_desc": "Stops the credits text from showing"
        },
        {
          "attrs": {
            "is_static": true,
            "is_condition": true
          },
          "class": "Credits",
          "id": "043B",
          "member": "AreFinished",
          "name": "ARE_CREDITS_FINISHED",
          "num_params": 0,
          "short_desc": "Returns true if the credits have finished"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "int"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "strengthX",
              "type": "float"
            },
            {
              "name": "strengthY",
              "type": "float"
            },
            {
              "name": "strengthZ",
              "type": "float"
            },
            {
              "name": "scale",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "043C",
          "member": "CreateSingleParticle",
          "name": "CREATE_SINGLE_PARTICLE",
          "num_params": 8,
          "short_desc": "Creates a single particle at the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "043D",
          "member": "SetIgnoreLevelTransitions",
          "name": "SET_CHAR_IGNORE_LEVEL_TRANSITIONS",
          "num_params": 2,
          "short_desc": "Prevents the character from being despawned when the current level (island) changes"
        },
        {
          "input": [
            {
              "name": "carIndex",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "class": "ChaseScene",
          "id": "043E",
          "member": "GetChaseCar",
          "name": "GET_CHASE_CAR",
          "num_params": 2,
          "short_desc": "Gets the control over a car from the chase scene",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "attrs": {
            "is_static": true,
            "is_nop": true
          },
          "class": "Fx",
          "id": "043F",
          "member": "StartBoatFoamAnimation",
          "name": "START_BOAT_FOAM_ANIMATION",
          "num_params": 0,
          "short_desc": "Stores the current time when the foam animation starts (UNUSED)"
        },
        {
          "input": [
            {
              "name": "object",
              "type": "CutsceneObject"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "0440",
          "member": "UpdateBoatFoamAnimation",
          "name": "UPDATE_BOAT_FOAM_ANIMATION",
          "num_params": 1,
          "short_desc": "Updates the steaming effect around the specified cutscene object during the final scene of the 'Bomb Da Base: Act II' mission"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0441",
          "member": "SetMusicDoesFade",
          "name": "SET_MUSIC_DOES_FADE",
          "num_params": 1,
          "short_desc": "Sets whether sounds should fade along with the screen"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0442",
          "member": "SetIntroIsPlaying",
          "name": "SET_INTRO_IS_PLAYING",
          "num_params": 1,
          "short_desc": "Specifies that the intro cutscene is playing"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "hooker",
              "type": "Char"
            }
          ],
          "class": "Player",
          "id": "0443",
          "member": "SetHooker",
          "name": "SET_PLAYER_HOOKER",
          "num_params": 2,
          "short_desc": "Makes the character act as the player's hooker"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0444",
          "member": "PlayEndOfGameTune",
          "name": "PLAY_END_OF_GAME_TUNE",
          "num_params": 0,
          "short_desc": "Plays the theme tune"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0445",
          "member": "StopEndOfGameTune",
          "name": "STOP_END_OF_GAME_TUNE",
          "num_params": 0,
          "short_desc": "Stops the theme tune"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "modelId",
              "type": "model_vehicle",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0446",
          "member": "GetModel",
          "name": "GET_CAR_MODEL",
          "num_params": 2,
          "short_desc": "Returns the car's model id"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0447",
          "member": "IsSittingInCar",
          "name": "IS_PLAYER_SITTING_IN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the player is in the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0448",
          "member": "IsSittingInAnyCar",
          "name": "IS_PLAYER_SITTING_IN_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the player is sitting in any vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ScriptFire"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "ScriptFire",
          "id": "0449",
          "member": "SetAudio",
          "name": "SET_SCRIPT_FIRE_AUDIO",
          "num_params": 2,
          "short_desc": "Enables or disables the audio of the script fire"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "044A",
          "member": "AreAnyCarCheatsActivated",
          "name": "ARE_ANY_CAR_CHEATS_ACTIVATED",
          "num_params": 0,
          "short_desc": "Returns true if the player has used any of the cheats"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "044B",
          "member": "SetSuffersCriticalHits",
          "name": "SET_CHAR_SUFFERS_CRITICAL_HITS",
          "num_params": 2,
          "short_desc": "Sets whether the specified character is immune to headshots"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "044C",
          "member": "IsLiftingAPhone",
          "name": "IS_PLAYER_LIFTING_A_PHONE",
          "num_params": 1,
          "short_desc": "Returns true if the player is talking over the phone (024A)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "044D",
          "member": "IsSittingInCar",
          "name": "IS_CHAR_SITTING_IN_CAR",
          "num_params": 2,
          "short_desc": "Returns true if the character is sitting in the specified vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "044E",
          "member": "IsSittingInAnyCar",
          "name": "IS_CHAR_SITTING_IN_ANY_CAR",
          "num_params": 1,
          "short_desc": "Returns true if the character is sitting in any vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "044F",
          "member": "IsOnFoot",
          "name": "IS_PLAYER_ON_FOOT",
          "num_params": 1,
          "short_desc": "Returns true if the player is on foot, and not occupying a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0450",
          "member": "IsOnFoot",
          "name": "IS_CHAR_ON_FOOT",
          "num_params": 1,
          "short_desc": "Returns true if the character is on foot, and not occupying a vehicle"
        },
        {
          "input": [
            {
              "name": "level",
              "type": "LevelName"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "0451",
          "member": "LoadCollisionWithScreen",
          "name": "LOAD_COLLISION_WITH_SCREEN",
          "num_params": 1,
          "short_desc": "Loads a level (island) collision with a greeting message"
        },
        {
          "input": [
            {
              "name": "txdName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0452",
          "member": "LoadSplash",
          "name": "LOAD_SPLASH_SCREEN",
          "num_params": 1,
          "short_desc": "Loads the specified splash screen"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0453",
          "member": "SetIgnoreLevelTransitions",
          "name": "SET_CAR_IGNORE_LEVEL_TRANSITIONS",
          "num_params": 2,
          "short_desc": "Prevents the vehicle from being despawned when the current level (island) changes"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0454",
          "member": "MakeABitStronger",
          "name": "MAKE_CRAIGS_CAR_A_BIT_STRONGER",
          "num_params": 2,
          "short_desc": "Makes the car more resistant to physical damage"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0455",
          "member": "SetOnPathToPlayer",
          "name": "SET_JAMES_CAR_ON_PATH_TO_PLAYER",
          "num_params": 1,
          "short_desc": "Teleports the vehicle nearby the player's location"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0456",
          "member": "LoadEndOfGameTune",
          "name": "LOAD_END_OF_GAME_TUNE",
          "num_params": 0,
          "short_desc": "Loads the end of game music"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0457",
          "member": "EnablePlayerControl",
          "name": "ENABLE_PLAYER_CONTROL_CAMERA",
          "num_params": 0,
          "short_desc": "Gives camera control to the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0458",
          "member": "SetRotation",
          "name": "SET_OBJECT_ROTATION",
          "num_params": 4,
          "short_desc": "Sets the object rotation along X, Y and Z axis"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0459",
          "member": "GetDebugCoordinates",
          "name": "GET_DEBUG_CAMERA_COORDINATES",
          "num_params": 3,
          "short_desc": "Returns the debug camera position"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "045A",
          "member": "GetDebugFrontVector",
          "name": "GET_DEBUG_CAMERA_FRONT_VECTOR",
          "num_params": 3,
          "short_desc": "Stores the debug camera front vector"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "045B",
          "member": "IsTargettingAnyChar",
          "name": "IS_PLAYER_TARGETTING_ANY_CHAR",
          "num_params": 1,
          "short_desc": "Returns true if the player is aiming at any character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "045C",
          "member": "IsTargettingChar",
          "name": "IS_PLAYER_TARGETTING_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the player is aiming at the specified character"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "handle",
              "type": "Object"
            }
          ],
          "id": "045D",
          "name": "IS_PLAYER_TARGETTING_OBJECT",
          "num_params": 2,
          "short_desc": "Returns true if the player is aiming at the specified object",
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "member": "IsTargettingObject"
        },
        {
          "input": [
            {
              "name": "name",
              "type": "string"
            }
          ],
          "attrs": {},
          "id": "045E",
          "name": "TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME",
          "num_params": 1,
          "short_desc": "Ends any script whose name (03A4) matches the given string"
        },
        {
          "input": [
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "045F",
          "member": "DisplayWithNumber",
          "name": "DISPLAY_TEXT_WITH_NUMBER",
          "num_params": 4,
          "short_desc": "Draws text with one number"
        },
        {
          "input": [
            {
              "name": "offsetLeft",
              "type": "float"
            },
            {
              "name": "offsetTop",
              "type": "float"
            },
            {
              "name": "key",
              "type": "gxt_key"
            },
            {
              "name": "num1",
              "type": "int"
            },
            {
              "name": "num2",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0460",
          "member": "DisplayWith2Numbers",
          "name": "DISPLAY_TEXT_WITH_2_NUMBERS",
          "num_params": 5,
          "short_desc": "Draws text with two numbers"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Mission",
          "id": "0461",
          "member": "Fail",
          "name": "FAIL_CURRENT_MISSION",
          "num_params": 0,
          "short_desc": "Terminates the active mission by executing its mission cleanup routine"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "range",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_object"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Object",
              "source": "var_any"
            }
          ],
          "class": "World",
          "id": "0462",
          "member": "GetClosestObjectOfType",
          "name": "GET_CLOSEST_OBJECT_OF_TYPE",
          "num_params": 6,
          "short_desc": "Returns the handle of an object with the specified model located in the 2D area, or -1 otherwise",
          "attrs": {
            "is_constructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "target",
              "type": "Object"
            },
            {
              "name": "offsetX",
              "type": "float"
            },
            {
              "name": "offsetY",
              "type": "float"
            },
            {
              "name": "offsetZ",
              "type": "float"
            }
          ],
          "class": "Object",
          "id": "0463",
          "member": "PlaceRelativeToObject",
          "name": "PLACE_OBJECT_RELATIVE_TO_OBJECT",
          "num_params": 5,
          "short_desc": "Places the object relative to the other object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0464",
          "member": "SetAllOccupantsLeave",
          "name": "SET_ALL_OCCUPANTS_OF_CAR_LEAVE_CAR",
          "num_params": 1,
          "short_desc": "Sets the driver and all passengers' objective to leave the vehicle"
        },
        {
          "input": [
            {
              "name": "_p1",
              "type": "float"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0465",
          "member": "SetInterpolationParameters",
          "name": "SET_INTERPOLATION_PARAMETERS",
          "num_params": 2,
          "short_desc": "Sets how long the camera transition will last"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "destX",
              "type": "float"
            },
            {
              "name": "destY",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "0466",
          "member": "GetClosestCarNodeWithHeadingTowardsPoint",
          "name": "GET_CLOSEST_CAR_NODE_WITH_HEADING_TOWARDS_POINT",
          "num_params": 9,
          "short_desc": "Returns the position and heading of the closest vehicle path node to the specified position and with rotation towards the point"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "destX",
              "type": "float"
            },
            {
              "name": "destY",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "nodeX",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeY",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "nodeZ",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "0467",
          "member": "GetClosestCarNodeWithHeadingAwayPoint",
          "name": "GET_CLOSEST_CAR_NODE_WITH_HEADING_AWAY_POINT",
          "num_params": 9,
          "short_desc": "Returns the position and heading of the closest vehicle path node to the specified position and with rotation away from the point"
        },
        {
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "0468",
          "member": "GetDebugPointAt",
          "name": "GET_DEBUG_CAMERA_POINT_AT",
          "num_params": 3,
          "short_desc": "Stores the location the debug camera is pointing to"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "position",
              "type": "int"
            },
            {
              "name": "angleLimit",
              "type": "float"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Char",
          "id": "0469",
          "member": "AttachToCar",
          "name": "ATTACH_CHAR_TO_CAR",
          "num_params": 8,
          "short_desc": "Puts character into a turret on the vehicle, allowing them to shoot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "046A",
          "member": "DetachFromCar",
          "name": "DETACH_CHAR_FROM_CAR",
          "num_params": 1,
          "short_desc": "Takes the character out of turret mode (0464)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "046B",
          "member": "SetChangeLane",
          "name": "SET_CAR_CHANGE_LANE",
          "num_params": 2,
          "short_desc": "Set's whether the AI driver will occupy the fast (left) lane on a two-way road"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "046C",
          "member": "ClearLastWeaponDamage",
          "name": "CLEAR_CHAR_LAST_WEAPON_DAMAGE",
          "num_params": 1,
          "short_desc": "Clears the character's last weapon damage (see 031D)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "046D",
          "member": "ClearLastWeaponDamage",
          "name": "CLEAR_CAR_LAST_WEAPON_DAMAGE",
          "num_params": 1,
          "short_desc": "Clears the vehicle's last weapon damage (see 031E)"
        },
        {
          "id": "046E",
          "name": "GET_RANDOM_COP_IN_AREA",
          "num_params": 10,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Zone",
          "id": "046F",
          "member": "GetRandomCop",
          "name": "GET_RANDOM_COP_IN_ZONE",
          "num_params": 2,
          "short_desc": "Returns the handle of a random law enforcement ped in the map zone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "Char",
          "id": "0470",
          "member": "SetObjFleeCar",
          "name": "SET_CHAR_OBJ_FLEE_CAR",
          "num_params": 2,
          "short_desc": "Makes the character leave their car and run away from it"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "class": "Car",
          "id": "0471",
          "member": "GetDriver",
          "name": "GET_DRIVER_OF_CAR",
          "num_params": 2,
          "short_desc": "Returns the car's driver handle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "number",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0472",
          "member": "GetNumberOfFollowers",
          "name": "GET_NUMBER_OF_FOLLOWERS",
          "num_params": 2,
          "short_desc": "Returns the number of members which are in a group of the character (01DE)"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "Player"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "0473",
          "member": "GiveModelToPlayer",
          "name": "GIVE_REMOTE_CONTROLLED_MODEL_TO_PLAYER",
          "num_params": 6,
          "short_desc": "Puts the player in control of a remote-control vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "weaponType",
              "type": "WeaponType",
              "source": "var_any"
            }
          ],
          "id": "0474",
          "name": "GET_CURRENT_PLAYER_WEAPON",
          "num_params": 2,
          "class": "Player",
          "member": "GetCurrentWeapon",
          "short_desc": "Returns the type of weapon that the player is currently holding"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "weaponType",
              "type": "WeaponType",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0475",
          "member": "GetCurrentWeapon",
          "name": "GET_CURRENT_CHAR_WEAPON",
          "num_params": 2,
          "short_desc": "Returns the type of weapon that the character is currently holding"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0476",
          "member": "LocateAnyMeansObject2D",
          "name": "LOCATE_CHAR_ANY_MEANS_OBJECT_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0477",
          "member": "LocateOnFootObject2D",
          "name": "LOCATE_CHAR_ON_FOOT_OBJECT_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the object on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0478",
          "member": "LocateInCarObject2D",
          "name": "LOCATE_CHAR_IN_CAR_OBJECT_2D",
          "num_params": 5,
          "short_desc": "Returns true if the character is within the 2D radius of the object in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0479",
          "member": "LocateAnyMeansObject3D",
          "name": "LOCATE_CHAR_ANY_MEANS_OBJECT_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "047A",
          "member": "LocateOnFootObject3D",
          "name": "LOCATE_CHAR_ON_FOOT_OBJECT_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the object on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "object",
              "type": "Object"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "047B",
          "member": "LocateInCarObject3D",
          "name": "LOCATE_CHAR_IN_CAR_OBJECT_3D",
          "num_params": 6,
          "short_desc": "Returns true if the character is within the 3D radius of the object in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "actionId",
              "type": "TempAction"
            },
            {
              "name": "timeInMs",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "047C",
          "member": "SetTempAction",
          "name": "SET_CAR_TEMP_ACTION",
          "num_params": 3,
          "short_desc": "Makes the AI driver perform the action in the vehicle for the specified period of time"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "timeInMs",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "047D",
          "member": "SetHandbrakeTurnRight",
          "name": "SET_CAR_HANDBRAKE_TURN_RIGHT",
          "num_params": 2,
          "short_desc": "Makes the AI driver in the vehicle turn hard right and brake for the specified period of time"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "timeInMs",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "047E",
          "member": "SetHandbrakeStop",
          "name": "SET_CAR_HANDBRAKE_STOP",
          "num_params": 2,
          "short_desc": "Makes the AI driver in the vehicle brake for the specified period of time"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "047F",
          "member": "IsOnAnyBike",
          "name": "IS_CHAR_ON_ANY_BIKE",
          "num_params": 1,
          "short_desc": "Returns true if the character is riding a bike"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0480",
          "member": "LocateSniperBullet2D",
          "name": "LOCATE_SNIPER_BULLET_2D",
          "num_params": 5,
          "short_desc": "Returns true if a sniper bullet is flying in the specified 2D area"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "topRightX",
              "type": "float"
            },
            {
              "name": "topRightY",
              "type": "float"
            },
            {
              "name": "topRightZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0481",
          "member": "LocateSniperBullet3D",
          "name": "LOCATE_SNIPER_BULLET_3D",
          "num_params": 7,
          "short_desc": "Returns true if a sniper bullet is flying in the specified 3D area"
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "seatsNum",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Car",
          "id": "0482",
          "member": "GetNumberOfSeatsInModel",
          "name": "GET_NUMBER_OF_SEATS_IN_MODEL",
          "num_params": 2,
          "short_desc": "Returns the number of seats in the vehicle model"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "id": "0483",
          "name": "IS_PLAYER_ON_ANY_BIKE",
          "num_params": 1,
          "class": "Player",
          "member": "IsOnAnyBike",
          "attrs": {
            "is_condition": true
          },
          "short_desc": "Returns true if the player is driving a bike"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0484",
          "member": "IsLyingDown",
          "name": "IS_CHAR_LYING_DOWN",
          "num_params": 1,
          "short_desc": "Returns true if the character has fallen"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "pedType",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0485",
          "member": "CanSeeDeadChar",
          "name": "CAN_CHAR_SEE_DEAD_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character sees a dead body of the given type"
        },
        {
          "input": [
            {
              "name": "value",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Char",
          "id": "0486",
          "member": "SetEnterCarRangeMultiplier",
          "name": "SET_ENTER_CAR_RANGE_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets a multiplier for the range of a character's ability to go and occupy a vehicle"
        },
        {
          "input": [
            {
              "name": "value",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Char",
          "id": "0487",
          "member": "SetThreatReactionRangeMultiplier",
          "name": "SET_THREAT_REACTION_RANGE_MULTIPLIER",
          "num_params": 1,
          "short_desc": "Sets a multiplier for the range of a character's ability to react on deadly events around"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "timer",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "0488",
          "member": "SetCeaseAttackTimer",
          "name": "SET_CHAR_CEASE_ATTACK_TIMER",
          "num_params": 2,
          "short_desc": "Sets the maximum time the character can withstand the damage"
        },
        {
          "input": [
            {
              "name": "player",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "car",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "0489",
          "member": "GetCar",
          "name": "GET_REMOTE_CONTROLLED_CAR",
          "num_params": 2,
          "short_desc": "Returns the player's radio-controlled vehicle"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "048A",
          "member": "IsPcVersion",
          "name": "IS_PC_VERSION",
          "num_params": 0,
          "short_desc": "Returns true on PC versions of the game"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "048B",
          "name": "REPLAY",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "048C",
          "name": "IS_REPLAY_PLAYING",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "modelId",
              "type": "model_any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "048D",
          "member": "IsModelAvailable",
          "name": "IS_MODEL_AVAILABLE",
          "num_params": 1,
          "short_desc": "Returns true if the specified model exists in the loaded "
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "048E",
          "member": "ShutUp",
          "name": "SHUT_CHAR_UP",
          "num_params": 2,
          "short_desc": "Sets the character's ability to talk"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "048F",
          "member": "SetEnableDetonate",
          "name": "SET_ENABLE_RC_DETONATE",
          "num_params": 1,
          "short_desc": "Enables a remote-control vehicle detonation"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "routeSeed",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "0490",
          "member": "SetRandomRouteSeed",
          "name": "SET_CAR_RANDOM_ROUTE_SEED",
          "num_params": 2,
          "short_desc": "Sets the car on a specific route"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0491",
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "member": "IsAnyPickupAtCoords",
          "name": "IS_ANY_PICKUP_AT_COORDS",
          "num_params": 3,
          "short_desc": "Returns true if the pickup at the specified coordinates is available to be picked up"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0492",
          "name": "GET_FIRST_PICKUP_COORDS",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0493",
          "name": "GET_NEXT_PICKUP_COORDS",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0494",
          "member": "RemoveAllWeapons",
          "name": "REMOVE_ALL_CHAR_WEAPONS",
          "num_params": 1,
          "short_desc": "Removes the characters weapons"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "weaponId",
              "type": "WeaponType"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0495",
          "member": "HasGotWeapon",
          "name": "HAS_PLAYER_GOT_WEAPON",
          "num_params": 2,
          "short_desc": "Returns true if the player has the specified weapon"
        },
        {
          "id": "0496",
          "name": "HAS_CHAR_GOT_WEAPON",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0497",
          "name": "IS_PLAYER_FACING_CHAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Tank"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Tank",
          "id": "0498",
          "member": "SetDetonateCars",
          "name": "SET_TANK_DETONATE_CARS",
          "num_params": 2,
          "short_desc": "Sets the tank's ability to detonate vehicles on contact"
        },
        {
          "input": [
            {
              "name": "pad",
              "type": "PadId"
            }
          ],
          "output": [
            {
              "name": "leftStickX",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "leftStickY",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "rightStickX",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "rightStickY",
              "type": "int",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Pad",
          "id": "0499",
          "member": "GetPositionOfAnalogueSticks",
          "name": "GET_POSITION_OF_ANALOGUE_STICKS",
          "num_params": 5,
          "short_desc": "Returns the offset of the specified Left/Right, Up/Down, Look Left/Look Right and Look Up/Look Down keys"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "049A",
          "member": "IsOnFire",
          "name": "IS_CAR_ON_FIRE",
          "num_params": 1,
          "short_desc": "Returns true if the car is burning"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "tireId",
              "type": "int"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "049B",
          "member": "IsTireBurst",
          "name": "IS_CAR_TYRE_BURST",
          "num_params": 2,
          "short_desc": "Returns true if a given tire on the car is deflated"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "049C",
          "name": "SET_CAR_DRIVE_STRAIGHT_AHEAD",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "049D",
          "name": "SET_CAR_WAIT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "049E",
          "name": "IS_PLAYER_STANDING_ON_A_VEHICLE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "049F",
          "name": "IS_PLAYER_FOOT_DOWN",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04A0",
          "name": "IS_CHAR_FOOT_DOWN",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "pathId",
              "type": "int"
            },
            {
              "name": "width",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "ObjectPath",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "ObjectPath",
          "id": "04A1",
          "member": "Initialise",
          "name": "INITIALISE_OBJECT_PATH",
          "num_params": 3,
          "short_desc": "Initialises a script path"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ObjectPath"
            },
            {
              "name": "object",
              "type": "Object"
            }
          ],
          "class": "ObjectPath",
          "id": "04A2",
          "member": "Start",
          "name": "START_OBJECT_ON_PATH",
          "num_params": 2,
          "short_desc": "Attaches the object to the script path"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ObjectPath"
            },
            {
              "name": "speed",
              "type": "float"
            }
          ],
          "class": "ObjectPath",
          "id": "04A3",
          "member": "SetSpeed",
          "name": "SET_OBJECT_PATH_SPEED",
          "num_params": 2,
          "short_desc": "Sets the speed of objects on the script path"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ObjectPath"
            },
            {
              "name": "position",
              "type": "float"
            }
          ],
          "class": "ObjectPath",
          "id": "04A4",
          "member": "SetPosition",
          "name": "SET_OBJECT_PATH_POSITION",
          "num_params": 2,
          "short_desc": "Sets the distance along the script path"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04A5",
          "name": "GET_OBJECT_DISTANCE_ALONG_PATH",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "ObjectPath"
            }
          ],
          "class": "ObjectPath",
          "id": "04A6",
          "member": "Clear",
          "name": "CLEAR_OBJECT_PATH",
          "num_params": 1,
          "short_desc": "Removes the script path",
          "attrs": {
            "is_destructor": true
          }
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "speed",
              "type": "int"
            }
          ],
          "class": "Heli",
          "id": "04A7",
          "member": "GotoCoords",
          "name": "HELI_GOTO_COORDS",
          "num_params": 5,
          "short_desc": "Makes the helicopter fly to the specified location, keeping a specific Z height/altitude"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "04A8",
          "input": [
            {
              "name": "_p1",
              "type": "int"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "name": "IS_INT_VAR_EQUAL_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the value of the variable is equal to the constant"
        },
        {
          "attrs": {
            "is_condition": true
          },
          "id": "04A9",
          "input": [
            {
              "name": "_p1",
              "type": "int"
            },
            {
              "name": "_p2",
              "type": "int"
            }
          ],
          "name": "IS_INT_LVAR_EQUAL_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the first local variable is equivalent to the second"
        },
        {
          "input": [
            {
              "name": "char",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04AA",
          "member": "GetDeadCharPickupCoords",
          "name": "GET_DEAD_CHAR_PICKUP_COORDS",
          "num_params": 4,
          "short_desc": "Returns appropriate coordinates for creating a pickup by a dead character"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "revenueLimit",
              "type": "int"
            },
            {
              "name": "revenueRate",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "04AB",
          "member": "CreateProtection",
          "name": "CREATE_PROTECTION_PICKUP",
          "num_params": 6,
          "short_desc": "Creates an asset revenue pickup"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04AC",
          "name": "IS_CHAR_IN_ANY_BOAT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "04AD",
          "member": "IsInAnyBoat",
          "name": "IS_PLAYER_IN_ANY_BOAT",
          "num_params": 1,
          "short_desc": "Returns true if the player is on a boat"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04AE",
          "name": "IS_CHAR_IN_ANY_HELI",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "04AF",
          "member": "IsInAnyHeli",
          "name": "IS_PLAYER_IN_ANY_HELI",
          "num_params": 1,
          "short_desc": "Returns true if the player is in a helicopter"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04B0",
          "name": "IS_CHAR_IN_ANY_PLANE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "04B1",
          "member": "IsInAnyPlane",
          "name": "IS_PLAYER_IN_ANY_PLANE",
          "num_params": 1,
          "short_desc": "Returns true if the player is on a plane"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "04B2",
          "member": "IsInWater",
          "name": "IS_CHAR_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the character is in water"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "04B3",
          "name": "SET_VAR_INT_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Assigns the global variable to the integer constant"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "id": "04B4",
          "name": "SET_LVAR_INT_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Assigns the local variable to the integer constant"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04B5",
          "name": "IS_INT_VAR_GREATER_THAN_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the value of the global variable is greater than the integer constant"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04B6",
          "name": "IS_INT_LVAR_GREATER_THAN_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the value of the local variable is greater than the integer constant"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04B7",
          "name": "IS_CONSTANT_GREATER_THAN_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the integer constant is greater than the value of the global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04B8",
          "name": "IS_CONSTANT_GREATER_THAN_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the integer constant is greater than the value of the local variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04B9",
          "name": "IS_INT_VAR_GREATER_OR_EQUAL_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the value of the global variable is equal to or greater than the integer constant "
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "",
              "type": "int",
              "source": "literal"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04BA",
          "name": "IS_INT_LVAR_GREATER_OR_EQUAL_TO_CONSTANT",
          "num_params": 2,
          "short_desc": "Returns true if the value of the local variable is greater than or equal to the integer constant "
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_global"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04BB",
          "name": "IS_CONSTANT_GREATER_OR_EQUAL_TO_INT_VAR",
          "num_params": 2,
          "short_desc": "Returns true if the integer constant is equal to or greater than the value of the global variable"
        },
        {
          "input": [
            {
              "name": "",
              "type": "int",
              "source": "literal"
            },
            {
              "name": "",
              "type": "int",
              "source": "var_local"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "id": "04BC",
          "name": "IS_CONSTANT_GREATER_OR_EQUAL_TO_INT_LVAR",
          "num_params": 2,
          "short_desc": "Returns true if the integer constant is equal to or greater than the value of the local variable"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "weaponSlotId",
              "type": "WeaponSlot"
            }
          ],
          "output": [
            {
              "name": "weaponType",
              "type": "WeaponType",
              "source": "var_any"
            },
            {
              "name": "weaponAmmo",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "weaponModel",
              "type": "model_object",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "04BD",
          "member": "GetWeaponInSlot",
          "name": "GET_CHAR_WEAPON_IN_SLOT",
          "num_params": 5,
          "short_desc": "Returns the weapon type, ammo and model from the specified slot"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "minDist",
              "type": "float"
            },
            {
              "name": "maxDist",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "node1X",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node1Y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node1Z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node2X",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node2Y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "node2Z",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "angle",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "04BE",
          "member": "GetClosestStraightRoad",
          "name": "GET_CLOSEST_STRAIGHT_ROAD",
          "num_params": 12,
          "short_desc": "Gets two closest path nodes within the specified distance range"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "forwardSpeed",
              "type": "float"
            }
          ],
          "class": "Car",
          "id": "04BF",
          "member": "SetForwardSpeed",
          "name": "SET_CAR_FORWARD_SPEED",
          "num_params": 2,
          "short_desc": "Sets the speed of the car"
        },
        {
          "input": [
            {
              "name": "areaId",
              "type": "Interior"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04C0",
          "member": "SetAreaVisible",
          "name": "SET_AREA_VISIBLE",
          "num_params": 1,
          "short_desc": "Sets the visibility of an interior area"
        },
        {
          "input": [
            {
              "name": "animName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "04C1",
          "member": "SetAnimToLoop",
          "name": "SET_CUTSCENE_ANIM_TO_LOOP",
          "num_params": 1,
          "short_desc": "Sets the cutscene animation to loop endlessly"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "04C2",
          "member": "MarkAsConvoyCar",
          "name": "MARK_CAR_AS_CONVOY_CAR",
          "num_params": 2,
          "short_desc": "Marks the car as being part of a convoy, which seems to follow a path set by 0994"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "class": "Player",
          "id": "04C3",
          "member": "ResetHavoc",
          "name": "RESET_HAVOC_CAUSED_BY_PLAYER",
          "num_params": 1,
          "short_desc": "Resets the level of chaos inflicted by the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "level",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "04C4",
          "member": "GetHavoc",
          "name": "GET_HAVOC_CAUSED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Returns the level of chaos inflicted by the player since the last reset (04BE)"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "topRightX",
              "type": "float"
            },
            {
              "name": "topRightY",
              "type": "float"
            },
            {
              "name": "topRightZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04C5",
          "member": "CreateScriptRoadblock",
          "name": "CREATE_SCRIPT_ROADBLOCK",
          "num_params": 6,
          "short_desc": "Creates a roadblock in the specified area"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04C6",
          "member": "ClearAllScriptRoadblocks",
          "name": "CLEAR_ALL_SCRIPT_ROADBLOCKS",
          "num_params": 0,
          "short_desc": "Removes references to all created roadblocks (04C0), freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "04C7",
          "member": "SetObjWalkToChar",
          "name": "SET_CHAR_OBJ_WALK_TO_CHAR",
          "num_params": 2,
          "short_desc": "Sets the character's objective to walk towards the target character"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04C8",
          "name": "IS_PICKUP_IN_ZONE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "04C9",
          "member": "GetOffsetInWorldCoords",
          "name": "GET_OFFSET_FROM_CHAR_IN_WORLD_COORDS",
          "num_params": 7,
          "short_desc": "Returns the coordinates of the character, with an offset"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "04CA",
          "member": "HasBeenPhotographed",
          "name": "HAS_CHAR_BEEN_PHOTOGRAPHED",
          "num_params": 1,
          "short_desc": "Returns true if the character has been photographed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "target",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "04CB",
          "member": "SetObjAimGunAtChar",
          "name": "SET_CHAR_OBJ_AIM_GUN_AT_CHAR",
          "num_params": 2,
          "short_desc": "Sets the character's objective to aim the current weapon at the target character"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "04CC",
          "member": "SwitchSecurity",
          "name": "SWITCH_SECURITY_CAMERA",
          "num_params": 1,
          "short_desc": "Displays a green scan line overlay on the screen"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04CD",
          "name": "IS_CHAR_IN_FLYING_VEHICLE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "04CE",
          "member": "IsInFlyingVehicle",
          "name": "IS_PLAYER_IN_FLYING_VEHICLE",
          "num_params": 1,
          "short_desc": "Returns true if the player is flying in a plane or a helicopter"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04CF",
          "name": "HAS_SONY_CD_BEEN_READ",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04D0",
          "name": "GET_NUMBER_OF_SONY_CDS_READ",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04D1",
          "name": "ADD_SHORT_RANGE_BLIP_FOR_COORD_OLD",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04D2",
          "name": "ADD_SHORT_RANGE_BLIP_FOR_COORD",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "04D3",
          "member": "AddShortRangeSpriteForCoord",
          "name": "ADD_SHORT_RANGE_SPRITE_BLIP_FOR_COORD",
          "num_params": 5,
          "short_desc": "Adds a sprite blip for the specified coordinates"
        },
        {
          "input": [
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "04D4",
          "member": "AddMoneySpentOnClothes",
          "name": "ADD_MONEY_SPENT_ON_CLOTHES",
          "num_params": 1,
          "short_desc": "Adds to the fashion budget stat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "class": "Heli",
          "id": "04D5",
          "member": "SetOrientation",
          "name": "SET_HELI_ORIENTATION",
          "num_params": 2,
          "short_desc": "Forces the heli rotation relative to the north"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "class": "Heli",
          "id": "04D6",
          "member": "ClearOrientation",
          "name": "CLEAR_HELI_ORIENTATION",
          "num_params": 1,
          "short_desc": "Resets the heli rotation set with 04D0"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Plane"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "speed",
              "type": "int"
            }
          ],
          "class": "Plane",
          "id": "04D7",
          "member": "GotoCoords",
          "name": "PLANE_GOTO_COORDS",
          "num_params": 5,
          "short_desc": "Makes the AI fly the plane to the specified location"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "n",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "x",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "y",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "z",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Path",
          "id": "04D8",
          "member": "GetNthClosestCarNode",
          "name": "GET_NTH_CLOSEST_CAR_NODE",
          "num_params": 7,
          "short_desc": "Gets the coordinates of the nth car path node closest to the given coordinates"
        },
        {
          "id": "04D9",
          "name": "GET_NTH_CLOSEST_CHAR_NODE",
          "num_params": 7,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "size",
              "type": "float"
            },
            {
              "name": "coronaType",
              "type": "CoronaType"
            },
            {
              "name": "flareType",
              "type": "FlareType"
            },
            {
              "name": "r",
              "type": "int"
            },
            {
              "name": "g",
              "type": "int"
            },
            {
              "name": "b",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "04DA",
          "member": "DrawWeaponshopCorona",
          "name": "DRAW_WEAPONSHOP_CORONA",
          "num_params": 9,
          "short_desc": "Displays a corona with the lowered draw distance at the specified coordinates"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "04DB",
          "member": "SetEnableDetonateOnContact",
          "name": "SET_ENABLE_RC_DETONATE_ON_CONTACT",
          "num_params": 1,
          "short_desc": "Sets whether RC Bandits detonate on contact with the wheels of any four-wheeled vehicles"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "04DC",
          "member": "FreezePosition",
          "name": "FREEZE_CHAR_POSITION",
          "num_params": 2,
          "short_desc": "Sets whether the character's position remains unchanged"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "04DD",
          "member": "SetDrownsInWater",
          "name": "SET_CHAR_DROWNS_IN_WATER",
          "num_params": 2,
          "short_desc": "Controls whether the character can drown in water"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "04DE",
          "member": "SetRecordsCollisions",
          "name": "SET_OBJECT_RECORDS_COLLISIONS",
          "num_params": 2,
          "short_desc": "Enables the use of collision checking for the object"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04DF",
          "member": "HasCollidedWithAnything",
          "name": "HAS_OBJECT_COLLIDED_WITH_ANYTHING",
          "num_params": 1,
          "short_desc": "Returns true if the object has collided"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Rc",
          "id": "04E0",
          "member": "RemoveBuggy",
          "name": "REMOVE_RC_BUGGY",
          "num_params": 0,
          "short_desc": "Exits remote-control mode"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04E1",
          "name": "HAS_PHOTOGRAPH_BEEN_TAKEN",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "output": [
            {
              "name": "armor",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "04E2",
          "member": "GetArmor",
          "name": "GET_CHAR_ARMOUR",
          "num_params": 2,
          "short_desc": "Returns the character's armor amount"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04E3",
          "name": "SET_CHAR_ARMOUR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Heli",
          "id": "04E4",
          "member": "SetStabiliser",
          "name": "SET_HELI_STABILISER",
          "num_params": 2,
          "short_desc": "Limits the amount a helicopter can tilt"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "distance",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "04E5",
          "member": "SetStraightLineDistance",
          "name": "SET_CAR_STRAIGHT_LINE_DISTANCE",
          "num_params": 2,
          "short_desc": "Sets the minimum distance for the AI driver to start ignoring car paths and go straight to the target"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "04E6",
          "member": "PopBoot",
          "name": "POP_CAR_BOOT",
          "num_params": 1,
          "short_desc": "Opens the car's trunk and keeps it open"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "04E7",
          "member": "ShutUp",
          "name": "SHUT_PLAYER_UP",
          "num_params": 2,
          "short_desc": "Shuts the player up"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "mood",
              "type": "PlayerMood"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "04E8",
          "member": "SetMood",
          "name": "SET_PLAYER_MOOD",
          "num_params": 3,
          "short_desc": "Sets the players mood, affecting the dialogue spoken by the player"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04E9",
          "member": "RequestCollision",
          "name": "REQUEST_COLLISION",
          "num_params": 2,
          "short_desc": "Reloads the area at the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04EA",
          "member": "Locate2D",
          "name": "LOCATE_OBJECT_2D",
          "num_params": 6,
          "short_desc": "Returns true if the object is near the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "xRadius",
              "type": "float"
            },
            {
              "name": "yRadius",
              "type": "float"
            },
            {
              "name": "zRadius",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04EB",
          "member": "Locate3D",
          "name": "LOCATE_OBJECT_3D",
          "num_params": 8,
          "short_desc": "Returns true if the object is near the specified point"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04EC",
          "member": "IsInWater",
          "name": "IS_OBJECT_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the object is in water"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04ED",
          "name": "SET_CHAR_OBJ_STEAL_ANY_CAR_EVEN_MISSION_CAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04EE",
          "member": "IsInArea2D",
          "name": "IS_OBJECT_IN_AREA_2D",
          "num_params": 6,
          "short_desc": "Returns true if object is in the specified area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "leftBottomZ",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "rightTopZ",
              "type": "float"
            },
            {
              "name": "drawSphere",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Object",
          "id": "04EF",
          "member": "IsInArea3D",
          "name": "IS_OBJECT_IN_AREA_3D",
          "num_params": 8,
          "short_desc": "Returns true if the object is in the specified area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            },
            {
              "name": "time",
              "type": "int"
            }
          ],
          "class": "Char",
          "id": "04F0",
          "member": "SetCrouch",
          "name": "SET_CHAR_CROUCH",
          "num_params": 3,
          "short_desc": "Makes the character crouch"
        },
        {
          "input": [
            {
              "name": "zone",
              "type": "zone_key"
            },
            {
              "name": "dayOrNight",
              "type": "DayOrNight"
            },
            {
              "name": "normal",
              "type": "int"
            },
            {
              "name": "poor",
              "type": "int"
            },
            {
              "name": "rich",
              "type": "int"
            },
            {
              "name": "exec",
              "type": "int"
            },
            {
              "name": "worker",
              "type": "int"
            },
            {
              "name": "big",
              "type": "int"
            },
            {
              "name": "taxi",
              "type": "int"
            },
            {
              "name": "moped",
              "type": "int"
            },
            {
              "name": "motorbike",
              "type": "int"
            },
            {
              "name": "leisureBoat",
              "type": "int"
            },
            {
              "name": "workerBoat",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Zone",
          "id": "04F1",
          "member": "SetCivilianCarInfo",
          "name": "SET_ZONE_CIVILIAN_CAR_INFO",
          "num_params": 13,
          "short_desc": "Sets the traffic density of cars and boats in the zone"
        },
        {
          "input": [
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04F2",
          "member": "RequestAnimation",
          "name": "REQUEST_ANIMATION",
          "num_params": 1,
          "short_desc": "Loads the specified IFP File"
        },
        {
          "input": [
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Streaming",
          "id": "04F3",
          "member": "HasAnimationLoaded",
          "name": "HAS_ANIMATION_LOADED",
          "num_params": 1,
          "short_desc": "Returns true if the specified IFP file is loaded"
        },
        {
          "input": [
            {
              "name": "animationFile",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Streaming",
          "id": "04F4",
          "member": "RemoveAnimation",
          "name": "REMOVE_ANIMATION",
          "num_params": 1,
          "short_desc": "Releases the specified IFP file, freeing game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "04F5",
          "member": "IsWaitingForWorldCollision",
          "name": "IS_CHAR_WAITING_FOR_WORLD_COLLISION",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Car",
          "id": "04F6",
          "member": "IsWaitingForWorldCollision",
          "name": "IS_CAR_WAITING_FOR_WORLD_COLLISION",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04F7",
          "name": "IS_OBJECT_WAITING_FOR_WORLD_COLLISION",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "04F8",
          "member": "SetShuffleIntoDriversSeat",
          "name": "SET_CHAR_SHUFFLE_INTO_DRIVERS_SEAT",
          "num_params": 1,
          "short_desc": "Moves the character from a passenger seat to the driver seat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Object"
            },
            {
              "name": "xOffset",
              "type": "float"
            },
            {
              "name": "yOffset",
              "type": "float"
            },
            {
              "name": "zOffset",
              "type": "float"
            },
            {
              "name": "orientation",
              "type": "int"
            },
            {
              "name": "angleLimit",
              "type": "float"
            },
            {
              "name": "weaponType",
              "type": "WeaponType"
            }
          ],
          "class": "Char",
          "id": "04F9",
          "member": "AttachToObject",
          "name": "ATTACH_CHAR_TO_OBJECT",
          "num_params": 8,
          "short_desc": "Attaches the character to the specified object, in turret mode"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "player",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "04FA",
          "member": "SetAsPlayerFriend",
          "name": "SET_CHAR_AS_PLAYER_FRIEND",
          "num_params": 3,
          "short_desc": "Sets whether the character ignores the player's crimes"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "04FB",
          "name": "DISPLAY_NTH_ONSCREEN_COUNTER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "counter",
              "type": "int",
              "source": "var_global"
            },
            {
              "name": "display",
              "type": "CounterDisplay"
            },
            {
              "name": "slot",
              "type": "int"
            },
            {
              "name": "text",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "04FC",
          "member": "DisplayNthCounterWithString",
          "name": "DISPLAY_NTH_ONSCREEN_COUNTER_WITH_STRING",
          "num_params": 4,
          "short_desc": "Displays an onscreen counter with the text in the specified slot, either shown in numbers or as a bar"
        },
        {
          "input": [
            {
              "name": "type",
              "type": "SetPieceType"
            },
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "spawnPoliceAAtX",
              "type": "float"
            },
            {
              "name": "spawnPoliceAAtY",
              "type": "float"
            },
            {
              "name": "headedTowardsAAtX",
              "type": "float"
            },
            {
              "name": "headedTowardsAAtY",
              "type": "float"
            },
            {
              "name": "spawnPoliceBAtX",
              "type": "float"
            },
            {
              "name": "spawnPoliceBAtY",
              "type": "float"
            },
            {
              "name": "headedTowardsBAtX",
              "type": "float"
            },
            {
              "name": "headedTowardsBAtY",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04FD",
          "member": "AddSetPiece",
          "name": "ADD_SET_PIECE",
          "num_params": 13,
          "short_desc": "Creates a trigger zone for police to appear during chases"
        },
        {
          "input": [
            {
              "name": "color",
              "type": "int"
            },
            {
              "name": "fade",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04FE",
          "member": "SetExtraColors",
          "name": "SET_EXTRA_COLOURS",
          "num_params": 2,
          "short_desc": "Sets the extra color of the sky"
        },
        {
          "input": [
            {
              "name": "withFade",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "04FF",
          "member": "ClearExtraColors",
          "name": "CLEAR_EXTRA_COLOURS",
          "num_params": 1,
          "short_desc": "Clears the extra color of the sky"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0500",
          "name": "CLOSE_CAR_BOOT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "twoWheelsTime",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "twoWheelsDistance",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "wheelieTime",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "wheelieDistance",
              "type": "float",
              "source": "var_any"
            },
            {
              "name": "stoppieTime",
              "type": "int",
              "source": "var_any"
            },
            {
              "name": "stoppieDistance",
              "type": "float",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "0501",
          "member": "GetWheelieStats",
          "name": "GET_WHEELIE_STATS",
          "num_params": 7,
          "short_desc": "Returns the stats of the most recent wheelie or stoppie attempt"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0502",
          "name": "DISARM_CHAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "tireId",
              "type": "int"
            }
          ],
          "class": "Car",
          "id": "0503",
          "member": "BurstTire",
          "name": "BURST_CAR_TYRE",
          "num_params": 2,
          "short_desc": "Deflates the car's tire"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0504",
          "member": "IsObjNoObj",
          "name": "IS_CHAR_OBJ_NO_OBJ",
          "num_params": 1,
          "short_desc": "Returns true if the character has no objective (011C)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "modelName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0505",
          "member": "IsWearing",
          "name": "IS_PLAYER_WEARING",
          "num_params": 2,
          "short_desc": "Returns true if the player has the specified model (0352)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0506",
          "member": "SetCanDoDriveBy",
          "name": "SET_PLAYER_CAN_DO_DRIVE_BY",
          "num_params": 2,
          "short_desc": "Sets the players driveby mode"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            }
          ],
          "class": "Char",
          "id": "0507",
          "member": "SetObjSprintToCoord",
          "name": "SET_CHAR_OBJ_SPRINT_TO_COORD",
          "num_params": 3,
          "short_desc": "Sets the character's objective to sprint at the location"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0508",
          "member": "CreateSwatRope",
          "name": "CREATE_SWAT_ROPE",
          "num_params": 3,
          "short_desc": "Creates a SWAT character coming down from a rope at the coordinates"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0509",
          "name": "SET_FIRST_PERSON_CONTROL_CAMERA",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "050A",
          "name": "GET_NEAREST_TYRE_TO_POINT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "_unused",
              "type": "model_vehicle"
            },
            {
              "name": "component1",
              "type": "int"
            },
            {
              "name": "component2",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Car",
          "id": "050B",
          "member": "SetModelComponents",
          "name": "SET_CAR_MODEL_COMPONENTS",
          "num_params": 3,
          "short_desc": "Sets the variation of the next car to be created"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Camera",
          "id": "050C",
          "member": "SwitchLift",
          "name": "SWITCH_LIFT_CAMERA",
          "num_params": 1,
          "short_desc": "Displays a white interference overlay on the screen"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "050D",
          "member": "CloseAllDoors",
          "name": "CLOSE_ALL_CAR_DOORS",
          "num_params": 1,
          "short_desc": "Closes all car doors, hoods and boots"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "distance",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "050E",
          "member": "GetDistanceBetweenCoords2D",
          "name": "GET_DISTANCE_BETWEEN_COORDS_2D",
          "num_params": 5,
          "short_desc": "Gets the distance between two points"
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            }
          ],
          "output": [
            {
              "name": "distance",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Math",
          "id": "050F",
          "member": "GetDistanceBetweenCoords3D",
          "name": "GET_DISTANCE_BETWEEN_COORDS_3D",
          "num_params": 7,
          "short_desc": "Gets the distance between two points"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "0510",
          "member": "PopBootUsingPhysics",
          "name": "POP_CAR_BOOT_USING_PHYSICS",
          "num_params": 1,
          "short_desc": "Opens the trunk/boot door component of the vehicle"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0511",
          "name": "SET_FIRST_PERSON_WEAPON_CAMERA",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0512",
          "member": "IsLeavingVehicleToDie",
          "name": "IS_CHAR_LEAVING_VEHICLE_TO_DIE",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "handle",
              "type": "Car"
            }
          ],
          "class": "Object",
          "id": "0513",
          "member": "SortOutCollisionWithCar",
          "name": "SORT_OUT_OBJECT_COLLISION_WITH_CAR",
          "num_params": 2,
          "short_desc": "Makes the specified car have no collision with the specified object"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0514",
          "name": "GET_MAX_WANTED_LEVEL",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "radius",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0515",
          "member": "IsWanderPathClear",
          "name": "IS_CHAR_WANDER_PATH_CLEAR",
          "num_params": 5,
          "short_desc": ""
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0516",
          "name": "PRINT_HELP_WITH_NUMBER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "key",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0517",
          "member": "PrintHelpForever",
          "name": "PRINT_HELP_FOREVER",
          "num_params": 1,
          "short_desc": "Shows a text box which stays on screen until it is removed by another command"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0518",
          "name": "PRINT_HELP_FOREVER_WITH_NUMBER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0519",
          "member": "SetCanBeDamagedByMembersOfGang",
          "name": "SET_CHAR_CAN_BE_DAMAGED_BY_MEMBERS_OF_GANG",
          "num_params": 3,
          "short_desc": "Sets the character be damageable by members of the gang"
        },
        {
          "attrs": {
            "is_nop": true
          },
          "id": "051A",
          "name": "LOAD_AND_LAUNCH_MISSION_EXCLUSIVE",
          "num_params": 0,
          "short_desc": "Does nothing"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "051B",
          "name": "IS_MISSION_AUDIO_PLAYING",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "message",
              "type": "gxt_key"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "051C",
          "member": "CreateLockedProperty",
          "name": "CREATE_LOCKED_PROPERTY_PICKUP",
          "num_params": 5,
          "short_desc": "Creates an asset icon for an asset that is not for sale"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "price",
              "type": "int"
            },
            {
              "name": "message",
              "type": "gxt_key"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "051D",
          "member": "CreateForSaleProperty",
          "name": "CREATE_FORSALE_PROPERTY_PICKUP",
          "num_params": 6,
          "short_desc": "Creates an asset pickup for an asset which can be bought"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "051E",
          "member": "FreezePosition",
          "name": "FREEZE_CAR_POSITION",
          "num_params": 2,
          "short_desc": "Locks the vehicle's position"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "handle",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "051F",
          "member": "HasBeenDamagedByChar",
          "name": "HAS_CHAR_BEEN_DAMAGED_BY_CHAR",
          "num_params": 2,
          "short_desc": "Returns true if the character has been hurt by the other character"
        },
        {
          "id": "0520",
          "name": "HAS_CHAR_BEEN_DAMAGED_BY_CAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0521",
          "name": "HAS_CAR_BEEN_DAMAGED_BY_CHAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0522",
          "name": "HAS_CAR_BEEN_DAMAGED_BY_CAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0523",
          "name": "GET_RADIO_CHANNEL",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0524",
          "name": "DISPLAY_TEXT_WITH_3_NUMBERS",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0525",
          "name": "IS_CAR_DROWNING_IN_WATER",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0526",
          "member": "IsDrowningInWater",
          "name": "IS_CHAR_DROWNING_IN_WATER",
          "num_params": 1,
          "short_desc": "Returns true if the character is taking damage from ocean water while on foot"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "0527",
          "member": "DisableShadows",
          "name": "DISABLE_CUTSCENE_SHADOWS",
          "num_params": 0,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "0528",
          "member": "HasGlassBeenShatteredNearby",
          "name": "HAS_GLASS_BEEN_SHATTERED_NEARBY",
          "num_params": 3,
          "short_desc": "Checks if glass has been shattered near the specified location"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CutsceneObject"
            },
            {
              "name": "char",
              "type": "CutsceneObject"
            },
            {
              "name": "boneId",
              "type": "Bone"
            }
          ],
          "class": "CutsceneObject",
          "id": "0529",
          "member": "AttachToBone",
          "name": "ATTACH_CUTSCENE_OBJECT_TO_BONE",
          "num_params": 3,
          "short_desc": "Attaches the cutscene object to the cutscene character's bone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CutsceneObject"
            },
            {
              "name": "char",
              "type": "CutsceneObject"
            },
            {
              "name": "frameName",
              "type": "string"
            }
          ],
          "class": "CutsceneObject",
          "id": "052A",
          "member": "AttachToComponent",
          "name": "ATTACH_CUTSCENE_OBJECT_TO_COMPONENT",
          "num_params": 3,
          "short_desc": "Attaches the cutscene object to the cutscene character's frame"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "052B",
          "member": "SetStayInCarWhenJacked",
          "name": "SET_CHAR_STAY_IN_CAR_WHEN_JACKED",
          "num_params": 2,
          "short_desc": "Makes the character stay in the vehicle when it is jacked (characters let themselves get \"kidnapped\")"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "052C",
          "name": "IS_MISSION_AUDIO_LOADING",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "052D",
          "member": "AddMoneySpentOnWeapons",
          "name": "ADD_MONEY_SPENT_ON_WEAPONS",
          "num_params": 1,
          "short_desc": "Adds to the weapon budget stat"
        },
        {
          "input": [
            {
              "name": "amount",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "052E",
          "member": "AddMoneySpentOnProperty",
          "name": "ADD_MONEY_SPENT_ON_PROPERTY",
          "num_params": 1,
          "short_desc": "Adds to the property budget stat"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "052F",
          "name": "ADD_MONEY_SPENT_ON_AUTO_PAINTING",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0530",
          "member": "SetAnsweringMobile",
          "name": "SET_CHAR_ANSWERING_MOBILE",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "intensity",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0531",
          "member": "SetDrunkenness",
          "name": "SET_PLAYER_DRUNKENNESS",
          "num_params": 2,
          "short_desc": "Makes the camera start moving around in a swirling motion with the specified intensity as if drunk"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0532",
          "name": "GET_PLAYER_DRUNKENNESS",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0533",
          "name": "SET_PLAYER_DRUG_LEVEL",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0534",
          "name": "GET_PLAYER_DRUG_LEVEL",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0535",
          "name": "ADD_LOAN_SHARK_VISITS",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0536",
          "member": "AddStoresKnockedOff",
          "name": "ADD_STORES_KNOCKED_OFF",
          "num_params": 1,
          "short_desc": "Adds to the stores knocked off stat"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0537",
          "name": "ADD_MOVIE_STUNTS",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0538",
          "member": "AddNumberOfAssassinations",
          "name": "ADD_NUMBER_OF_ASSASSINATIONS",
          "num_params": 1,
          "short_desc": "Adds to the assassination contracts stat"
        },
        {
          "input": [
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0539",
          "member": "AddPizzasDelivered",
          "name": "ADD_PIZZAS_DELIVERED",
          "num_params": 1,
          "short_desc": "Adds to the pizzas delivered stat"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "053A",
          "name": "ADD_GARBAGE_PICKUPS",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "053B",
          "member": "AddIceCreamsSold",
          "name": "ADD_ICE_CREAMS_SOLD",
          "num_params": 1,
          "short_desc": "Adds to the \"ice cream\" sold stat"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "053C",
          "name": "SET_TOP_SHOOTING_RANGE_SCORE",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "053D",
          "name": "ADD_SHOOTING_RANGE_RANK",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "053E",
          "name": "ADD_MONEY_SPENT_ON_GAMBLING",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "053F",
          "name": "ADD_MONEY_WON_ON_GAMBLING",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0540",
          "name": "SET_LARGEST_GAMBLING_WIN",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0541",
          "member": "SetInPlayersGroupCanFight",
          "name": "SET_CHAR_IN_PLAYERS_GROUP_CAN_FIGHT",
          "num_params": 2,
          "short_desc": "Sets whether the char assists the player in attacking another character on foot"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0542",
          "member": "ClearWaitState",
          "name": "CLEAR_CHAR_WAIT_STATE",
          "num_params": 1,
          "short_desc": "Stops the idle animation on the character (0372)"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "modelId",
              "type": "model_vehicle"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Car",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0543",
          "member": "GetRandomCarOfTypeInAreaNoSave",
          "name": "GET_RANDOM_CAR_OF_TYPE_IN_AREA_NO_SAVE",
          "num_params": 6,
          "short_desc": "Loops through the pool of vehicles to retrieve one that matches the specified model in the specified 2D area"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0544",
          "member": "SetCanBurstTires",
          "name": "SET_CAN_BURST_CAR_TYRES",
          "num_params": 2,
          "short_desc": "Sets whether the car's tires can be deflated"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0545",
          "member": "SetAutoAim",
          "name": "SET_PLAYER_AUTO_AIM",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "class": "Heli",
          "id": "0546",
          "member": "FireHunterGun",
          "name": "FIRE_HUNTER_GUN",
          "num_params": 1,
          "short_desc": "Makes the Hunter helicopter fire cannon gun"
        },
        {
          "input": [
            {
              "name": "propertyIndex",
              "type": "Property"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0547",
          "member": "SetPropertyAsOwned",
          "name": "SET_PROPERTY_AS_OWNED",
          "num_params": 1,
          "short_desc": "Adds the property to the property owned stat"
        },
        {
          "input": [
            {
              "name": "num",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0548",
          "member": "AddBloodRingKills",
          "name": "ADD_BLOOD_RING_KILLS",
          "num_params": 1,
          "short_desc": "Adds to the number of Bloodring kills stat"
        },
        {
          "input": [
            {
              "name": "timeInSec",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0549",
          "member": "SetLongestTimeInBloodRing",
          "name": "SET_LONGEST_TIME_IN_BLOOD_RING",
          "num_params": 1,
          "short_desc": "Sets the longest time in Bloodring stat"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "054A",
          "member": "RemoveEverythingForHugeCutscene",
          "name": "REMOVE_EVERYTHING_FOR_HUGE_CUTSCENE",
          "num_params": 0,
          "short_desc": "Stops processing of everything in the world to free up the game memory"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "054B",
          "member": "IsTouchingVehicle",
          "name": "IS_PLAYER_TOUCHING_VEHICLE",
          "num_params": 2,
          "short_desc": "Returns true if the player is colliding with the vehicle either on foot or while driving"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "054C",
          "name": "IS_CHAR_TOUCHING_VEHICLE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "player",
              "type": "Player"
            },
            {
              "name": "offsetX",
              "type": "float"
            },
            {
              "name": "offsetY",
              "type": "float"
            },
            {
              "name": "offsetZ",
              "type": "float"
            },
            {
              "name": "modelId1",
              "type": "model_char"
            },
            {
              "name": "modelId2",
              "type": "model_char"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "World",
          "id": "054D",
          "member": "CheckForPedModelAroundPlayer",
          "name": "CHECK_FOR_PED_MODEL_AROUND_PLAYER",
          "num_params": 6,
          "short_desc": "Returns true if there is a pedestrian of the given model in the specified area around the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "054E",
          "member": "ClearFollowPath",
          "name": "CLEAR_CHAR_FOLLOW_PATH",
          "num_params": 1,
          "short_desc": "Clears the character's follow path (009E)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "054F",
          "member": "SetCanBeShotInVehicle",
          "name": "SET_CHAR_CAN_BE_SHOT_IN_VEHICLE",
          "num_params": 2,
          "short_desc": "Makes the character immune to a damage while in a vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "CutsceneObject"
            },
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "class": "CutsceneObject",
          "id": "0550",
          "member": "AttachToVehicle",
          "name": "ATTACH_CUTSCENE_OBJECT_TO_VEHICLE",
          "num_params": 2,
          "short_desc": "Attaches the cutscene object to the vehicle"
        },
        {
          "input": [
            {
              "name": "tableName",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Text",
          "id": "0551",
          "member": "LoadMissionText",
          "name": "LOAD_MISSION_TEXT",
          "num_params": 1,
          "short_desc": "Makes the game use GXT Entries from the specified GXT Table"
        },
        {
          "input": [
            {
              "name": "scrollbarMessage",
              "type": "ScrollbarMessage"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0552",
          "member": "SetTonightsEvent",
          "name": "SET_TONIGHTS_EVENT",
          "num_params": 1,
          "short_desc": "Sets the scrollbar message at Hyman Memorial Stadium"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0553",
          "member": "ClearLastDamageEntity",
          "name": "CLEAR_CHAR_LAST_DAMAGE_ENTITY",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "id": "0554",
          "name": "CLEAR_CAR_LAST_DAMAGE_ENTITY",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Object",
          "id": "0555",
          "member": "FreezePosition",
          "name": "FREEZE_OBJECT_POSITION",
          "num_params": 2,
          "short_desc": "Sets whether the object's position remains unchanged"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0556",
          "member": "SetHasMetDebbieHarry",
          "name": "SET_PLAYER_HAS_MET_DEBBIE_HARRY",
          "num_params": 1,
          "short_desc": "",
          "attrs": {
            "is_static": true
          }
        },
        {
          "input": [
            {
              "name": "level",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0557",
          "member": "SetRiotIntensity",
          "name": "SET_RIOT_INTENSITY",
          "num_params": 1,
          "short_desc": "Sets the riot sound volume level (0-127)"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0558",
          "name": "IS_CAR_IN_ANGLED_AREA_2D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0559",
          "name": "IS_CAR_IN_ANGLED_AREA_3D",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "055A",
          "name": "REMOVE_WEAPON_FROM_CHAR",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "pickUpX",
              "type": "float"
            },
            {
              "name": "pickUpY",
              "type": "float"
            },
            {
              "name": "pickUpZ",
              "type": "float"
            },
            {
              "name": "pickUpAngle",
              "type": "float"
            },
            {
              "name": "dropoffX",
              "type": "float"
            },
            {
              "name": "dropoffY",
              "type": "float"
            },
            {
              "name": "dropoffZ",
              "type": "float"
            },
            {
              "name": "dropoffAngle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Shortcut",
          "id": "055B",
          "member": "SetUpTaxi",
          "name": "SET_UP_TAXI_SHORTCUT",
          "num_params": 8,
          "short_desc": "Sets up both the pick-up (058D) and drop-off (058E) points of the taxi shortcut"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Shortcut",
          "id": "055C",
          "member": "ClearTaxi",
          "name": "CLEAR_TAXI_SHORTCUT",
          "num_params": 0,
          "short_desc": "Clears any taxi shortcut that is set up by 0556 or 058E"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "055D",
          "name": "SET_CHAR_OBJ_GOTO_CAR_ON_FOOT",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "055E",
          "name": "GET_CLOSEST_WATER_NODE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "055F",
          "member": "AddPornLeafletToRubbish",
          "name": "ADD_PORN_LEAFLET_TO_RUBBISH",
          "num_params": 1,
          "short_desc": "Sets visibility of secondary rubbish (03AD)"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "Clothing"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Pickup",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Pickup",
          "id": "0560",
          "member": "CreateClothes",
          "name": "CREATE_CLOTHES_PICKUP",
          "num_params": 5,
          "short_desc": "Creates a clothing pickup at the location"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0561",
          "name": "CHANGE_BLIP_THRESHOLD",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Player",
          "id": "0562",
          "member": "MakeFireProof",
          "name": "MAKE_PLAYER_FIRE_PROOF",
          "num_params": 2,
          "short_desc": "Makes the player immune to fire"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0563",
          "member": "IncreaseMaxHealth",
          "name": "INCREASE_PLAYER_MAX_HEALTH",
          "num_params": 2,
          "short_desc": "Increases the players maximum health by the specified amount"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "value",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0564",
          "member": "IncreaseMaxArmor",
          "name": "INCREASE_PLAYER_MAX_ARMOUR",
          "num_params": 2,
          "short_desc": "Increases the players armor by the specified amount"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "0565",
          "member": "CreateRandomAsDriver",
          "name": "CREATE_RANDOM_CHAR_AS_DRIVER",
          "num_params": 2,
          "short_desc": "Creates a driver in the vehicle"
        },
        {
          "input": [
            {
              "name": "vehicle",
              "type": "Car"
            },
            {
              "name": "seatId",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Char",
          "id": "0566",
          "member": "CreateRandomAsPassenger",
          "name": "CREATE_RANDOM_CHAR_AS_PASSENGER",
          "num_params": 3,
          "short_desc": "Creates a random character in the passenger seat of the vehicle"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0567",
          "member": "SetIgnoreThreatsBehindObjects",
          "name": "SET_CHAR_IGNORE_THREATS_BEHIND_OBJECTS",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "ammo",
              "type": "int"
            }
          ],
          "class": "Player",
          "id": "0568",
          "member": "EnsureHasDriveByWeapon",
          "name": "ENSURE_PLAYER_HAS_DRIVE_BY_WEAPON",
          "num_params": 2,
          "short_desc": "Sets the amount of ammo a player has during a driveby"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Heli"
            }
          ],
          "class": "Heli",
          "id": "0569",
          "member": "MakeComeCrashingDown",
          "name": "MAKE_HELI_COME_CRASHING_DOWN",
          "num_params": 1,
          "short_desc": "Makes helicopter simulate crash landing, exploding on the way if high up"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "type",
              "type": "ExplosionType"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "056A",
          "member": "AddExplosionNoSound",
          "name": "ADD_EXPLOSION_NO_SOUND",
          "num_params": 4,
          "short_desc": "Creates an explosion with no sound"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Object"
            },
            {
              "name": "areaId",
              "type": "Interior"
            }
          ],
          "class": "Object",
          "id": "056B",
          "member": "SetAreaVisible",
          "name": "SET_OBJECT_AREA_VISIBLE",
          "num_params": 2,
          "short_desc": "Sets the visibility of the object to the specified interior"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "056C",
          "name": "WAS_VEHICLE_EVER_POLICE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "056D",
          "member": "SetNeverTargeted",
          "name": "SET_CHAR_NEVER_TARGETTED",
          "num_params": 2,
          "short_desc": "Sets whether the character won't be targeted by the autoaim system"
        },
        {
          "input": [
            {
              "name": "animation",
              "type": "string"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "056E",
          "member": "LoadUncompressedAnim",
          "name": "LOAD_UNCOMPRESSED_ANIM",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Cutscene",
          "id": "056F",
          "member": "WasSkipped",
          "name": "WAS_CUTSCENE_SKIPPED",
          "num_params": 0,
          "short_desc": "Returns true if the cutscene was skipped"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0570",
          "member": "SetCrouchWhenThreatened",
          "name": "SET_CHAR_CROUCH_WHEN_THREATENED",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0571",
          "member": "IsInAnyPoliceVehicle",
          "name": "IS_CHAR_IN_ANY_POLICE_VEHICLE",
          "num_params": 1,
          "short_desc": "Returns true if the character is driving a police vehicle"
        },
        {
          "input": [
            {
              "name": "handle",
              "type": "any"
            }
          ],
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Char",
          "id": "0572",
          "member": "DoesExist",
          "name": "DOES_CHAR_EXIST",
          "num_params": 1,
          "short_desc": "Returns true if the handle is a valid character handle"
        },
        {
          "id": "0573",
          "name": "DOES_VEHICLE_EXIST",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0574",
          "name": "ADD_SHORT_RANGE_BLIP_FOR_CONTACT_POINT",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "sprite",
              "type": "RadarSprite"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Blip",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "Blip",
          "id": "0575",
          "member": "AddShortRangeSpriteForContactPoint",
          "name": "ADD_SHORT_RANGE_SPRITE_BLIP_FOR_CONTACT_POINT",
          "num_params": 5,
          "short_desc": "Adds a contact sprite blip for the specified coordinates"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0576",
          "member": "IsStuck",
          "name": "IS_CHAR_STUCK",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0577",
          "member": "SetAllTaxisHaveNitro",
          "name": "SET_ALL_TAXIS_HAVE_NITRO",
          "num_params": 1,
          "short_desc": "Toggles whether all taxis have nitrous"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0578",
          "member": "SetStopShootDontSeekEntity",
          "name": "SET_CHAR_STOP_SHOOT_DONT_SEEK_ENTITY",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "0579",
          "member": "FreezePositionAndDontLoadCollision",
          "name": "FREEZE_CAR_POSITION_AND_DONT_LOAD_COLLISION",
          "num_params": 2,
          "short_desc": "Makes the car maintain its position"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "057A",
          "name": "FREEZE_CHAR_POSITION_AND_DONT_LOAD_COLLISION",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "057B",
          "name": "FREEZE_OBJECT_POSITION_AND_DONT_LOAD_COLLISION",
          "num_params": 0
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "057C",
          "name": "SET_FADE_AND_JUMPCUT_AFTER_RC_EXPLOSION",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "highestLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "057D",
          "member": "RegisterVigilanteLevel",
          "name": "REGISTER_VIGILANTE_LEVEL",
          "num_params": 1,
          "short_desc": "Saves the highest vigilante level stat"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "057E",
          "member": "ClearAllAnims",
          "name": "CLEAR_ALL_CHAR_ANIMS",
          "num_params": 1,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Garage"
            },
            {
              "name": "max",
              "type": "int"
            }
          ],
          "class": "Garage",
          "id": "057F",
          "member": "SetMaximumNumberOfCars",
          "name": "SET_MAXIMUM_NUMBER_OF_CARS_IN_GARAGE",
          "num_params": 2,
          "short_desc": "Sets the maximum number of vehicles for a save garage to open"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Hud",
          "id": "0580",
          "member": "AreWantedStarsFlashing",
          "name": "WANTED_STARS_ARE_FLASHING",
          "num_params": 0,
          "short_desc": "Returns true if the wanted stars are flashing (normally after visiting a Pay'n'Spray)"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Weather",
          "id": "0581",
          "member": "SetAllowHurricanes",
          "name": "SET_ALLOW_HURRICANES",
          "num_params": 1,
          "short_desc": "Allows hurricane weather"
        },
        {
          "input": [
            {
              "name": "track",
              "type": "AnnouncementTrack"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Audio",
          "id": "0582",
          "member": "PlayAnnouncement",
          "name": "PLAY_ANNOUNCEMENT",
          "num_params": 1,
          "short_desc": "Plays an announcement audio"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Game",
          "id": "0583",
          "member": "SetIsInStadium",
          "name": "SET_PLAYER_IS_IN_STADIUM",
          "num_params": 1,
          "short_desc": "Greys out the radar"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "output": [
            {
              "name": "num",
              "type": "int",
              "source": "var_any"
            }
          ],
          "class": "Player",
          "id": "0584",
          "member": "GetBusFaresCollected",
          "name": "GET_BUS_FARES_COLLECTED_BY_PLAYER",
          "num_params": 2,
          "short_desc": "Gets the bus fares collected by the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "distributionCar",
              "type": "Car"
            }
          ],
          "output": [
            {
              "name": "status",
              "type": "ObjBuyIceCreamStatus",
              "source": "var_any"
            }
          ],
          "class": "Char",
          "id": "0585",
          "member": "SetObjBuyIceCream",
          "name": "SET_CHAR_OBJ_BUY_ICE_CREAM",
          "num_params": 3,
          "short_desc": "Makes the character approach the distribution vehicle to buy \"ice cream\" and returns the status of this attempt"
        },
        {
          "input": [
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Hud",
          "id": "0586",
          "member": "DisplayRadar",
          "name": "DISPLAY_RADAR",
          "num_params": 1,
          "short_desc": "Displays or hides the radar"
        },
        {
          "input": [
            {
              "name": "statId",
              "type": "int"
            },
            {
              "name": "position",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0587",
          "member": "RegisterBestPosition",
          "name": "REGISTER_BEST_POSITION",
          "num_params": 2,
          "short_desc": "Updates the race best position"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            },
            {
              "name": "infoZone",
              "type": "gxt_key"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "0588",
          "member": "IsInInfoZone",
          "name": "IS_PLAYER_IN_INFO_ZONE",
          "num_params": 2,
          "short_desc": "Returns true if the player is in the specified zone"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "class": "Char",
          "id": "0589",
          "member": "ClearIceCreamPurchase",
          "name": "CLEAR_CHAR_ICE_CREAM_PURCHASE",
          "num_params": 1,
          "short_desc": "Resets the information that the character has bought \"ice cream\""
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Pad",
          "id": "058A",
          "member": "IsInCarFireButtonPressed",
          "name": "IS_IN_CAR_FIRE_BUTTON_PRESSED",
          "num_params": 0,
          "short_desc": "Returns true if the attack button is being pressed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "058B",
          "member": "HasAttemptedAttractor",
          "name": "HAS_CHAR_ATTEMPTED_ATTRACTOR",
          "num_params": 1,
          "short_desc": "Checks if the distribution ped has been attracted"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Car",
          "id": "058C",
          "member": "SetLoadCollisionFlag",
          "name": "SET_LOAD_COLLISION_FOR_CAR_FLAG",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "058D",
          "member": "SetLoadCollisionFlag",
          "name": "SET_LOAD_COLLISION_FOR_CHAR_FLAG",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "058E",
          "name": "SET_LOAD_COLLISION_FOR_OBJECT_FLAG",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "fromX",
              "type": "float"
            },
            {
              "name": "fromY",
              "type": "float"
            },
            {
              "name": "fromZ",
              "type": "float"
            },
            {
              "name": "toX",
              "type": "float"
            },
            {
              "name": "toY",
              "type": "float"
            },
            {
              "name": "toZ",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Fx",
          "id": "058F",
          "member": "AddBigGunFlash",
          "name": "ADD_BIG_GUN_FLASH",
          "num_params": 6,
          "short_desc": "Creates a gun flash particle effect"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "0590",
          "member": "HasBoughtIceCream",
          "name": "HAS_CHAR_BOUGHT_ICE_CREAM",
          "num_params": 1,
          "short_desc": "Returns true if the character has bought \"ice cream\""
        },
        {
          "output": [
            {
              "name": "percentage",
              "type": "float",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "0591",
          "member": "GetProgressPercentage",
          "name": "GET_PROGRESS_PERCENTAGE",
          "num_params": 1,
          "short_desc": "Gets the progress of completion as a percentage"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Shortcut",
          "id": "0592",
          "member": "SetPickupPoint",
          "name": "SET_SHORTCUT_PICKUP_POINT",
          "num_params": 4,
          "short_desc": "Sets the taxi shortcut pick-up point for mission"
        },
        {
          "input": [
            {
              "name": "x",
              "type": "float"
            },
            {
              "name": "y",
              "type": "float"
            },
            {
              "name": "z",
              "type": "float"
            },
            {
              "name": "angle",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Shortcut",
          "id": "0593",
          "member": "SetDropoffPointForMission",
          "name": "SET_SHORTCUT_DROPOFF_POINT_FOR_MISSION",
          "num_params": 4,
          "short_desc": "Sets the taxi shortcut pick-up point for mission"
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "rightTopX",
              "type": "float"
            },
            {
              "name": "rightTopY",
              "type": "float"
            },
            {
              "name": "allowCivilian",
              "type": "int"
            },
            {
              "name": "allowGangMember",
              "type": "int"
            },
            {
              "name": "allowCriminal",
              "type": "int"
            }
          ],
          "output": [
            {
              "name": "handle",
              "type": "Char",
              "source": "var_any"
            }
          ],
          "attrs": {
            "is_constructor": true
          },
          "class": "World",
          "id": "0594",
          "member": "GetRandomIceCreamCustomerInArea",
          "name": "GET_RANDOM_ICE_CREAM_CUSTOMER_IN_AREA",
          "num_params": 8,
          "short_desc": "Returns the handle of the next ped in the given area who has not bought \"ice cream\" yet, or -1 otherwise"
        },
        {
          "attrs": {
            "is_unsupported": true
          },
          "id": "0595",
          "name": "GET_RANDOM_ICE_CREAM_CUSTOMER_IN_ZONE",
          "num_params": 0
        },
        {
          "input": [
            {
              "name": "leftBottomX",
              "type": "float"
            },
            {
              "name": "leftBottomY",
              "type": "float"
            },
            {
              "name": "topRightX",
              "type": "float"
            },
            {
              "name": "topRightY",
              "type": "float"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "World",
          "id": "0596",
          "member": "UnlockAllCarDoorsInArea",
          "name": "UNLOCK_ALL_CAR_DOORS_IN_AREA",
          "num_params": 4,
          "short_desc": "Unlocks all car doors in the specified rectangular area"
        },
        {
          "input": [
            {
              "name": "gangId",
              "type": "GangType"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Gang",
          "id": "0597",
          "member": "SetAttackPlayerWithCops",
          "name": "SET_GANG_ATTACK_PLAYER_WITH_COPS",
          "num_params": 2,
          "short_desc": "Forces members of the specified gang to act as law enforcement towards the player"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            },
            {
              "name": "state",
              "type": "bool"
            }
          ],
          "class": "Char",
          "id": "0598",
          "member": "SetFrightenedInJackedCar",
          "name": "SET_CHAR_FRIGHTENED_IN_JACKED_CAR",
          "num_params": 2,
          "short_desc": ""
        },
        {
          "class": "Car",
          "id": "0599",
          "input": [
            {
              "name": "self",
              "type": "Car"
            },
            {
              "name": "alpha",
              "type": "int"
            }
          ],
          "member": "SetToFadeIn",
          "name": "SET_VEHICLE_TO_FADE_IN",
          "num_params": 2,
          "short_desc": "Sets the alpha transparency of a distant vehicle"
        },
        {
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "059A",
          "member": "RegisterOddjobMissionPassed",
          "name": "REGISTER_ODDJOB_MISSION_PASSED",
          "num_params": 0,
          "short_desc": "Sets the latest odd job mission passed"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Player"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Player",
          "id": "059B",
          "member": "IsInShortcutTaxi",
          "name": "IS_PLAYER_IN_SHORTCUT_TAXI",
          "num_params": 1,
          "short_desc": "Returns true if the player is entering a shortcut taxi (0556)"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Char"
            }
          ],
          "attrs": {
            "is_condition": true
          },
          "class": "Char",
          "id": "059C",
          "member": "IsDucking",
          "name": "IS_CHAR_DUCKING",
          "num_params": 1,
          "short_desc": "Returns true if the specified character is crouching"
        },
        {
          "input": [
            {
              "name": "heliObject",
              "type": "CutsceneObject"
            },
            {
              "name": "radius",
              "type": "float"
            },
            {
              "name": "density",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Cutscene",
          "id": "059D",
          "member": "CreateDustEffectForHeli",
          "name": "CREATE_DUST_EFFECT_FOR_CUTSCENE_HELI",
          "num_params": 3,
          "short_desc": "Creates an effect of a heli blowing up dust on the ground"
        },
        {
          "input": [
            {
              "name": "highestLevel",
              "type": "int"
            }
          ],
          "attrs": {
            "is_static": true
          },
          "class": "Stat",
          "id": "059E",
          "member": "RegisterFireLevel",
          "name": "REGISTER_FIRE_LEVEL",
          "num_params": 1,
          "short_desc": "Saves the highest firefighter level stat"
        },
        {
          "attrs": {
            "is_condition": true,
            "is_static": true
          },
          "class": "Game",
          "id": "059F",
          "member": "IsAustralian",
          "name": "IS_AUSTRALIAN_GAME",
          "num_params": 0,
          "short_desc": "Returns true if the current game is an Australian release"
        },
        {
          "input": [
            {
              "name": "self",
              "type": "Car"
            }
          ],
          "class": "Car",
          "id": "05A0",
          "member": "DisarmBomb",
          "name": "DISARM_CAR_BOMB",
          "num_params": 1,
          "short_desc": "Disarms the car's bomb"
        },
        {
          "id": "05A1",
          "name": "IS_JAPANESE_GAME",
          "num_params": 0
        },
        {
          "id": "05A2",
          "name": "COMMAND_05A2",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "05A3",
          "name": "COMMAND_05A3",
          "num_params": 0
        },
        {
          "id": "05A4",
          "name": "GET_DISTANCE_BETWEEN_2D_POINTS",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "05A5",
          "name": "GET_DISTANCE_BETWEEN_3D_POINTS",
          "num_params": 7,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            }
          ]
        },
        {
          "id": "05A6",
          "name": "DOT_PRODUCT_2D",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "05A7",
          "name": "DOT_PRODUCT_3D",
          "num_params": 7,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            }
          ]
        },
        {
          "id": "05A8",
          "name": "DEBUG_PRINT_WITH_1_FLOAT",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "05A9",
          "name": "DEBUG_PRINT_WITH_2_FLOATS",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "05AA",
          "name": "DEBUG_PRINT_WITH_3_FLOATS",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "05AB",
          "name": "GET_PAD_BUTTON_STATE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05AC",
          "name": "SET_NAVIGATION_ARROW",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "05AD",
          "name": "CLEAR_NAVIGATION_ARROW",
          "num_params": 0
        },
        {
          "id": "05AE",
          "name": "CALL",
          "num_params": 0
        },
        {
          "id": "05AF",
          "name": "CALL_NOT",
          "num_params": 0
        },
        {
          "id": "05B0",
          "name": "IS_CAR_AUTOMOBILE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05B1",
          "name": "IS_CAR_BIKE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05B2",
          "name": "IS_CAR_PLANE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05B3",
          "name": "IS_CAR_HELI",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05B4",
          "name": "COMMAND_05B4",
          "num_params": 0
        },
        {
          "id": "05B5",
          "name": "COMMAND_05B5",
          "num_params": 0
        },
        {
          "id": "05B6",
          "name": "COMMAND_05B6",
          "num_params": 0
        },
        {
          "id": "05B7",
          "name": "COMMAND_05B7",
          "num_params": 0
        },
        {
          "id": "05B8",
          "name": "COMMAND_05B8",
          "num_params": 0
        },
        {
          "id": "05B9",
          "name": "COMMAND_05B9",
          "num_params": 0
        },
        {
          "id": "05BA",
          "name": "COMMAND_05BA",
          "num_params": 0
        },
        {
          "id": "05BB",
          "name": "COMMAND_05BB",
          "num_params": 0
        },
        {
          "id": "05BC",
          "name": "COMMAND_05BC",
          "num_params": 0
        },
        {
          "id": "05BD",
          "name": "COMMAND_05BD",
          "num_params": 0
        },
        {
          "id": "05BE",
          "name": "COMMAND_05BE",
          "num_params": 0
        },
        {
          "id": "05BF",
          "name": "COMMAND_05BF",
          "num_params": 0
        },
        {
          "id": "05C0",
          "name": "COMMAND_05C0",
          "num_params": 0
        },
        {
          "id": "05C1",
          "name": "COMMAND_05C1",
          "num_params": 0
        },
        {
          "id": "05C2",
          "name": "COMMAND_05C2",
          "num_params": 0
        },
        {
          "id": "05C3",
          "name": "COMMAND_05C3",
          "num_params": 0
        },
        {
          "id": "05C4",
          "name": "COMMAND_05C4",
          "num_params": 0
        },
        {
          "id": "05C5",
          "name": "RETURN_IF_TRUE",
          "num_params": 0
        },
        {
          "id": "05C6",
          "name": "RETURN_TRUE_IF_TRUE",
          "num_params": 0
        },
        {
          "id": "05C7",
          "name": "SET_CHAR_ONLY_ALLOWED_TO_SIT_BEHIND",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05C8",
          "name": "SET_RC_HELI_HEIGHT_LIMIT",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05C9",
          "name": "CREATE_SCRIPT_CORONA",
          "num_params": 10,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            }
          ]
        },
        {
          "id": "05CA",
          "name": "REMOVE_SCRIPT_CORONA",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05CB",
          "name": "IS_BOAT_IN_WATER",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05CC",
          "name": "IS_CAR_DRIVER_BEING_JACKED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05CD",
          "name": "SET_CHAR_ONLY_ALLOWED_TO_SIT_IN_FRONT",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05CE",
          "name": "SET_CAR_TILTED_BY_CHAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05CF",
          "name": "GET_WEAPON_TYPE_FOR_PICKUP_IN_AREA",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D0",
          "name": "IS_PLAYER_USING_FIRST_PERSON_CAMERA",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D1",
          "name": "COMMAND_05D1",
          "num_params": 0
        },
        {
          "id": "05D2",
          "name": "COMMAND_05D2",
          "num_params": 0
        },
        {
          "id": "05D3",
          "name": "COMMAND_05D3",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D4",
          "name": "SET_DEBUG_MENU_ACTIVE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D5",
          "name": "SET_DRAW_HUD",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D6",
          "name": "GET_RANDOM_CHAR_IN_AREA_NO_CHECKS",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D7",
          "name": "GET_RANDOM_CAR_IN_AREA_NO_CHECKS_NO_SAVE",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D8",
          "name": "STORE_CAR_COLLIDED_WITH_NO_SAVE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05D9",
          "name": "DISABLE_FERRY_PATH",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05DA",
          "name": "ENABLE_FERRY_PATH",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05DB",
          "name": "GET_CLOSEST_DOCKED_FERRY",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "05DC",
          "name": "OPEN_FERRY_DOOR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05DD",
          "name": "CLOSE_FERRY_DOOR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05DE",
          "name": "IS_FERRY_DOOR_OPEN",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05DF",
          "name": "IS_FERRY_DOOR_CLOSED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E0",
          "name": "SKIP_FERRY_TO_NEXT_DOCK",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E1",
          "name": "SET_CHAR_DROPS_WEAPONS_ON_DEATH",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E2",
          "name": "IS_CHAR_CROUCHING",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E3",
          "name": "GET_FERRY_BOARDING_SPACE",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E4",
          "name": "GET_FERRY_HEADING",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E5",
          "name": "SET_FERRIES_ENABLED",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E6",
          "name": "COMPLETE_FERRY_DOOR_MOVEMENT",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E7",
          "name": "OVERRIDE_CAR_REMOTE_CONTROL",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05E8",
          "name": "CANCEL_REMOTE_MODE",
          "num_params": 0
        },
        {
          "id": "05E9",
          "name": "REGISTER_CAR_SOLD",
          "num_params": 0
        },
        {
          "id": "05EA",
          "name": "ADD_MONEY_MADE_WITH_CAR_SALES",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05EB",
          "name": "SET_BRIDGE_STATE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05EC",
          "name": "SET_OBJECT_TURN_SPEED",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "05ED",
          "name": "SET_OBJECT_MASS",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "05EE",
          "name": "HAS_CUTSCENE_LOADED",
          "num_params": 0
        },
        {
          "id": "05EF",
          "name": "SET_UNIQUE_JUMPS_FOUND",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F0",
          "name": "SET_HIDDEN_PACKAGES_COLLECTED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F1",
          "name": "REGISTER_BIKE_SOLD",
          "num_params": 0
        },
        {
          "id": "05F2",
          "name": "ADD_MONEY_MADE_WITH_BIKE_SALES",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F3",
          "name": "REGISTER_PACKAGE_SMUGGLED",
          "num_params": 0
        },
        {
          "id": "05F4",
          "name": "REGISTER_SMUGGLER_WASTED",
          "num_params": 0
        },
        {
          "id": "05F5",
          "name": "REGISTER_FASTEST_SMUGGLING_TIME",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F6",
          "name": "SET_CHAR_DIVE_FROM_CAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F7",
          "name": "WRECK_CAR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F8",
          "name": "ADD_MONEY_MADE_IN_COACH",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05F9",
          "name": "ADD_MONEY_MADE_COLLECTING_TRASH",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05FA",
          "name": "REGISTER_HITMEN_KILLED",
          "num_params": 0
        },
        {
          "id": "05FB",
          "name": "REGISTER_GUARDIAN_ANGEL_MISSION_PASSED",
          "num_params": 0
        },
        {
          "id": "05FC",
          "name": "REGISTER_HIGHEST_GUARDIAN_ANGEL_JUSTICE_DISHED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "05FD",
          "name": "REGISTER_BEST_BANDIT_LAP_TIME",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05FE",
          "name": "REGISTER_BEST_BANDIT_POSITION",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "05FF",
          "name": "REGISTER_MOST_TIME_LEFT_TRAIN_RACE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0600",
          "name": "REGISTER_HIGHEST_TRAIN_CASH_EARNED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0601",
          "name": "REGISTER_FASTEST_HELI_RACE_TIME",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0602",
          "name": "REGISTER_BEST_HELI_RACE_POSITION",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0603",
          "name": "REGISTER_OUTFIT_CHANGED",
          "num_params": 0
        },
        {
          "id": "0604",
          "name": "REGISTER_STREET_RACE_FASTEST_TIME",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0605",
          "name": "REGISTER_STREET_RACE_FASTEST_LAP",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0606",
          "name": "REGISTER_STREET_RACE_BEST_POSITION",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0607",
          "name": "HAS_OBJECT_BEEN_DAMAGED_BY_WEAPON",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0608",
          "name": "CLEAR_OBJECT_LAST_WEAPON_DAMAGE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0609",
          "name": "SET_CAR_TURN_SPEED",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "060A",
          "name": "SET_CAR_MOVE_SPEED",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "060B",
          "name": "SET_OBJECT_PROOFS",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "id": "060C",
          "name": "GET_CAMERA_PED_ZOOM_INDICATOR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "060D",
          "name": "SET_CAMERA_PED_ZOOM_INDICATOR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "060E",
          "name": "GET_CAR_ROTATION",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "060F",
          "name": "SET_CAR_ROTATION",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0610",
          "name": "IS_DEBUG_MENU_ON",
          "num_params": 0
        },
        {
          "id": "0611",
          "name": "OPEN_VAN_BACK_DOORS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0612",
          "name": "GET_CHAR_THREAT_CHAR",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0613",
          "name": "FREEZE_PED_ZOOM_SWITCH",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0614",
          "name": "SET_OBJECT_RENDERED_DAMAGED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0615",
          "name": "GET_RANDOM_CAR_IN_AREA_NO_SAVE",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "id": "0616",
          "name": "IS_PLAYER_MADE_SAFE",
          "num_params": 0
        },
        {
          "id": "0617",
          "name": "PRINT_IF_FREE",
          "num_params": 0
        },
        {
          "id": "0618",
          "name": "IS_E3_BUILD",
          "num_params": 0
        },
        {
          "id": "0619",
          "name": "DECLARE_FORT_STAUNTON_DESTROYED_FLAG",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "061A",
          "name": "CLEAR_BIG_MESSAGES",
          "num_params": 0
        },
        {
          "id": "061B",
          "name": "CLEAR_AREA_OF_OBJECTS",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "id": "061C",
          "name": "LOAD_NON_STANDARD_PED_ANIM",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "061D",
          "name": "UNLOAD_NON_STANDARD_PED_ANIM",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "061E",
          "name": "COMMAND_061E",
          "num_params": 0
        },
        {
          "id": "061F",
          "name": "BUILD_WORLD_GEOMETRY",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0620",
          "name": "STORE_BUILDING_SWAP",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0621",
          "name": "IS_MULTIPLAYER_ACTIVE",
          "num_params": 0
        },
        {
          "id": "0622",
          "name": "GET_MULTIPLAYER_MODE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0623",
          "name": "MULTIPLAYER_SCRIPT_DONE",
          "num_params": 0
        },
        {
          "id": "0624",
          "name": "IS_MULTIPLAYER_SERVER",
          "num_params": 0
        },
        {
          "id": "0625",
          "name": "IS_MULTIPLAYER_TEAM_GAME",
          "num_params": 0
        },
        {
          "id": "0626",
          "name": "GET_MULTIPLAYER_TEAM_ID",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0627",
          "name": "DOES_SHORTCUT_TAXI_EXIST",
          "num_params": 0
        },
        {
          "id": "0628",
          "name": "SET_ONSCREEN_TIMER_COLOUR",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0629",
          "name": "SET_ONSCREEN_TIMER_BACKGROUND_COLOUR",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "062A",
          "name": "REMOVE_CAR_BOOT",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "062B",
          "name": "ADD_POINT_3D_MARKER",
          "num_params": 7,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            }
          ]
        },
        {
          "id": "062C",
          "name": "GET_VECTOR_FROM_MULTIPLAYER",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "062D",
          "name": "PRINT_HELP_ALWAYS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "062E",
          "name": "PRINT_HELP_FOREVER_ALWAYS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "062F",
          "name": "SWITCH_FERRY_COLLISION",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0630",
          "name": "SET_CHAR_MAX_HEALTH",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0631",
          "name": "SET_CHAR_SHOOT_TIMER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0632",
          "name": "SET_CHAR_ATTACK_TIMER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0633",
          "name": "SET_HELI_ROTOR_BLADES_FULLSPEED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0634",
          "name": "SET_CRUSHER_REWARD_MULTIPLIER",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0635",
          "name": "SWAP_BUILDINGS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0636",
          "name": "STREAM_BUILDING_SWAPS",
          "num_params": 0
        },
        {
          "id": "0637",
          "name": "IS_WORLD_STREAMING_COMPLETE",
          "num_params": 0
        },
        {
          "id": "0638",
          "name": "SWAP_TO_STREAMED_SECTOR",
          "num_params": 0
        },
        {
          "id": "0639",
          "name": "SET_CHAR_ATTACKS_PLAYER_WITH_COPS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "063A",
          "name": "REGISTER_FACE_PLANT_DISTANCE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "063B",
          "name": "REGISTER_MAX_SECONDS_ON_CARNAGE_LEFT",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "063C",
          "name": "REGISTER_MAX_KILLS_ON_RC_TRIAD",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "063D",
          "name": "REGISTER_HIGHEST_LEVEL_SLASH_TV",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "063E",
          "name": "ADD_MONEY_MADE_WITH_SLASH_TV",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "063F",
          "name": "ADD_TOTAL_KILLS_ON_SLASH_TV",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0640",
          "name": "ADD_NOODLES_DELIVERED",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0641",
          "name": "REGISTER_SCRAPYARD_CHALLENGE_SCORE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0642",
          "name": "REGISTER_9MM_MAYHEM_SCORE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0643",
          "name": "REGISTER_SCOOTER_SHOOTER_SCORE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0644",
          "name": "ADD_MONEY_MADE_FROM_TOURIST",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0645",
          "name": "ADD_TOURISTS_TAKEN_TO_SPOTS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0646",
          "name": "ADD_EXPORTED_CARS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0647",
          "name": "SET_TOTAL_EXPORT_CARS",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0648",
          "name": "REGISTER_DIRT_BIKE_FASTEST_LAP",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0649",
          "name": "REGISTER_DIRT_BIKE_FASTEST_TIME",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "064A",
          "name": "REGISTER_DIRT_BIKE_AIR_TIME",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "064B",
          "name": "ADD_ARROW_3D_MARKER",
          "num_params": 10,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            },
            {
              "name": "_p6",
              "type": "any"
            },
            {
              "name": "_p7",
              "type": "any"
            },
            {
              "name": "_p8",
              "type": "any"
            },
            {
              "name": "_p9",
              "type": "any"
            }
          ]
        },
        {
          "id": "064C",
          "name": "PRINT_NOW_OVERRIDE_FADE",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "064D",
          "name": "GET_PICKUP_VALUE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "064E",
          "name": "SET_PICKUP_VALUE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "064F",
          "name": "IS_DEVELOPER",
          "num_params": 0
        },
        {
          "id": "0650",
          "name": "SET_DEVELOPER_FLAG",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0651",
          "name": "REGISTER_WICHITA_WIPEOUT_SCORE",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0652",
          "name": "ATTACH_OBJECT_TO_CAR",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "0653",
          "name": "DETACH_OBJECT_FROM_CAR",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0654",
          "name": "SET_PAD_STICKS_MULTIPLIER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0655",
          "name": "PRINT_SUBTITLE_NOW",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0656",
          "name": "PRINT_SUBTITLE_NOW_OVERRIDE_FADE",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0657",
          "name": "PRINT_SUBTITLE_NOW_NO_BRIEF",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0658",
          "name": "PRINT_WITH_NUMBER_NOW_NO_BRIEF",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0659",
          "name": "GET_ANGLE_BETWEEN_POINTS",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "065A",
          "name": "OVERRIDE_CHAR_MOVE_ANIM",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "065B",
          "name": "COMMAND_065B",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "065C",
          "name": "ENABLE_EMERGENCY_VEHICLES",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "065D",
          "name": "ADD_UNLOCKED_COSTUME",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "065E",
          "name": "CLEAR_MULTIPLAYER_SPLASH_SCREEN",
          "num_params": 0
        },
        {
          "id": "065F",
          "name": "PRINT_WITH_2_NUMBERS_NOW_NO_BRIEF",
          "num_params": 5,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            }
          ]
        },
        {
          "id": "0660",
          "name": "GET_OBJECT_ORIENTATION",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0661",
          "name": "SET_OBJECT_ORIENTATION",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0662",
          "name": "CHANGE_ONSCREEN_COUNTER_PREFIX",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0663",
          "name": "STORE_PLAYER_OUTFIT",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0664",
          "name": "DISPLAY_ONSCREEN_TIMER_WITH_NUMBER_AND_STRING",
          "num_params": 4,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            }
          ]
        },
        {
          "id": "0665",
          "name": "SET_PLAYER_CURRENT_WEAPON_AMMO_IN_CLIP",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0666",
          "name": "SET_CHAR_WAIT_STATE_REPEAT",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0667",
          "name": "REGISTER_BEST_TIME_GOGO_FAGGIO",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0668",
          "name": "LOCK_GARAGE",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0669",
          "name": "IS_FINAL_GAME",
          "num_params": 0
        },
        {
          "id": "066A",
          "name": "SET_ALLOWED_COLLISION",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "066B",
          "name": "REGISTER_GUARDIAN_ANGEL_LEVEL",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "066C",
          "name": "DISPLAY_ONSCREEN_TIMER_WITH_NUMBER_AND_2_STRINGS",
          "num_params": 6,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            },
            {
              "name": "_p3",
              "type": "any"
            },
            {
              "name": "_p4",
              "type": "any"
            },
            {
              "name": "_p5",
              "type": "any"
            }
          ]
        },
        {
          "id": "066D",
          "name": "GET_PLAYER_STORED_WEAPON",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "066E",
          "name": "DISABLE_PAUSE_MENU",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "066F",
          "name": "IS_CHANNEL_PLAYING",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0670",
          "name": "SET_CLOCK_EVENT_WARNING",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0671",
          "name": "SET_EXTRA_COLOUR_LIGHT_DIRECTION",
          "num_params": 3,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            },
            {
              "name": "_p2",
              "type": "any"
            }
          ]
        },
        {
          "id": "0672",
          "name": "SET_CHAR_CAN_BE_TARGETTED_BY_LEADER",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0673",
          "name": "PRINT_HELP_NO_BRIEF",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0674",
          "name": "PRINT_HELP_FOREVER_NO_BRIEF",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0675",
          "name": "PRINT_HELP_ALWAYS_NO_BRIEF",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0676",
          "name": "PRINT_HELP_FOREVER_ALWAYS_NO_BRIEF",
          "num_params": 1,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            }
          ]
        },
        {
          "id": "0677",
          "name": "SET_CAR_IS_REWARD",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        },
        {
          "id": "0678",
          "name": "FREEZE_ALL_PLAYER_FOLLOWERS",
          "num_params": 2,
          "input": [
            {
              "name": "_p0",
              "type": "any"
            },
            {
              "name": "_p1",
              "type": "any"
            }
          ]
        }
      ]
    }
  ],
  "classes": [
    {
      "name": "Blip",
      "constructable": true,
      "desc": "Markers and Radar Icons"
    },
    {
      "name": "Car",
      "constructable": true,
      "desc": "Script Vehicles"
    },
    {
      "name": "CarGenerator",
      "constructable": true,
      "desc": "Parking Lots"
    },
    {
      "name": "Char",
      "constructable": true,
      "desc": "Script Characters (Actors)"
    },
    {
      "name": "CutsceneObject",
      "constructable": true,
      "desc": "Cutscene Objects"
    },
    {
      "name": "Garage",
      "constructable": false,
      "desc": "Garages"
    },
    {
      "name": "Object",
      "constructable": true,
      "desc": "Script Objects"
    },
    {
      "name": "ObjectPath",
      "constructable": true,
      "desc": "Pre-recorded script paths"
    },
    {
      "name": "Phone",
      "constructable": true,
      "desc": "Phone Booth Calls and Messages"
    },
    {
      "name": "Pickup",
      "constructable": true,
      "desc": "Interactive Script Objects"
    },
    {
      "name": "Player",
      "constructable": true,
      "desc": "The Main Character Controlled by a Player"
    },
    {
      "name": "ScriptFire",
      "constructable": true,
      "desc": "Script Fires"
    },
    {
      "name": "Sound",
      "constructable": true,
      "desc": "Positionable Audio Effects"
    },
    {
      "name": "Sphere",
      "constructable": true,
      "desc": "Cylinder Markers"
    },
    {
      "name": "Boat",
      "constructable": true,
      "extends": "Car",
      "desc": "Boats"
    },
    {
      "name": "Heli",
      "constructable": true,
      "extends": "Car",
      "desc": "Choppers"
    },
    {
      "name": "Plane",
      "constructable": true,
      "extends": "Car",
      "desc": "Planes"
    },
    {
      "name": "Tank",
      "constructable": true,
      "extends": "Car",
      "desc": "Tanks"
    },
    {
      "name": "Audio",
      "constructable": false,
      "desc": "Audio Effects"
    },
    {
      "name": "Camera",
      "constructable": false,
      "desc": "Camera/View Manipulation"
    },
    {
      "name": "Clock",
      "constructable": false,
      "desc": "Time Manipulation"
    },
    {
      "name": "Credits",
      "constructable": false,
      "desc": "End-Game Credits"
    },
    {
      "name": "Cutscene",
      "constructable": false,
      "desc": "Mission Cutscenes"
    },
    {
      "name": "Debugger",
      "constructable": false,
      "desc": "Various Debugging Utilities"
    },
    {
      "name": "Fx",
      "constructable": false,
      "desc": "Various 2D Effects (Shadows, Lights, Coronas, Particles)"
    },
    {
      "name": "Game",
      "constructable": false,
      "desc": "Game State"
    },
    {
      "name": "Gang",
      "constructable": false,
      "desc": "Gangs Configuration"
    },
    {
      "name": "Hud",
      "constructable": false,
      "desc": "Game UI"
    },
    {
      "name": "KillFrenzy",
      "constructable": false,
      "desc": "Rampages Logic"
    },
    {
      "name": "Math",
      "constructable": false,
      "desc": "Math and Conversion Utilities"
    },
    {
      "name": "Mission",
      "constructable": false,
      "desc": "Current Mission control"
    },
    {
      "name": "Pad",
      "constructable": false,
      "desc": "Input Controls"
    },
    {
      "name": "Path",
      "constructable": false,
      "desc": "Path Configuration And Lookup"
    },
    {
      "name": "Rc",
      "constructable": false,
      "desc": "Remote-Controlled Cars"
    },
    {
      "name": "Restart",
      "constructable": false,
      "desc": "Configuration of Respawn Points"
    },
    {
      "name": "Shortcut",
      "constructable": false,
      "desc": "Mission Shortcut Taxi"
    },
    {
      "name": "Stat",
      "constructable": false,
      "desc": "Game Statistics"
    },
    {
      "name": "Streaming",
      "constructable": false,
      "desc": "Loading Game Assets"
    },
    {
      "name": "StuckCarCheck",
      "constructable": false,
      "desc": "Stuck Cars Check"
    },
    {
      "name": "Text",
      "constructable": false,
      "desc": "Text Messages"
    },
    {
      "name": "Txd",
      "constructable": false,
      "desc": "Texture Dictionaries"
    },
    {
      "name": "Weather",
      "constructable": false,
      "desc": "Weather Control"
    },
    {
      "name": "World",
      "constructable": false,
      "desc": "Traffic, Population and other Physical Entities"
    },
    {
      "name": "Zone",
      "constructable": false,
      "desc": "Game Map Areas Configuration"
    },
    {
      "name": "Crane",
      "constructable": false,
      "desc": ""
    },
    {
      "name": "Pacman",
      "constructable": false,
      "desc": ""
    },
    {
      "name": "CutsceneHead",
      "constructable": true,
      "desc": ""
    },
    {
      "name": "DrugRun",
      "constructable": false,
      "desc": ""
    },
    {
      "name": "ChaseScene",
      "constructable": false,
      "desc": ""
    },
    {
      "name": "DrugDropOff",
      "constructable": false,
      "desc": ""
    },
    {
      "name": "CatalinaHeli",
      "constructable": false,
      "desc": ""
    }
  ]
}